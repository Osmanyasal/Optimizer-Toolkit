# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
INCLUDES += -Isrc
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LIBS += -lpthread -ldl -ltensorflow -lspdlog -lpfm
LDDEPS +=
LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
define PREBUILDCMDS
	@echo Running prebuild commands
	@echo [CHECK MSR-SAFE]
	if [ ! -f ./lib/msr-safe/all_set ]; then \
	    cd ./lib/msr-safe && make clean && make && make install && (sudo rmmod msr-safe || true) && \
	    (sudo insmod ./msr-safe.ko || true) && sudo chmod g+rw /dev/cpu/*/msr_safe /dev/cpu/msr_* && \
	    sudo chgrp rt7 /dev/cpu/*/msr_safe /dev/cpu/msr_batch /dev/cpu/msr_safe_version && \
	    sudo chgrp rt7 /dev/cpu/msr_allowlist && \
	    echo "0x00000620 0xFFFFFFFFFFFFFFFF" > /dev/cpu/msr_allowlist && \
	    touch all_set; \
	fi
	@echo [CHECK SPDLOG]
	if [ ! -f ./lib/spdlog/build/libspdlog.a ]; then \
	    cd ./lib/spdlog && ./install.sh; \
	fi
	@echo [CHECK LIBPFM]
	if [ ! -f ./lib/libpfm4/all_set ]; then \
	    cd ./lib/libpfm4 && ./install.sh; \
	fi
	@echo [CHECK EVENTS]
	if [ ! -f ./src/core/events/all_set ]; then \
	    echo "⛏️ Exporting events from libpfm4" && \
	    mkdir -p ./src/core/events && \
	    cd ./src/utils && \
	    python3 pmu_parser.py $(shell find ./lib/libpfm4/lib/events -type f \( -name "intel*.h" -or -name "amd*.h" -or -name "arm*.h" -or -name "power*.h" \) -exec echo "../../{}" \;) && \
	    touch ../.././src/core/events/all_set; \
	fi
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug)
TARGETDIR = bin/Debug
TARGET = $(TARGETDIR)/libOptimizerToolkitStatic.a
OBJDIR = bin/obj/Debug/OptimizerToolkitStatic
DEFINES += -DOPTKIT_MODE_DEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g -Wall -O0 -g -fopenmp -msse -march=native
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++11 -Wall -O0 -g -fopenmp -msse -march=native
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -fopenmp

else ifeq ($(config),release)
TARGETDIR = bin/Release
TARGET = $(TARGETDIR)/libOptimizerToolkitStatic.a
OBJDIR = bin/obj/Release/OptimizerToolkitStatic
DEFINES += -DOPTKIT_MODE_NDEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -Wall -O2 -fopenmp -msse -march=native
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++11 -Wall -O2 -fopenmp -msse -march=native
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s -fopenmp

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/base_governor.o
GENERATED += $(OBJDIR)/bdw_recepies.o
GENERATED += $(OBJDIR)/block_group_profiler.o
GENERATED += $(OBJDIR)/block_profiler.o
GENERATED += $(OBJDIR)/block_timer.o
GENERATED += $(OBJDIR)/cpu_frequency.o
GENERATED += $(OBJDIR)/icl_governor.o
GENERATED += $(OBJDIR)/icl_recepies.o
GENERATED += $(OBJDIR)/libpfm4_wrapper.o
GENERATED += $(OBJDIR)/logger.o
GENERATED += $(OBJDIR)/optkit.o
GENERATED += $(OBJDIR)/pmu_event_manager.o
GENERATED += $(OBJDIR)/pmu_utils.o
GENERATED += $(OBJDIR)/profiler_config.o
GENERATED += $(OBJDIR)/query.o
GENERATED += $(OBJDIR)/query_frequency.o
GENERATED += $(OBJDIR)/query_pmu.o
GENERATED += $(OBJDIR)/query_rapl.o
GENERATED += $(OBJDIR)/rapl.o
GENERATED += $(OBJDIR)/rapl_perf_reader.o
GENERATED += $(OBJDIR)/rapl_profiler.o
GENERATED += $(OBJDIR)/rapl_utils.o
GENERATED += $(OBJDIR)/skl_governor.o
GENERATED += $(OBJDIR)/skl_recepies.o
GENERATED += $(OBJDIR)/tma_metrics.o
GENERATED += $(OBJDIR)/tmanalysis.o
GENERATED += $(OBJDIR)/utils.o
GENERATED += $(OBJDIR)/zen3_recepies.o
OBJECTS += $(OBJDIR)/base_governor.o
OBJECTS += $(OBJDIR)/bdw_recepies.o
OBJECTS += $(OBJDIR)/block_group_profiler.o
OBJECTS += $(OBJDIR)/block_profiler.o
OBJECTS += $(OBJDIR)/block_timer.o
OBJECTS += $(OBJDIR)/cpu_frequency.o
OBJECTS += $(OBJDIR)/icl_governor.o
OBJECTS += $(OBJDIR)/icl_recepies.o
OBJECTS += $(OBJDIR)/libpfm4_wrapper.o
OBJECTS += $(OBJDIR)/logger.o
OBJECTS += $(OBJDIR)/optkit.o
OBJECTS += $(OBJDIR)/pmu_event_manager.o
OBJECTS += $(OBJDIR)/pmu_utils.o
OBJECTS += $(OBJDIR)/profiler_config.o
OBJECTS += $(OBJDIR)/query.o
OBJECTS += $(OBJDIR)/query_frequency.o
OBJECTS += $(OBJDIR)/query_pmu.o
OBJECTS += $(OBJDIR)/query_rapl.o
OBJECTS += $(OBJDIR)/rapl.o
OBJECTS += $(OBJDIR)/rapl_perf_reader.o
OBJECTS += $(OBJDIR)/rapl_profiler.o
OBJECTS += $(OBJDIR)/rapl_utils.o
OBJECTS += $(OBJDIR)/skl_governor.o
OBJECTS += $(OBJDIR)/skl_recepies.o
OBJECTS += $(OBJDIR)/tma_metrics.o
OBJECTS += $(OBJDIR)/tmanalysis.o
OBJECTS += $(OBJDIR)/utils.o
OBJECTS += $(OBJDIR)/zen3_recepies.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking OptimizerToolkitStatic
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning OptimizerToolkitStatic
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) del /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/zen3_recepies.o: src/core/event_recepies/amd/zen3/zen3_recepies.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/bdw_recepies.o: src/core/event_recepies/intel/bdw/bdw_recepies.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/icl_governor.o: src/core/event_recepies/intel/icl/icl_governor.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/icl_recepies.o: src/core/event_recepies/intel/icl/icl_recepies.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/skl_governor.o: src/core/event_recepies/intel/skl/skl_governor.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/skl_recepies.o: src/core/event_recepies/intel/skl/skl_recepies.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/tma_metrics.o: src/core/event_recepies/tma_metrics.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/tmanalysis.o: src/core/event_recepies/tmanalysis.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/base_governor.o: src/core/freq/base_governor.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/cpu_frequency.o: src/core/freq/cpu_frequency.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/query_frequency.o: src/core/freq/query_frequency.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/block_group_profiler.o: src/core/profiling/pmu/block_group_profiler.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/block_profiler.o: src/core/profiling/pmu/block_profiler.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/libpfm4_wrapper.o: src/core/profiling/pmu/libpfm4_wrapper.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/pmu_event_manager.o: src/core/profiling/pmu/pmu_event_manager.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/pmu_utils.o: src/core/profiling/pmu/pmu_utils.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/query_pmu.o: src/core/profiling/pmu/query_pmu.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/profiler_config.o: src/core/profiling/profiler_config.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/query_rapl.o: src/core/profiling/rapl/query_rapl.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/rapl.o: src/core/profiling/rapl/rapl.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/rapl_perf_reader.o: src/core/profiling/rapl/rapl_perf_reader.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/rapl_profiler.o: src/core/profiling/rapl/rapl_profiler.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/rapl_utils.o: src/core/profiling/rapl/rapl_utils.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/query.o: src/core/query.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/optkit.o: src/optkit.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/logger.o: src/utils/logging/logger.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/block_timer.o: src/utils/profiling/block_timer.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/utils.o: src/utils/utils.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif