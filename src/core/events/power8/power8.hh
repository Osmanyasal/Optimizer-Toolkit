#include <cstdint>

namespace optkit::ibm{
	enum class power8 : uint64_t {
		PM_1LPAR_CYC = 0x1f05e, // Number of cycles in single lpar mode. All threads in the core are assigned to the same lpar
		PM_1PLUS_PPC_CMPL = 0x100f2, // 1 or more ppc insts finished
		PM_1PLUS_PPC_DISP = 0x400f2, // Cycles at least one Instr Dispatched
		PM_2LPAR_CYC = 0x2006e, // Cycles in 2-lpar mode. Threads 0-3 belong to Lpar0 and threads 4-7 belong to Lpar1
		PM_4LPAR_CYC = 0x4e05e, // Number of cycles in 4 LPAR mode. Threads 0-1 belong to lpar0
		PM_ALL_CHIP_PUMP_CPRED = 0x610050, // correct) for all data types (demand load
		PM_ALL_GRP_PUMP_CPRED = 0x520050, // Initial and Final Pump Scope and data sourced across this scope was group pump for all data types (demand load
		PM_ALL_GRP_PUMP_MPRED = 0x620052, // Final Pump Scope (Group) ended up either larger or smaller than Initial Pump Scope for all data types (demand load
		PM_ALL_GRP_PUMP_MPRED_RTY = 0x610052, // Final Pump Scope (Group) ended up larger than Initial Pump Scope (Chip) for all data types (demand load
		PM_ALL_PUMP_CPRED = 0x610054, // Pump prediction correct. Counts across all types of pumps for all data types (demand load
		PM_ALL_PUMP_MPRED = 0x640052, // Pump misprediction. Counts across all types of pumps for all data types (demand load
		PM_ALL_SYS_PUMP_CPRED = 0x630050, // Initial and Final Pump Scope was system pump for all data types (demand load
		PM_ALL_SYS_PUMP_MPRED = 0x630052, // Final Pump Scope (system) mispredicted. Either the original scope was too small (Chip/Group) or the original scope was System and it should have been smaller. Counts for all data types (demand load
		PM_ALL_SYS_PUMP_MPRED_RTY = 0x640050, // Final Pump Scope (system) ended up larger than Initial Pump Scope (Chip/Group) for all data types (demand load
		PM_ANY_THRD_RUN_CYC = 0x100fa, // One of threads in run_cycles
		PM_BACK_BR_CMPL = 0x2505e, // Branch instruction completed with a target address less than current instruction address
		PM_BANK_CONFLICT = 0x4082, // Read blocked due to interleave conflict. The ifar logic will detect an interleave conflict and kill the data that was read that cycle.
		PM_BRU_FIN = 0x10068, // Branch Instruction Finished
		PM_BR_2PATH = 0x20036, // two path branch
		PM_BR_BC_8 = 0x5086, // Pairable BC+8 branch that has not been converted to a Resolve Finished in the BRU pipeline
		PM_BR_BC_8_CONV = 0x5084, // Pairable BC+8 branch that was converted to a Resolve Finished in the BRU pipeline.
		PM_BR_CMPL = 0x40060, // Branch Instruction completed
		PM_BR_MPRED_CCACHE = 0x40ac, // Conditional Branch Completed that was Mispredicted due to the Count Cache Target Prediction
		PM_BR_MPRED_CMPL = 0x400f6, // Number of Branch Mispredicts
		PM_BR_MPRED_CR = 0x40b8, // Conditional Branch Completed that was Mispredicted due to the BHT Direction Prediction (taken/not taken).
		PM_BR_MPRED_LSTACK = 0x40ae, // Conditional Branch Completed that was Mispredicted due to the Link Stack Target Prediction
		PM_BR_MPRED_TA = 0x40ba, // Conditional Branch Completed that was Mispredicted due to the Target Address Prediction from the Count Cache or Link Stack. Only XL-form branches that resolved Taken set this event.
		PM_BR_MRK_2PATH = 0x10138, // marked two path branch
		PM_BR_PRED_BR0 = 0x409c, // Conditional Branch Completed on BR0 (1st branch in group) in which the HW predicted the Direction or Target
		PM_BR_PRED_BR1 = 0x409e, // Conditional Branch Completed on BR1 (2nd branch in group) in which the HW predicted the Direction or Target. Note: BR1 can only be used in Single Thread Mode. In all of the SMT modes
		PM_BR_PRED_BR_CMPL = 0x489c, // Completion Time Event. This event can also be calculated from the direct bus as follows: if_pc_br0_br_pred(0) OR if_pc_br0_br_pred(1).
		PM_BR_PRED_CCACHE_BR0 = 0x40a4, // Conditional Branch Completed on BR0 that used the Count Cache for Target Prediction
		PM_BR_PRED_CCACHE_BR1 = 0x40a6, // Conditional Branch Completed on BR1 that used the Count Cache for Target Prediction
		PM_BR_PRED_CCACHE_CMPL = 0x48a4, // Completion Time Event. This event can also be calculated from the direct bus as follows: if_pc_br0_br_pred(0) AND if_pc_br0_pred_type.
		PM_BR_PRED_CR_BR0 = 0x40b0, // Conditional Branch Completed on BR0 that had its direction predicted. I-form branches do not set this event. In addition
		PM_BR_PRED_CR_BR1 = 0x40b2, // Conditional Branch Completed on BR1 that had its direction predicted. I-form branches do not set this event. In addition
		PM_BR_PRED_CR_CMPL = 0x48b0, // '1'.
		PM_BR_PRED_LSTACK_BR0 = 0x40a8, // Conditional Branch Completed on BR0 that used the Link Stack for Target Prediction
		PM_BR_PRED_LSTACK_BR1 = 0x40aa, // Conditional Branch Completed on BR1 that used the Link Stack for Target Prediction
		PM_BR_PRED_LSTACK_CMPL = 0x48a8, // Completion Time Event. This event can also be calculated from the direct bus as follows: if_pc_br0_br_pred(0) AND (not if_pc_br0_pred_type).
		PM_BR_PRED_TA_BR0 = 0x40b4, // Conditional Branch Completed on BR0 that had its target address predicted. Only XL-form branches set this event.
		PM_BR_PRED_TA_BR1 = 0x40b6, // Conditional Branch Completed on BR1 that had its target address predicted. Only XL-form branches set this event.
		PM_BR_PRED_TA_CMPL = 0x48b4, // '1'.
		PM_BR_TAKEN_CMPL = 0x200fa, // New event for Branch Taken
		PM_BR_UNCOND_BR0 = 0x40a0, // Unconditional Branch Completed on BR0. HW branch prediction was not used for this branch. This can be an I-form branch
		PM_BR_UNCOND_BR1 = 0x40a2, // Unconditional Branch Completed on BR1. HW branch prediction was not used for this branch. This can be an I-form branch
		PM_BR_UNCOND_CMPL = 0x48a0, // 00 AND if_pc_br0_completed.
		PM_CASTOUT_ISSUED = 0x3094, // Castouts issued
		PM_CASTOUT_ISSUED_GPR = 0x3096, // Castouts issued GPR
		PM_CHIP_PUMP_CPRED = 0x10050, // correct) for all data types excluding data prefetch (demand load
		PM_CLB_HELD = 0x2090, // CLB Hold: Any Reason
		PM_CMPLU_STALL = 0x4000a, // Completion stall
		PM_CMPLU_STALL_BRU = 0x4d018, // Completion stall due to a Branch Unit
		PM_CMPLU_STALL_BRU_CRU = 0x2d018, // Completion stall due to IFU
		PM_CMPLU_STALL_COQ_FULL = 0x30026, // Completion stall due to CO q full
		PM_CMPLU_STALL_DCACHE_MISS = 0x2c012, // Completion stall by Dcache miss
		PM_CMPLU_STALL_DMISS_L21_L31 = 0x2c018, // Completion stall by Dcache miss which resolved on chip (excluding local L2/L3)
		PM_CMPLU_STALL_DMISS_L2L3 = 0x2c016, // Completion stall by Dcache miss which resolved in L2/L3
		PM_CMPLU_STALL_DMISS_L2L3_CONFLICT = 0x4c016, // Completion stall due to cache miss that resolves in the L2 or L3 with a conflict
		PM_CMPLU_STALL_DMISS_L3MISS = 0x4c01a, // Completion stall due to cache miss resolving missed the L3
		PM_CMPLU_STALL_DMISS_LMEM = 0x4c018, // Completion stall due to cache miss that resolves in local memory
		PM_CMPLU_STALL_DMISS_REMOTE = 0x2c01c, // Completion stall by Dcache miss which resolved from remote chip (cache or memory)
		PM_CMPLU_STALL_ERAT_MISS = 0x4c012, // Completion stall due to LSU reject ERAT miss
		PM_CMPLU_STALL_FLUSH = 0x30038, // completion stall due to flush by own thread
		PM_CMPLU_STALL_FXLONG = 0x4d016, // Completion stall due to a long latency fixed point instruction
		PM_CMPLU_STALL_FXU = 0x2d016, // Completion stall due to FXU
		PM_CMPLU_STALL_HWSYNC = 0x30036, // completion stall due to hwsync
		PM_CMPLU_STALL_LOAD_FINISH = 0x4d014, // Completion stall due to a Load finish
		PM_CMPLU_STALL_LSU = 0x2c010, // Completion stall by LSU instruction
		PM_CMPLU_STALL_LWSYNC = 0x10036, // completion stall due to isync/lwsync
		PM_CMPLU_STALL_MEM_ECC_DELAY = 0x30028, // Completion stall due to mem ECC delay
		PM_CMPLU_STALL_NO_NTF = 0x2e01c, // Completion stall due to nop
		PM_CMPLU_STALL_NTCG_FLUSH = 0x2e01e, // Completion stall due to ntcg flush
		PM_CMPLU_STALL_OTHER_CMPL = 0x30006, // Instructions core completed while this tread was stalled
		PM_CMPLU_STALL_REJECT = 0x4c010, // Completion stall due to LSU reject
		PM_CMPLU_STALL_REJECT_LHS = 0x2c01a, // Completion stall due to reject (load hit store)
		PM_CMPLU_STALL_REJ_LMQ_FULL = 0x4c014, // Completion stall due to LSU reject LMQ full
		PM_CMPLU_STALL_SCALAR = 0x4d010, // Completion stall due to VSU scalar instruction
		PM_CMPLU_STALL_SCALAR_LONG = 0x2d010, // Completion stall due to VSU scalar long latency instruction
		PM_CMPLU_STALL_STORE = 0x2c014, // Completion stall by stores this includes store agen finishes in pipe LS0/LS1 and store data finishes in LS2/LS3
		PM_CMPLU_STALL_ST_FWD = 0x4c01c, // Completion stall due to store forward
		PM_CMPLU_STALL_THRD = 0x1001c, // Completion Stalled due to thread conflict. Group ready to complete but it was another thread's turn
		PM_CMPLU_STALL_VECTOR = 0x2d014, // Completion stall due to VSU vector instruction
		PM_CMPLU_STALL_VECTOR_LONG = 0x4d012, // Completion stall due to VSU vector long instruction
		PM_CMPLU_STALL_VSU = 0x2d012, // Completion stall due to VSU instruction
		PM_CO0_ALLOC = 0x16083, // CO mach 0 Busy. Used by PMU to sample ave RC livetime(mach0 used as sample point)
		PM_CO0_BUSY = 0x16082, // CO mach 0 Busy. Used by PMU to sample ave RC livetime(mach0 used as sample point)
		PM_CO_DISP_FAIL = 0x517082, // CO dispatch failed due to all CO machines being busy
		PM_CO_TM_SC_FOOTPRINT = 0x527084, // L2 did a cleanifdirty CO to the L3 (ie created an SC line in the L3)
		PM_CO_USAGE = 0x3608a, // Continuous 16 cycle(2to1) window where this signals rotates thru sampling each L2 CO machine busy. PMU uses this wave to then do 16 cyc count to sample total number of machs running
		PM_CRU_FIN = 0x40066, // IFU Finished a (non-branch) instruction
		PM_CYC = 0x1e, // Cycles
		PM_DATA_ALL_CHIP_PUMP_CPRED = 0x61c050, // correct) for either demand loads or data prefetch
		PM_DATA_ALL_FROM_DL2L3_MOD = 0x64c048, // The processor's data cache was reloaded with Modified (M) data from another chip's L2 or L3 on a different Node or Group (Distant)
		PM_DATA_ALL_FROM_DL2L3_SHR = 0x63c048, // The processor's data cache was reloaded with Shared (S) data from another chip's L2 or L3 on a different Node or Group (Distant)
		PM_DATA_ALL_FROM_DL4 = 0x63c04c, // The processor's data cache was reloaded from another chip's L4 on a different Node or Group (Distant) due to either demand loads or data prefetch
		PM_DATA_ALL_FROM_DMEM = 0x64c04c, // The processor's data cache was reloaded from another chip's memory on the same Node or Group (Distant) due to either demand loads or data prefetch
		PM_DATA_ALL_FROM_L2 = 0x61c042, // The processor's data cache was reloaded from local core's L2 due to either demand loads or data prefetch
		PM_DATA_ALL_FROM_L21_MOD = 0x64c046, // The processor's data cache was reloaded with Modified (M) data from another core's L2 on the same chip due to either demand loads or data prefetch
		PM_DATA_ALL_FROM_L21_SHR = 0x63c046, // The processor's data cache was reloaded with Shared (S) data from another core's L2 on the same chip due to either demand loads or data prefetch
		PM_DATA_ALL_FROM_L2MISS_MOD = 0x61c04e, // The processor's data cache was reloaded from a localtion other than the local core's L2 due to either demand loads or data prefetch
		PM_DATA_ALL_FROM_L2_DISP_CONFLICT_LDHITST = 0x63c040, // The processor's data cache was reloaded from local core's L2 with load hit store conflict due to either demand loads or data prefetch
		PM_DATA_ALL_FROM_L2_DISP_CONFLICT_OTHER = 0x64c040, // The processor's data cache was reloaded from local core's L2 with dispatch conflict due to either demand loads or data prefetch
		PM_DATA_ALL_FROM_L2_MEPF = 0x62c040, // The processor's data cache was reloaded from local core's L2 hit without dispatch conflicts on Mepf state due to either demand loads or data prefetch
		PM_DATA_ALL_FROM_L2_NO_CONFLICT = 0x61c040, // The processor's data cache was reloaded from local core's L2 without conflict due to either demand loads or data prefetch
		PM_DATA_ALL_FROM_L3 = 0x64c042, // The processor's data cache was reloaded from local core's L3 due to either demand loads or data prefetch
		PM_DATA_ALL_FROM_L31_ECO_MOD = 0x64c044, // The processor's data cache was reloaded with Modified (M) data from another core's ECO L3 on the same chip due to either demand loads or data prefetch
		PM_DATA_ALL_FROM_L31_ECO_SHR = 0x63c044, // The processor's data cache was reloaded with Shared (S) data from another core's ECO L3 on the same chip due to either demand loads or data prefetch
		PM_DATA_ALL_FROM_L31_MOD = 0x62c044, // The processor's data cache was reloaded with Modified (M) data from another core's L3 on the same chip due to either demand loads or data prefetch
		PM_DATA_ALL_FROM_L31_SHR = 0x61c046, // The processor's data cache was reloaded with Shared (S) data from another core's L3 on the same chip due to either demand loads or data prefetch
		PM_DATA_ALL_FROM_L3MISS_MOD = 0x64c04e, // The processor's data cache was reloaded from a localtion other than the local core's L3 due to either demand loads or data prefetch
		PM_DATA_ALL_FROM_L3_DISP_CONFLICT = 0x63c042, // The processor's data cache was reloaded from local core's L3 with dispatch conflict due to either demand loads or data prefetch
		PM_DATA_ALL_FROM_L3_MEPF = 0x62c042, // The processor's data cache was reloaded from local core's L3 without dispatch conflicts hit on Mepf state due to either demand loads or data prefetch
		PM_DATA_ALL_FROM_L3_NO_CONFLICT = 0x61c044, // The processor's data cache was reloaded from local core's L3 without conflict due to either demand loads or data prefetch
		PM_DATA_ALL_FROM_LL4 = 0x61c04c, // The processor's data cache was reloaded from the local chip's L4 cache due to either demand loads or data prefetch
		PM_DATA_ALL_FROM_LMEM = 0x62c048, // The processor's data cache was reloaded from the local chip's Memory due to either demand loads or data prefetch
		PM_DATA_ALL_FROM_MEMORY = 0x62c04c, // The processor's data cache was reloaded from a memory location including L4 from local remote or distant due to either demand loads or data prefetch
		PM_DATA_ALL_FROM_OFF_CHIP_CACHE = 0x64c04a, // The processor's data cache was reloaded either shared or modified data from another core's L2/L3 on a different chip (remote or distant) due to either demand loads or data prefetch
		PM_DATA_ALL_FROM_ON_CHIP_CACHE = 0x61c048, // The processor's data cache was reloaded either shared or modified data from another core's L2/L3 on the same chip due to either demand loads or data prefetch
		PM_DATA_ALL_FROM_RL2L3_MOD = 0x62c046, // The processor's data cache was reloaded with Modified (M) data from another chip's L2 or L3 on the same Node or Group (Remote)
		PM_DATA_ALL_FROM_RL2L3_SHR = 0x61c04a, // The processor's data cache was reloaded with Shared (S) data from another chip's L2 or L3 on the same Node or Group (Remote)
		PM_DATA_ALL_FROM_RL4 = 0x62c04a, // The processor's data cache was reloaded from another chip's L4 on the same Node or Group (Remote) due to either demand loads or data prefetch
		PM_DATA_ALL_FROM_RMEM = 0x63c04a, // The processor's data cache was reloaded from another chip's memory on the same Node or Group (Remote) due to either demand loads or data prefetch
		PM_DATA_ALL_GRP_PUMP_CPRED = 0x62c050, // correct) for either demand loads or data prefetch
		PM_DATA_ALL_GRP_PUMP_MPRED = 0x62c052, // Final Pump Scope (Group) ended up either larger or smaller than Initial Pump Scope for either demand loads or data prefetch
		PM_DATA_ALL_GRP_PUMP_MPRED_RTY = 0x61c052, // Final Pump Scope (Group) ended up larger than Initial Pump Scope (Chip) for either demand loads or data prefetch
		PM_DATA_ALL_PUMP_CPRED = 0x61c054, // Pump prediction correct. Counts across all types of pumps for either demand loads or data prefetch
		PM_DATA_ALL_PUMP_MPRED = 0x64c052, // Pump misprediction. Counts across all types of pumps for either demand loads or data prefetch
		PM_DATA_ALL_SYS_PUMP_CPRED = 0x63c050, // correct) for either demand loads or data prefetch
		PM_DATA_ALL_SYS_PUMP_MPRED = 0x63c052, // Final Pump Scope (system) mispredicted. Either the original scope was too small (Chip/Group) or the original scope was System and it should have been smaller. Counts for either demand loads or data prefetch
		PM_DATA_ALL_SYS_PUMP_MPRED_RTY = 0x64c050, // Final Pump Scope (system) ended up larger than Initial Pump Scope (Chip/Group) for either demand loads or data prefetch
		PM_DATA_CHIP_PUMP_CPRED = 0x1c050, // correct) for a demand load
		PM_DATA_FROM_DL2L3_MOD = 0x4c048, // The processor's data cache was reloaded with Modified (M) data from another chip's L2 or L3 on a different Node or Group (Distant)
		PM_DATA_FROM_DL2L3_SHR = 0x3c048, // The processor's data cache was reloaded with Shared (S) data from another chip's L2 or L3 on a different Node or Group (Distant)
		PM_DATA_FROM_DL4 = 0x3c04c, // The processor's data cache was reloaded from another chip's L4 on a different Node or Group (Distant) due to a demand load
		PM_DATA_FROM_DMEM = 0x4c04c, // The processor's data cache was reloaded from another chip's memory on the same Node or Group (Distant) due to a demand load
		PM_DATA_FROM_L2 = 0x1c042, // The processor's data cache was reloaded from local core's L2 due to a demand load
		PM_DATA_FROM_L21_MOD = 0x4c046, // The processor's data cache was reloaded with Modified (M) data from another core's L2 on the same chip due to a demand load
		PM_DATA_FROM_L21_SHR = 0x3c046, // The processor's data cache was reloaded with Shared (S) data from another core's L2 on the same chip due to a demand load
		PM_DATA_FROM_L2MISS = 0x200fe, // Demand LD - L2 Miss (not L2 hit)
		PM_DATA_FROM_L2MISS_MOD = 0x1c04e, // The processor's data cache was reloaded from a localtion other than the local core's L2 due to a demand load
		PM_DATA_FROM_L2_DISP_CONFLICT_LDHITST = 0x3c040, // The processor's data cache was reloaded from local core's L2 with load hit store conflict due to a demand load
		PM_DATA_FROM_L2_DISP_CONFLICT_OTHER = 0x4c040, // The processor's data cache was reloaded from local core's L2 with dispatch conflict due to a demand load
		PM_DATA_FROM_L2_MEPF = 0x2c040, // The processor's data cache was reloaded from local core's L2 hit without dispatch conflicts on Mepf state due to a demand load
		PM_DATA_FROM_L2_NO_CONFLICT = 0x1c040, // The processor's data cache was reloaded from local core's L2 without conflict due to a demand load
		PM_DATA_FROM_L3 = 0x4c042, // The processor's data cache was reloaded from local core's L3 due to a demand load
		PM_DATA_FROM_L31_ECO_MOD = 0x4c044, // The processor's data cache was reloaded with Modified (M) data from another core's ECO L3 on the same chip due to a demand load
		PM_DATA_FROM_L31_ECO_SHR = 0x3c044, // The processor's data cache was reloaded with Shared (S) data from another core's ECO L3 on the same chip due to a demand load
		PM_DATA_FROM_L31_MOD = 0x2c044, // The processor's data cache was reloaded with Modified (M) data from another core's L3 on the same chip due to a demand load
		PM_DATA_FROM_L31_SHR = 0x1c046, // The processor's data cache was reloaded with Shared (S) data from another core's L3 on the same chip due to a demand load
		PM_DATA_FROM_L3MISS = 0x300fe, // Demand LD - L3 Miss (not L2 hit and not L3 hit)
		PM_DATA_FROM_L3MISS_MOD = 0x4c04e, // The processor's data cache was reloaded from a localtion other than the local core's L3 due to a demand load
		PM_DATA_FROM_L3_DISP_CONFLICT = 0x3c042, // The processor's data cache was reloaded from local core's L3 with dispatch conflict due to a demand load
		PM_DATA_FROM_L3_MEPF = 0x2c042, // The processor's data cache was reloaded from local core's L3 without dispatch conflicts hit on Mepf state due to a demand load
		PM_DATA_FROM_L3_NO_CONFLICT = 0x1c044, // The processor's data cache was reloaded from local core's L3 without conflict due to a demand load
		PM_DATA_FROM_LL4 = 0x1c04c, // The processor's data cache was reloaded from the local chip's L4 cache due to a demand load
		PM_DATA_FROM_LMEM = 0x2c048, // The processor's data cache was reloaded from the local chip's Memory due to a demand load
		PM_DATA_FROM_MEM = 0x400fe, // The processor's data cache was reloaded from a memory location including L4 from local remote or distant due to a demand load
		PM_DATA_FROM_MEMORY = 0x2c04c, // The processor's data cache was reloaded from a memory location including L4 from local remote or distant due to a demand load
		PM_DATA_FROM_OFF_CHIP_CACHE = 0x4c04a, // The processor's data cache was reloaded either shared or modified data from another core's L2/L3 on a different chip (remote or distant) due to a demand load
		PM_DATA_FROM_ON_CHIP_CACHE = 0x1c048, // The processor's data cache was reloaded either shared or modified data from another core's L2/L3 on the same chip due to a demand load
		PM_DATA_FROM_RL2L3_MOD = 0x2c046, // The processor's data cache was reloaded with Modified (M) data from another chip's L2 or L3 on the same Node or Group (Remote)
		PM_DATA_FROM_RL2L3_SHR = 0x1c04a, // The processor's data cache was reloaded with Shared (S) data from another chip's L2 or L3 on the same Node or Group (Remote)
		PM_DATA_FROM_RL4 = 0x2c04a, // The processor's data cache was reloaded from another chip's L4 on the same Node or Group (Remote) due to a demand load
		PM_DATA_FROM_RMEM = 0x3c04a, // The processor's data cache was reloaded from another chip's memory on the same Node or Group (Remote) due to a demand load
		PM_DATA_GRP_PUMP_CPRED = 0x2c050, // correct) for a demand load
		PM_DATA_GRP_PUMP_MPRED = 0x2c052, // Final Pump Scope (Group) ended up either larger or smaller than Initial Pump Scope for a demand load
		PM_DATA_GRP_PUMP_MPRED_RTY = 0x1c052, // Final Pump Scope (Group) ended up larger than Initial Pump Scope (Chip) for a demand load
		PM_DATA_PUMP_CPRED = 0x1c054, // Pump prediction correct. Counts across all types of pumps for a demand load
		PM_DATA_PUMP_MPRED = 0x4c052, // Pump misprediction. Counts across all types of pumps for a demand load
		PM_DATA_SYS_PUMP_CPRED = 0x3c050, // correct) for a demand load
		PM_DATA_SYS_PUMP_MPRED = 0x3c052, // Final Pump Scope (system) mispredicted. Either the original scope was too small (Chip/Group) or the original scope was System and it should have been smaller. Counts for a demand load
		PM_DATA_SYS_PUMP_MPRED_RTY = 0x4c050, // Final Pump Scope (system) ended up larger than Initial Pump Scope (Chip/Group) for a demand load
		PM_DATA_TABLEWALK_CYC = 0x3001a, // Tablwalk Cycles (could be 1 or 2 active)
		PM_DC_COLLISIONS = 0xe0bc, // DATA Cache collisions
		PM_DC_PREF_STREAM_ALLOC = 0x1e050, // Stream marked valid. The stream could have been allocated through the hardware prefetch mechanism or through software. This is combined ls0 and ls1
		PM_DC_PREF_STREAM_CONF = 0x2e050, // A demand load referenced a line in an active prefetch stream. The stream could have been allocated through the hardware prefetch mechanism or through software. Combine up + down
		PM_DC_PREF_STREAM_FUZZY_CONF = 0x4e050, // A demand load referenced a line in an active fuzzy prefetch stream. The stream could have been allocated through the hardware prefetch mechanism or through software.Fuzzy stream confirm (out of order effects
		PM_DC_PREF_STREAM_STRIDED_CONF = 0x3e050, // A demand load referenced a line in an active strided prefetch stream. The stream could have been allocated through the hardware prefetch mechanism or through software.
		PM_DERAT_MISS_16G = 0x4c054, // Data ERAT Miss (Data TLB Access) page size 16G
		PM_DERAT_MISS_16M = 0x3c054, // Data ERAT Miss (Data TLB Access) page size 16M
		PM_DERAT_MISS_4K = 0x1c056, // Data ERAT Miss (Data TLB Access) page size 4K
		PM_DERAT_MISS_64K = 0x2c054, // Data ERAT Miss (Data TLB Access) page size 64K
		PM_DFU = 0xb0ba, // Finish DFU (all finish)
		PM_DFU_DCFFIX = 0xb0be, // Convert from fixed opcode finish (dcffix
		PM_DFU_DENBCD = 0xb0bc, // BCD->DPD opcode finish (denbcd
		PM_DFU_MC = 0xb0b8, // Finish DFU multicycle
		PM_DISP_CLB_HELD_BAL = 0x2092, // Dispatch/CLB Hold: Balance
		PM_DISP_CLB_HELD_RES = 0x2094, // Dispatch/CLB Hold: Resource
		PM_DISP_CLB_HELD_SB = 0x20a8, // Dispatch/CLB Hold: Scoreboard
		PM_DISP_CLB_HELD_SYNC = 0x2098, // Dispatch/CLB Hold: Sync type instruction
		PM_DISP_CLB_HELD_TLBIE = 0x2096, // Dispatch Hold: Due to TLBIE
		PM_DISP_HELD = 0x10006, // Dispatch Held
		PM_DISP_HELD_IQ_FULL = 0x20006, // Dispatch held due to Issue q full
		PM_DISP_HELD_MAP_FULL = 0x1002a, // Dispatch for this thread was held because the Mappers were full
		PM_DISP_HELD_SRQ_FULL = 0x30018, // Dispatch held due SRQ no room
		PM_DISP_HELD_SYNC_HOLD = 0x4003c, // Dispatch held due to SYNC hold
		PM_DISP_HOLD_GCT_FULL = 0x30a6, // Dispatch Hold Due to no space in the GCT
		PM_DISP_WT = 0x30008, // Dispatched Starved
		PM_DPTEG_FROM_DL2L3_MOD = 0x4e048, // A Page Table Entry was loaded into the TLB with Modified (M) data from another chip's L2 or L3 on a different Node or Group (Distant)
		PM_DPTEG_FROM_DL2L3_SHR = 0x3e048, // A Page Table Entry was loaded into the TLB with Shared (S) data from another chip's L2 or L3 on a different Node or Group (Distant)
		PM_DPTEG_FROM_DL4 = 0x3e04c, // A Page Table Entry was loaded into the TLB from another chip's L4 on a different Node or Group (Distant) due to a data side request
		PM_DPTEG_FROM_DMEM = 0x4e04c, // A Page Table Entry was loaded into the TLB from another chip's memory on the same Node or Group (Distant) due to a data side request
		PM_DPTEG_FROM_L2 = 0x1e042, // A Page Table Entry was loaded into the TLB from local core's L2 due to a data side request
		PM_DPTEG_FROM_L21_MOD = 0x4e046, // A Page Table Entry was loaded into the TLB with Modified (M) data from another core's L2 on the same chip due to a data side request
		PM_DPTEG_FROM_L21_SHR = 0x3e046, // A Page Table Entry was loaded into the TLB with Shared (S) data from another core's L2 on the same chip due to a data side request
		PM_DPTEG_FROM_L2MISS = 0x1e04e, // A Page Table Entry was loaded into the TLB from a localtion other than the local core's L2 due to a data side request
		PM_DPTEG_FROM_L2_DISP_CONFLICT_LDHITST = 0x3e040, // A Page Table Entry was loaded into the TLB from local core's L2 with load hit store conflict due to a data side request
		PM_DPTEG_FROM_L2_DISP_CONFLICT_OTHER = 0x4e040, // A Page Table Entry was loaded into the TLB from local core's L2 with dispatch conflict due to a data side request
		PM_DPTEG_FROM_L2_MEPF = 0x2e040, // A Page Table Entry was loaded into the TLB from local core's L2 hit without dispatch conflicts on Mepf state. due to a data side request
		PM_DPTEG_FROM_L2_NO_CONFLICT = 0x1e040, // A Page Table Entry was loaded into the TLB from local core's L2 without conflict due to a data side request
		PM_DPTEG_FROM_L3 = 0x4e042, // A Page Table Entry was loaded into the TLB from local core's L3 due to a data side request
		PM_DPTEG_FROM_L31_ECO_MOD = 0x4e044, // A Page Table Entry was loaded into the TLB with Modified (M) data from another core's ECO L3 on the same chip due to a data side request
		PM_DPTEG_FROM_L31_ECO_SHR = 0x3e044, // A Page Table Entry was loaded into the TLB with Shared (S) data from another core's ECO L3 on the same chip due to a data side request
		PM_DPTEG_FROM_L31_MOD = 0x2e044, // A Page Table Entry was loaded into the TLB with Modified (M) data from another core's L3 on the same chip due to a data side request
		PM_DPTEG_FROM_L31_SHR = 0x1e046, // A Page Table Entry was loaded into the TLB with Shared (S) data from another core's L3 on the same chip due to a data side request
		PM_DPTEG_FROM_L3MISS = 0x4e04e, // A Page Table Entry was loaded into the TLB from a localtion other than the local core's L3 due to a data side request
		PM_DPTEG_FROM_L3_DISP_CONFLICT = 0x3e042, // A Page Table Entry was loaded into the TLB from local core's L3 with dispatch conflict due to a data side request
		PM_DPTEG_FROM_L3_MEPF = 0x2e042, // A Page Table Entry was loaded into the TLB from local core's L3 without dispatch conflicts hit on Mepf state. due to a data side request
		PM_DPTEG_FROM_L3_NO_CONFLICT = 0x1e044, // A Page Table Entry was loaded into the TLB from local core's L3 without conflict due to a data side request
		PM_DPTEG_FROM_LL4 = 0x1e04c, // A Page Table Entry was loaded into the TLB from the local chip's L4 cache due to a data side request
		PM_DPTEG_FROM_LMEM = 0x2e048, // A Page Table Entry was loaded into the TLB from the local chip's Memory due to a data side request
		PM_DPTEG_FROM_MEMORY = 0x2e04c, // A Page Table Entry was loaded into the TLB from a memory location including L4 from local remote or distant due to a data side request
		PM_DPTEG_FROM_OFF_CHIP_CACHE = 0x4e04a, // A Page Table Entry was loaded into the TLB either shared or modified data from another core's L2/L3 on a different chip (remote or distant) due to a data side request
		PM_DPTEG_FROM_ON_CHIP_CACHE = 0x1e048, // A Page Table Entry was loaded into the TLB either shared or modified data from another core's L2/L3 on the same chip due to a data side request
		PM_DPTEG_FROM_RL2L3_MOD = 0x2e046, // A Page Table Entry was loaded into the TLB with Modified (M) data from another chip's L2 or L3 on the same Node or Group (Remote)
		PM_DPTEG_FROM_RL2L3_SHR = 0x1e04a, // A Page Table Entry was loaded into the TLB with Shared (S) data from another chip's L2 or L3 on the same Node or Group (Remote)
		PM_DPTEG_FROM_RL4 = 0x2e04a, // A Page Table Entry was loaded into the TLB from another chip's L4 on the same Node or Group (Remote) due to a data side request
		PM_DPTEG_FROM_RMEM = 0x3e04a, // A Page Table Entry was loaded into the TLB from another chip's memory on the same Node or Group (Remote) due to a data side request
		PM_DSLB_MISS = 0xd094, // Data SLB Miss - Total of all segment sizes
		PM_DTLB_MISS = 0x300fc, // Data PTEG reload
		PM_DTLB_MISS_16G = 0x1c058, // Data TLB Miss page size 16G
		PM_DTLB_MISS_16M = 0x4c056, // Data TLB Miss page size 16M
		PM_DTLB_MISS_4K = 0x2c056, // Data TLB Miss page size 4k
		PM_DTLB_MISS_64K = 0x3c056, // Data TLB Miss page size 64K
		PM_EAT_FORCE_MISPRED = 0x50a8, // XL-form branch was mispredicted due to the predicted target address missing from EAT. The EAT forces a mispredict in this case since there is no predicated target to validate. This is a rare case that may occur when the EAT is full and a branch is issue
		PM_EAT_FULL_CYC = 0x4084, // Cycles No room in EAT
		PM_EE_OFF_EXT_INT = 0x2080, // Ee off and external interrupt
		PM_EXT_INT = 0x200f8, // external interrupt
		PM_FAV_TBEGIN = 0x20b4, // Dispatch time Favored tbegin
		PM_FLOP = 0x100f4, // Floating Point Operation Finished
		PM_FLOP_SUM_SCALAR = 0xa0ae, // flops summary scalar instructions
		PM_FLOP_SUM_VEC = 0xa0ac, // flops summary vector instructions
		PM_FLUSH = 0x400f8, // Flush (any type)
		PM_FLUSH_BR_MPRED = 0x2084, // Flush caused by branch mispredict
		PM_FLUSH_COMPLETION = 0x30012, // Completion Flush
		PM_FLUSH_DISP = 0x2082, // Dispatch flush
		PM_FLUSH_DISP_SB = 0x208c, // Dispatch Flush: Scoreboard
		PM_FLUSH_DISP_SYNC = 0x2088, // Dispatch Flush: Sync
		PM_FLUSH_DISP_TLBIE = 0x208a, // Dispatch Flush: TLBIE
		PM_FLUSH_LSU = 0x208e, // Flush initiated by LSU
		PM_FLUSH_PARTIAL = 0x2086, // Partial flush
		PM_FPU0_FCONV = 0xa0b0, // Convert instruction executed
		PM_FPU0_FEST = 0xa0b8, // Estimate instruction executed
		PM_FPU0_FRSP = 0xa0b4, // Round to single precision instruction executed
		PM_FPU1_FCONV = 0xa0b2, // Convert instruction executed
		PM_FPU1_FEST = 0xa0ba, // Estimate instruction executed
		PM_FPU1_FRSP = 0xa0b6, // Round to single precision instruction executed
		PM_FREQ_DOWN = 0x3000c, // Power Management: Below Threshold B
		PM_FREQ_UP = 0x4000c, // Power Management: Above Threshold A
		PM_FUSION_TOC_GRP0_1 = 0x50b0, // One pair of instructions fused with TOC in Group0
		PM_FUSION_TOC_GRP0_2 = 0x50ae, // Two pairs of instructions fused with TOCin Group0
		PM_FUSION_TOC_GRP0_3 = 0x50ac, // Three pairs of instructions fused with TOC in Group0
		PM_FUSION_TOC_GRP1_1 = 0x50b2, // One pair of instructions fused with TOX in Group1
		PM_FUSION_VSX_GRP0_1 = 0x50b8, // One pair of instructions fused with VSX in Group0
		PM_FUSION_VSX_GRP0_2 = 0x50b6, // Two pairs of instructions fused with VSX in Group0
		PM_FUSION_VSX_GRP0_3 = 0x50b4, // Three pairs of instructions fused with VSX in Group0
		PM_FUSION_VSX_GRP1_1 = 0x50ba, // One pair of instructions fused with VSX in Group1
		PM_FXU0_BUSY_FXU1_IDLE = 0x3000e, // fxu0 busy and fxu1 idle
		PM_FXU0_FIN = 0x10004, // The fixed point unit Unit 0 finished an instruction. Instructions that finish may not necessary complete.
		PM_FXU1_BUSY_FXU0_IDLE = 0x4000e, // fxu0 idle and fxu1 busy.
		PM_FXU1_FIN = 0x40004, // FXU1 Finished
		PM_FXU_BUSY = 0x2000e, // fxu0 busy and fxu1 busy.
		PM_FXU_IDLE = 0x1000e, // fxu0 idle and fxu1 idle
		PM_GCT_EMPTY_CYC = 0x20008, // No itags assigned either thread (GCT Empty)
		PM_GCT_MERGE = 0x30a4, // Group dispatched on a merged GCT empty. GCT entries can be merged only within the same thread
		PM_GCT_NOSLOT_BR_MPRED = 0x4d01e, // Gct empty for this thread due to branch mispred
		PM_GCT_NOSLOT_BR_MPRED_ICMISS = 0x4d01a, // Gct empty for this thread due to Icache Miss and branch mispred
		PM_GCT_NOSLOT_CYC = 0x100f8, // No itags assigned
		PM_GCT_NOSLOT_DISP_HELD_ISSQ = 0x2d01e, // Gct empty for this thread due to dispatch hold on this thread due to Issue q full
		PM_GCT_NOSLOT_DISP_HELD_MAP = 0x4d01c, // Gct empty for this thread due to dispatch hold on this thread due to Mapper full
		PM_GCT_NOSLOT_DISP_HELD_OTHER = 0x2e010, // Gct empty for this thread due to dispatch hold on this thread due to sync
		PM_GCT_NOSLOT_DISP_HELD_SRQ = 0x2d01c, // Gct empty for this thread due to dispatch hold on this thread due to SRQ full
		PM_GCT_NOSLOT_IC_L3MISS = 0x4e010, // Gct empty for this thread due to icach l3 miss
		PM_GCT_NOSLOT_IC_MISS = 0x2d01a, // Gct empty for this thread due to Icache Miss
		PM_GCT_UTIL_11_14_ENTRIES = 0x20a2, // GCT Utilization 11-14 entries
		PM_GCT_UTIL_15_17_ENTRIES = 0x20a4, // GCT Utilization 15-17 entries
		PM_GCT_UTIL_18_ENTRIES = 0x20a6, // GCT Utilization 18+ entries
		PM_GCT_UTIL_1_2_ENTRIES = 0x209c, // GCT Utilization 1-2 entries
		PM_GCT_UTIL_3_6_ENTRIES = 0x209e, // GCT Utilization 3-6 entries
		PM_GCT_UTIL_7_10_ENTRIES = 0x20a0, // GCT Utilization 7-10 entries
		PM_GRP_BR_MPRED_NONSPEC = 0x1000a, // Group experienced non-speculative branch redirect
		PM_GRP_CMPL = 0x30004, // group completed
		PM_GRP_DISP = 0x3000a, // group dispatch
		PM_GRP_IC_MISS_NONSPEC = 0x1000c, // Group experienced non-speculative I cache miss
		PM_GRP_MRK = 0x10130, // Instruction Marked
		PM_GRP_NON_FULL_GROUP = 0x509c, // GROUPs where we did not have 6 non branch instructions in the group(ST mode)
		PM_GRP_PUMP_CPRED = 0x20050, // Initial and Final Pump Scope and data sourced across this scope was group pump for all data types excluding data prefetch (demand load
		PM_GRP_PUMP_MPRED = 0x20052, // Final Pump Scope (Group) ended up either larger or smaller than Initial Pump Scope for all data types excluding data prefetch (demand load
		PM_GRP_PUMP_MPRED_RTY = 0x10052, // Final Pump Scope (Group) ended up larger than Initial Pump Scope (Chip) for all data types excluding data prefetch (demand load
		PM_GRP_TERM_2ND_BRANCH = 0x50a4, // There were enough instructions in the Ibuffer
		PM_GRP_TERM_FPU_AFTER_BR = 0x50a6, // There were enough instructions in the Ibuffer
		PM_GRP_TERM_NOINST = 0x509e, // Do not fill every slot in the group
		PM_GRP_TERM_OTHER = 0x50a0, // There were enough instructions in the Ibuffer
		PM_GRP_TERM_SLOT_LIMIT = 0x50a2, // There were enough instructions in the Ibuffer
		PM_HV_CYC = 0x2000a, // Cycles in which msr_hv is high. Note that this event does not take msr_pr into consideration
		PM_IBUF_FULL_CYC = 0x4086, // Cycles No room in ibuff
		PM_IC_DEMAND_CYC = 0x10018, // Cycles when a demand ifetch was pending
		PM_IC_DEMAND_L2_BHT_REDIRECT = 0x4098, // L2 I cache demand request due to BHT redirect
		PM_IC_DEMAND_L2_BR_REDIRECT = 0x409a, // L2 I cache demand request due to branch Mispredict (15 cycle path)
		PM_IC_DEMAND_REQ = 0x4088, // Demand Instruction fetch request
		PM_IC_INVALIDATE = 0x508a, // Ic line invalidated
		PM_IC_PREF_CANCEL_HIT = 0x4092, // Prefetch Canceled due to icache hit
		PM_IC_PREF_CANCEL_L2 = 0x4094, // L2 Squashed request
		PM_IC_PREF_CANCEL_PAGE = 0x4090, // Prefetch Canceled due to page boundary
		PM_IC_PREF_REQ = 0x408a, // Instruction prefetch requests
		PM_IC_PREF_WRITE = 0x408e, // Instruction prefetch written into IL1
		PM_IC_RELOAD_PRIVATE = 0x4096, // Reloading line was brought in private for a specific thread. Most lines are brought in shared for all eight thrreads. If RA does not match then invalidates and then brings it shared to other thread. In P7 line brought in private
		PM_IERAT_RELOAD = 0x100f6, // Number of I-ERAT reloads
		PM_IERAT_RELOAD_16M = 0x4006a, // IERAT Reloaded (Miss) for a 16M page
		PM_IERAT_RELOAD_4K = 0x20064, // IERAT Miss (Not implemented as DI on POWER6)
		PM_IERAT_RELOAD_64K = 0x3006a, // IERAT Reloaded (Miss) for a 64k page
		PM_IFETCH_THROTTLE = 0x3405e, // Cycles in which Instruction fetch throttle was active
		PM_IFU_L2_TOUCH = 0x5088, // L2 touch to update MRU on a line
		PM_INST_ALL_CHIP_PUMP_CPRED = 0x514050, // correct) for instruction fetches and prefetches
		PM_INST_ALL_FROM_DL2L3_MOD = 0x544048, // The processor's Instruction cache was reloaded with Modified (M) data from another chip's L2 or L3 on a different Node or Group (Distant)
		PM_INST_ALL_FROM_DL2L3_SHR = 0x534048, // The processor's Instruction cache was reloaded with Shared (S) data from another chip's L2 or L3 on a different Node or Group (Distant)
		PM_INST_ALL_FROM_DL4 = 0x53404c, // The processor's Instruction cache was reloaded from another chip's L4 on a different Node or Group (Distant) due to instruction fetches and prefetches
		PM_INST_ALL_FROM_DMEM = 0x54404c, // The processor's Instruction cache was reloaded from another chip's memory on the same Node or Group (Distant) due to instruction fetches and prefetches
		PM_INST_ALL_FROM_L2 = 0x514042, // The processor's Instruction cache was reloaded from local core's L2 due to instruction fetches and prefetches
		PM_INST_ALL_FROM_L21_MOD = 0x544046, // The processor's Instruction cache was reloaded with Modified (M) data from another core's L2 on the same chip due to instruction fetches and prefetches
		PM_INST_ALL_FROM_L21_SHR = 0x534046, // The processor's Instruction cache was reloaded with Shared (S) data from another core's L2 on the same chip due to instruction fetches and prefetches
		PM_INST_ALL_FROM_L2MISS = 0x51404e, // The processor's Instruction cache was reloaded from a localtion other than the local core's L2 due to instruction fetches and prefetches
		PM_INST_ALL_FROM_L2_DISP_CONFLICT_LDHITST = 0x534040, // The processor's Instruction cache was reloaded from local core's L2 with load hit store conflict due to instruction fetches and prefetches
		PM_INST_ALL_FROM_L2_DISP_CONFLICT_OTHER = 0x544040, // The processor's Instruction cache was reloaded from local core's L2 with dispatch conflict due to instruction fetches and prefetches
		PM_INST_ALL_FROM_L2_MEPF = 0x524040, // The processor's Instruction cache was reloaded from local core's L2 hit without dispatch conflicts on Mepf state. due to instruction fetches and prefetches
		PM_INST_ALL_FROM_L2_NO_CONFLICT = 0x514040, // The processor's Instruction cache was reloaded from local core's L2 without conflict due to instruction fetches and prefetches
		PM_INST_ALL_FROM_L3 = 0x544042, // The processor's Instruction cache was reloaded from local core's L3 due to instruction fetches and prefetches
		PM_INST_ALL_FROM_L31_ECO_MOD = 0x544044, // The processor's Instruction cache was reloaded with Modified (M) data from another core's ECO L3 on the same chip due to instruction fetches and prefetches
		PM_INST_ALL_FROM_L31_ECO_SHR = 0x534044, // The processor's Instruction cache was reloaded with Shared (S) data from another core's ECO L3 on the same chip due to instruction fetches and prefetches
		PM_INST_ALL_FROM_L31_MOD = 0x524044, // The processor's Instruction cache was reloaded with Modified (M) data from another core's L3 on the same chip due to instruction fetches and prefetches
		PM_INST_ALL_FROM_L31_SHR = 0x514046, // The processor's Instruction cache was reloaded with Shared (S) data from another core's L3 on the same chip due to instruction fetches and prefetches
		PM_INST_ALL_FROM_L3MISS_MOD = 0x54404e, // The processor's Instruction cache was reloaded from a localtion other than the local core's L3 due to a instruction fetch
		PM_INST_ALL_FROM_L3_DISP_CONFLICT = 0x534042, // The processor's Instruction cache was reloaded from local core's L3 with dispatch conflict due to instruction fetches and prefetches
		PM_INST_ALL_FROM_L3_MEPF = 0x524042, // The processor's Instruction cache was reloaded from local core's L3 without dispatch conflicts hit on Mepf state. due to instruction fetches and prefetches
		PM_INST_ALL_FROM_L3_NO_CONFLICT = 0x514044, // The processor's Instruction cache was reloaded from local core's L3 without conflict due to instruction fetches and prefetches
		PM_INST_ALL_FROM_LL4 = 0x51404c, // The processor's Instruction cache was reloaded from the local chip's L4 cache due to instruction fetches and prefetches
		PM_INST_ALL_FROM_LMEM = 0x524048, // The processor's Instruction cache was reloaded from the local chip's Memory due to instruction fetches and prefetches
		PM_INST_ALL_FROM_MEMORY = 0x52404c, // The processor's Instruction cache was reloaded from a memory location including L4 from local remote or distant due to instruction fetches and prefetches
		PM_INST_ALL_FROM_OFF_CHIP_CACHE = 0x54404a, // The processor's Instruction cache was reloaded either shared or modified data from another core's L2/L3 on a different chip (remote or distant) due to instruction fetches and prefetches
		PM_INST_ALL_FROM_ON_CHIP_CACHE = 0x514048, // The processor's Instruction cache was reloaded either shared or modified data from another core's L2/L3 on the same chip due to instruction fetches and prefetches
		PM_INST_ALL_FROM_RL2L3_MOD = 0x524046, // The processor's Instruction cache was reloaded with Modified (M) data from another chip's L2 or L3 on the same Node or Group (Remote)
		PM_INST_ALL_FROM_RL2L3_SHR = 0x51404a, // The processor's Instruction cache was reloaded with Shared (S) data from another chip's L2 or L3 on the same Node or Group (Remote)
		PM_INST_ALL_FROM_RL4 = 0x52404a, // The processor's Instruction cache was reloaded from another chip's L4 on the same Node or Group (Remote) due to instruction fetches and prefetches
		PM_INST_ALL_FROM_RMEM = 0x53404a, // The processor's Instruction cache was reloaded from another chip's memory on the same Node or Group (Remote) due to instruction fetches and prefetches
		PM_INST_ALL_GRP_PUMP_CPRED = 0x524050, // correct) for instruction fetches and prefetches
		PM_INST_ALL_GRP_PUMP_MPRED = 0x524052, // Final Pump Scope (Group) ended up either larger or smaller than Initial Pump Scope for instruction fetches and prefetches
		PM_INST_ALL_GRP_PUMP_MPRED_RTY = 0x514052, // Final Pump Scope (Group) ended up larger than Initial Pump Scope (Chip) for instruction fetches and prefetches
		PM_INST_ALL_PUMP_CPRED = 0x514054, // Pump prediction correct. Counts across all types of pumps for instruction fetches and prefetches
		PM_INST_ALL_PUMP_MPRED = 0x544052, // Pump misprediction. Counts across all types of pumps for instruction fetches and prefetches
		PM_INST_ALL_SYS_PUMP_CPRED = 0x534050, // correct) for instruction fetches and prefetches
		PM_INST_ALL_SYS_PUMP_MPRED = 0x534052, // Final Pump Scope (system) mispredicted. Either the original scope was too small (Chip/Group) or the original scope was System and it should have been smaller. Counts for instruction fetches and prefetches
		PM_INST_ALL_SYS_PUMP_MPRED_RTY = 0x544050, // Final Pump Scope (system) ended up larger than Initial Pump Scope (Chip/Group) for instruction fetches and prefetches
		PM_INST_CHIP_PUMP_CPRED = 0x14050, // correct) for an instruction fetch
		PM_INST_CMPL = 0x2, // Number of PowerPC Instructions that completed.
		PM_INST_DISP = 0x200f2, // PPC Dispatched
		PM_INST_FROM_DL2L3_MOD = 0x44048, // The processor's Instruction cache was reloaded with Modified (M) data from another chip's L2 or L3 on a different Node or Group (Distant)
		PM_INST_FROM_DL2L3_SHR = 0x34048, // The processor's Instruction cache was reloaded with Shared (S) data from another chip's L2 or L3 on a different Node or Group (Distant)
		PM_INST_FROM_DL4 = 0x3404c, // The processor's Instruction cache was reloaded from another chip's L4 on a different Node or Group (Distant) due to an instruction fetch (not prefetch)
		PM_INST_FROM_DMEM = 0x4404c, // The processor's Instruction cache was reloaded from another chip's memory on the same Node or Group (Distant) due to an instruction fetch (not prefetch)
		PM_INST_FROM_L1 = 0x4080, // Instruction fetches from L1
		PM_INST_FROM_L2 = 0x14042, // The processor's Instruction cache was reloaded from local core's L2 due to an instruction fetch (not prefetch)
		PM_INST_FROM_L21_MOD = 0x44046, // The processor's Instruction cache was reloaded with Modified (M) data from another core's L2 on the same chip due to an instruction fetch (not prefetch)
		PM_INST_FROM_L21_SHR = 0x34046, // The processor's Instruction cache was reloaded with Shared (S) data from another core's L2 on the same chip due to an instruction fetch (not prefetch)
		PM_INST_FROM_L2MISS = 0x1404e, // The processor's Instruction cache was reloaded from a localtion other than the local core's L2 due to an instruction fetch (not prefetch)
		PM_INST_FROM_L2_DISP_CONFLICT_LDHITST = 0x34040, // The processor's Instruction cache was reloaded from local core's L2 with load hit store conflict due to an instruction fetch (not prefetch)
		PM_INST_FROM_L2_DISP_CONFLICT_OTHER = 0x44040, // The processor's Instruction cache was reloaded from local core's L2 with dispatch conflict due to an instruction fetch (not prefetch)
		PM_INST_FROM_L2_MEPF = 0x24040, // The processor's Instruction cache was reloaded from local core's L2 hit without dispatch conflicts on Mepf state. due to an instruction fetch (not prefetch)
		PM_INST_FROM_L2_NO_CONFLICT = 0x14040, // The processor's Instruction cache was reloaded from local core's L2 without conflict due to an instruction fetch (not prefetch)
		PM_INST_FROM_L3 = 0x44042, // The processor's Instruction cache was reloaded from local core's L3 due to an instruction fetch (not prefetch)
		PM_INST_FROM_L31_ECO_MOD = 0x44044, // The processor's Instruction cache was reloaded with Modified (M) data from another core's ECO L3 on the same chip due to an instruction fetch (not prefetch)
		PM_INST_FROM_L31_ECO_SHR = 0x34044, // The processor's Instruction cache was reloaded with Shared (S) data from another core's ECO L3 on the same chip due to an instruction fetch (not prefetch)
		PM_INST_FROM_L31_MOD = 0x24044, // The processor's Instruction cache was reloaded with Modified (M) data from another core's L3 on the same chip due to an instruction fetch (not prefetch)
		PM_INST_FROM_L31_SHR = 0x14046, // The processor's Instruction cache was reloaded with Shared (S) data from another core's L3 on the same chip due to an instruction fetch (not prefetch)
		PM_INST_FROM_L3MISS = 0x300fa, // Marked instruction was reloaded from a location beyond the local chiplet
		PM_INST_FROM_L3MISS_MOD = 0x4404e, // The processor's Instruction cache was reloaded from a localtion other than the local core's L3 due to a instruction fetch
		PM_INST_FROM_L3_DISP_CONFLICT = 0x34042, // The processor's Instruction cache was reloaded from local core's L3 with dispatch conflict due to an instruction fetch (not prefetch)
		PM_INST_FROM_L3_MEPF = 0x24042, // The processor's Instruction cache was reloaded from local core's L3 without dispatch conflicts hit on Mepf state. due to an instruction fetch (not prefetch)
		PM_INST_FROM_L3_NO_CONFLICT = 0x14044, // The processor's Instruction cache was reloaded from local core's L3 without conflict due to an instruction fetch (not prefetch)
		PM_INST_FROM_LL4 = 0x1404c, // The processor's Instruction cache was reloaded from the local chip's L4 cache due to an instruction fetch (not prefetch)
		PM_INST_FROM_LMEM = 0x24048, // The processor's Instruction cache was reloaded from the local chip's Memory due to an instruction fetch (not prefetch)
		PM_INST_FROM_MEMORY = 0x2404c, // The processor's Instruction cache was reloaded from a memory location including L4 from local remote or distant due to an instruction fetch (not prefetch)
		PM_INST_FROM_OFF_CHIP_CACHE = 0x4404a, // The processor's Instruction cache was reloaded either shared or modified data from another core's L2/L3 on a different chip (remote or distant) due to an instruction fetch (not prefetch)
		PM_INST_FROM_ON_CHIP_CACHE = 0x14048, // The processor's Instruction cache was reloaded either shared or modified data from another core's L2/L3 on the same chip due to an instruction fetch (not prefetch)
		PM_INST_FROM_RL2L3_MOD = 0x24046, // The processor's Instruction cache was reloaded with Modified (M) data from another chip's L2 or L3 on the same Node or Group (Remote)
		PM_INST_FROM_RL2L3_SHR = 0x1404a, // The processor's Instruction cache was reloaded with Shared (S) data from another chip's L2 or L3 on the same Node or Group (Remote)
		PM_INST_FROM_RL4 = 0x2404a, // The processor's Instruction cache was reloaded from another chip's L4 on the same Node or Group (Remote) due to an instruction fetch (not prefetch)
		PM_INST_FROM_RMEM = 0x3404a, // The processor's Instruction cache was reloaded from another chip's memory on the same Node or Group (Remote) due to an instruction fetch (not prefetch)
		PM_INST_GRP_PUMP_CPRED = 0x24050, // correct) for an instruction fetch
		PM_INST_GRP_PUMP_MPRED = 0x24052, // Final Pump Scope (Group) ended up either larger or smaller than Initial Pump Scope for an instruction fetch
		PM_INST_GRP_PUMP_MPRED_RTY = 0x14052, // Final Pump Scope (Group) ended up larger than Initial Pump Scope (Chip) for an instruction fetch
		PM_INST_IMC_MATCH_CMPL = 0x1003a, // IMC Match Count (Not architected in P8)
		PM_INST_IMC_MATCH_DISP = 0x30016, // Matched Instructions Dispatched
		PM_INST_PUMP_CPRED = 0x14054, // Pump prediction correct. Counts across all types of pumps for an instruction fetch
		PM_INST_PUMP_MPRED = 0x44052, // Pump misprediction. Counts across all types of pumps for an instruction fetch
		PM_INST_SYS_PUMP_CPRED = 0x34050, // correct) for an instruction fetch
		PM_INST_SYS_PUMP_MPRED = 0x34052, // Final Pump Scope (system) mispredicted. Either the original scope was too small (Chip/Group) or the original scope was System and it should have been smaller. Counts for an instruction fetch
		PM_INST_SYS_PUMP_MPRED_RTY = 0x44050, // Final Pump Scope (system) ended up larger than Initial Pump Scope (Chip/Group) for an instruction fetch
		PM_IOPS_CMPL = 0x10014, // Internal Operations completed
		PM_IOPS_DISP = 0x30014, // Internal Operations dispatched
		PM_IPTEG_FROM_DL2L3_MOD = 0x45048, // A Page Table Entry was loaded into the TLB with Modified (M) data from another chip's L2 or L3 on a different Node or Group (Distant)
		PM_IPTEG_FROM_DL2L3_SHR = 0x35048, // A Page Table Entry was loaded into the TLB with Shared (S) data from another chip's L2 or L3 on a different Node or Group (Distant)
		PM_IPTEG_FROM_DL4 = 0x3504c, // A Page Table Entry was loaded into the TLB from another chip's L4 on a different Node or Group (Distant) due to a instruction side request
		PM_IPTEG_FROM_DMEM = 0x4504c, // A Page Table Entry was loaded into the TLB from another chip's memory on the same Node or Group (Distant) due to a instruction side request
		PM_IPTEG_FROM_L2 = 0x15042, // A Page Table Entry was loaded into the TLB from local core's L2 due to a instruction side request
		PM_IPTEG_FROM_L21_MOD = 0x45046, // A Page Table Entry was loaded into the TLB with Modified (M) data from another core's L2 on the same chip due to a instruction side request
		PM_IPTEG_FROM_L21_SHR = 0x35046, // A Page Table Entry was loaded into the TLB with Shared (S) data from another core's L2 on the same chip due to a instruction side request
		PM_IPTEG_FROM_L2MISS = 0x1504e, // A Page Table Entry was loaded into the TLB from a localtion other than the local core's L2 due to a instruction side request
		PM_IPTEG_FROM_L2_DISP_CONFLICT_LDHITST = 0x35040, // A Page Table Entry was loaded into the TLB from local core's L2 with load hit store conflict due to a instruction side request
		PM_IPTEG_FROM_L2_DISP_CONFLICT_OTHER = 0x45040, // A Page Table Entry was loaded into the TLB from local core's L2 with dispatch conflict due to a instruction side request
		PM_IPTEG_FROM_L2_MEPF = 0x25040, // A Page Table Entry was loaded into the TLB from local core's L2 hit without dispatch conflicts on Mepf state. due to a instruction side request
		PM_IPTEG_FROM_L2_NO_CONFLICT = 0x15040, // A Page Table Entry was loaded into the TLB from local core's L2 without conflict due to a instruction side request
		PM_IPTEG_FROM_L3 = 0x45042, // A Page Table Entry was loaded into the TLB from local core's L3 due to a instruction side request
		PM_IPTEG_FROM_L31_ECO_MOD = 0x45044, // A Page Table Entry was loaded into the TLB with Modified (M) data from another core's ECO L3 on the same chip due to a instruction side request
		PM_IPTEG_FROM_L31_ECO_SHR = 0x35044, // A Page Table Entry was loaded into the TLB with Shared (S) data from another core's ECO L3 on the same chip due to a instruction side request
		PM_IPTEG_FROM_L31_MOD = 0x25044, // A Page Table Entry was loaded into the TLB with Modified (M) data from another core's L3 on the same chip due to a instruction side request
		PM_IPTEG_FROM_L31_SHR = 0x15046, // A Page Table Entry was loaded into the TLB with Shared (S) data from another core's L3 on the same chip due to a instruction side request
		PM_IPTEG_FROM_L3MISS = 0x4504e, // A Page Table Entry was loaded into the TLB from a localtion other than the local core's L3 due to a instruction side request
		PM_IPTEG_FROM_L3_DISP_CONFLICT = 0x35042, // A Page Table Entry was loaded into the TLB from local core's L3 with dispatch conflict due to a instruction side request
		PM_IPTEG_FROM_L3_MEPF = 0x25042, // A Page Table Entry was loaded into the TLB from local core's L3 without dispatch conflicts hit on Mepf state. due to a instruction side request
		PM_IPTEG_FROM_L3_NO_CONFLICT = 0x15044, // A Page Table Entry was loaded into the TLB from local core's L3 without conflict due to a instruction side request
		PM_IPTEG_FROM_LL4 = 0x1504c, // A Page Table Entry was loaded into the TLB from the local chip's L4 cache due to a instruction side request
		PM_IPTEG_FROM_LMEM = 0x25048, // A Page Table Entry was loaded into the TLB from the local chip's Memory due to a instruction side request
		PM_IPTEG_FROM_MEMORY = 0x2504c, // A Page Table Entry was loaded into the TLB from a memory location including L4 from local remote or distant due to a instruction side request
		PM_IPTEG_FROM_OFF_CHIP_CACHE = 0x4504a, // A Page Table Entry was loaded into the TLB either shared or modified data from another core's L2/L3 on a different chip (remote or distant) due to a instruction side request
		PM_IPTEG_FROM_ON_CHIP_CACHE = 0x15048, // A Page Table Entry was loaded into the TLB either shared or modified data from another core's L2/L3 on the same chip due to a instruction side request
		PM_IPTEG_FROM_RL2L3_MOD = 0x25046, // A Page Table Entry was loaded into the TLB with Modified (M) data from another chip's L2 or L3 on the same Node or Group (Remote)
		PM_IPTEG_FROM_RL2L3_SHR = 0x1504a, // A Page Table Entry was loaded into the TLB with Shared (S) data from another chip's L2 or L3 on the same Node or Group (Remote)
		PM_IPTEG_FROM_RL4 = 0x2504a, // A Page Table Entry was loaded into the TLB from another chip's L4 on the same Node or Group (Remote) due to a instruction side request
		PM_IPTEG_FROM_RMEM = 0x3504a, // A Page Table Entry was loaded into the TLB from another chip's memory on the same Node or Group (Remote) due to a instruction side request
		PM_ISIDE_DISP = 0x617082, // All i-side dispatch attempts
		PM_ISIDE_DISP_FAIL = 0x627084, // All i-side dispatch attempts that failed due to a addr collision with another machine
		PM_ISIDE_DISP_FAIL_OTHER = 0x627086, // All i-side dispatch attempts that failed due to a reason other than addrs collision
		PM_ISIDE_L2MEMACC = 0x4608e, // valid when first beat of data comes in for an i-side fetch where data came from mem(or L4)
		PM_ISIDE_MRU_TOUCH = 0x44608e, // Iside L2 MRU touch
		PM_ISLB_MISS = 0xd096, // I SLB Miss.
		PM_ISU_REF_FX0 = 0x30ac, // FX0 ISU reject
		PM_ISU_REF_FX1 = 0x30ae, // FX1 ISU reject
		PM_ISU_REF_FXU = 0x38ac, // FXU ISU reject from either pipe
		PM_ISU_REF_LS0 = 0x30b0, // LS0 ISU reject
		PM_ISU_REF_LS1 = 0x30b2, // LS1 ISU reject
		PM_ISU_REF_LS2 = 0x30b4, // LS2 ISU reject
		PM_ISU_REF_LS3 = 0x30b6, // LS3 ISU reject
		PM_ISU_REJECTS_ALL = 0x309c, // All isu rejects could be more than 1 per cycle
		PM_ISU_REJECT_RES_NA = 0x30a2, // ISU reject due to resource not available
		PM_ISU_REJECT_SAR_BYPASS = 0x309e, // Reject because of SAR bypass
		PM_ISU_REJECT_SRC_NA = 0x30a0, // ISU reject due to source not available
		PM_ISU_REJ_VS0 = 0x30a8, // VS0 ISU reject
		PM_ISU_REJ_VS1 = 0x30aa, // VS1 ISU reject
		PM_ISU_REJ_VSU = 0x38a8, // VSU ISU reject from either pipe
		PM_ISYNC = 0x30b8, // Isync count per thread
		PM_ITLB_MISS = 0x400fc, // ITLB Reloaded (always zero on POWER6)
		PM_L1MISS_LAT_EXC_1024 = 0x67200301eaull, // L1 misses that took longer than 1024 cyles to resolve (miss to reload)
		PM_L1MISS_LAT_EXC_2048 = 0x67200401ecull, // L1 misses that took longer than 2048 cyles to resolve (miss to reload)
		PM_L1MISS_LAT_EXC_256 = 0x67200101e8ull, // L1 misses that took longer than 256 cyles to resolve (miss to reload)
		PM_L1MISS_LAT_EXC_32 = 0x67200201e6ull, // L1 misses that took longer than 32 cyles to resolve (miss to reload)
		PM_L1PF_L2MEMACC = 0x26086, // valid when first beat of data comes in for an L1pref where data came from mem(or L4)
		PM_L1_DCACHE_RELOADED_ALL = 0x1002c, // L1 data cache reloaded for demand or prefetch
		PM_L1_DCACHE_RELOAD_VALID = 0x300f6, // DL1 reloaded due to Demand Load
		PM_L1_DEMAND_WRITE = 0x408c, // Instruction Demand sectors wriittent into IL1
		PM_L1_ICACHE_MISS = 0x200fd, // Demand iCache Miss
		PM_L1_ICACHE_RELOADED_ALL = 0x40012, // Counts all Icache reloads includes demand
		PM_L1_ICACHE_RELOADED_PREF = 0x30068, // Counts all Icache prefetch reloads (includes demand turned into prefetch)
		PM_L2_CASTOUT_MOD = 0x417080, // L2 Castouts - Modified (M
		PM_L2_CASTOUT_SHR = 0x417082, // L2 Castouts - Shared (T
		PM_L2_CHIP_PUMP = 0x27084, // RC requests that were local on chip pump attempts
		PM_L2_DC_INV = 0x427086, // Dcache invalidates from L2
		PM_L2_DISP_ALL_L2MISS = 0x44608c, // All successful Ld/St dispatches for this thread that were an L2miss.
		PM_L2_GROUP_PUMP = 0x27086, // RC requests that were on Node Pump attempts
		PM_L2_GRP_GUESS_CORRECT = 0x626084, // L2 guess grp and guess was correct (data intra-6chip AND ^on-chip)
		PM_L2_GRP_GUESS_WRONG = 0x626086, // L2 guess grp and guess was not correct (ie data on-chip OR beyond-6chip)
		PM_L2_IC_INV = 0x427084, // Icache Invalidates from L2
		PM_L2_INST = 0x436088, // All successful I-side dispatches for this thread (excludes i_l2mru_tch reqs)
		PM_L2_INST_MISS = 0x43608a, // All successful i-side dispatches that were an L2miss for this thread (excludes i_l2mru_tch reqs)
		PM_L2_LD = 0x416080, // All successful D-side Load dispatches for this thread
		PM_L2_LD_DISP = 0x437088, // All successful load dispatches
		PM_L2_LD_HIT = 0x43708a, // All successful load dispatches that were L2 hits
		PM_L2_LD_MISS = 0x426084, // All successful D-Side Load dispatches that were an L2miss for this thread
		PM_L2_LOC_GUESS_CORRECT = 0x616080, // L2 guess loc and guess was correct (ie data local)
		PM_L2_LOC_GUESS_WRONG = 0x616082, // L2 guess loc and guess was not correct (ie data not on chip)
		PM_L2_RCLD_DISP = 0x516080, // L2 RC load dispatch attempt
		PM_L2_RCLD_DISP_FAIL_ADDR = 0x516082, // L2 RC load dispatch attempt failed due to address collision with RC/CO/SN/SQ
		PM_L2_RCLD_DISP_FAIL_OTHER = 0x526084, // L2 RC load dispatch attempt failed due to other reasons
		PM_L2_RCST_DISP = 0x536088, // L2 RC store dispatch attempt
		PM_L2_RCST_DISP_FAIL_ADDR = 0x53608a, // L2 RC store dispatch attempt failed due to address collision with RC/CO/SN/SQ
		PM_L2_RCST_DISP_FAIL_OTHER = 0x54608c, // L2 RC store dispatch attempt failed due to other reasons
		PM_L2_RC_ST_DONE = 0x537088, // RC did st to line that was Tx or Sx
		PM_L2_RTY_LD = 0x63708a, // RC retries on PB for any load from core
		PM_L2_RTY_ST = 0x3708a, // RC retries on PB for any store from core
		PM_L2_SN_M_RD_DONE = 0x54708c, // SNP dispatched for a read and was M
		PM_L2_SN_M_WR_DONE = 0x54708e, // SNP dispatched for a write and was M
		PM_L2_SN_SX_I_DONE = 0x53708a, // SNP dispatched and went from Sx or Tx to Ix
		PM_L2_ST = 0x17080, // All successful D-side store dispatches for this thread
		PM_L2_ST_DISP = 0x44708c, // All successful store dispatches
		PM_L2_ST_HIT = 0x44708e, // All successful store dispatches that were L2Hits
		PM_L2_ST_MISS = 0x17082, // All successful D-side store dispatches for this thread that were L2 Miss
		PM_L2_SYS_GUESS_CORRECT = 0x636088, // L2 guess sys and guess was correct (ie data beyond-6chip)
		PM_L2_SYS_GUESS_WRONG = 0x63608a, // L2 guess sys and guess was not correct (ie data ^beyond-6chip)
		PM_L2_SYS_PUMP = 0x617080, // RC requests that were system pump attempts
		PM_L2_TM_REQ_ABORT = 0x1e05e, // TM abort
		PM_L2_TM_ST_ABORT_SISTER = 0x3e05c, // TM marked store abort
		PM_L3_CINJ = 0x23808a, // l3 ci of cache inject
		PM_L3_CI_HIT = 0x128084, // L3 Castins Hit (total count
		PM_L3_CI_MISS = 0x128086, // L3 castins miss (total count
		PM_L3_CI_USAGE = 0x819082, // rotating sample of 16 CI or CO actives
		PM_L3_CO = 0x438088, // l3 castout occurring (does not include casthrough or log writes (cinj/dmaw)
		PM_L3_CO0_ALLOC = 0x83908b, // lifetime
		PM_L3_CO0_BUSY = 0x83908a, // lifetime
		PM_L3_CO_L31 = 0x28086, // L3 CO to L3.1 OR of port 0 and 1 (lossy)
		PM_L3_CO_LCO = 0x238088, // Total L3 castouts occurred on LCO
		PM_L3_CO_MEM = 0x28084, // L3 CO to memory OR of port 0 and 1 (lossy)
		PM_L3_CO_MEPF = 0x18082, // L3 CO of line in Mep state (includes casthrough)
		PM_L3_GRP_GUESS_CORRECT = 0xb19082, // group and data from same group (near) (pred successful)
		PM_L3_GRP_GUESS_WRONG_HIGH = 0xb3908a, // group but data from local node. Predition too high
		PM_L3_GRP_GUESS_WRONG_LOW = 0xb39088, // group but data from outside group (far or rem). Prediction too Low
		PM_L3_HIT = 0x218080, // L3 Hits
		PM_L3_L2_CO_HIT = 0x138088, // L2 castout hits
		PM_L3_L2_CO_MISS = 0x13808a, // L2 castout miss
		PM_L3_LAT_CI_HIT = 0x14808c, // L3 Lateral Castins Hit
		PM_L3_LAT_CI_MISS = 0x14808e, // L3 Lateral Castins Miss
		PM_L3_LD_HIT = 0x228084, // L3 demand LD Hits
		PM_L3_LD_MISS = 0x228086, // L3 demand LD Miss
		PM_L3_LD_PREF = 0x1e052, // L3 Load Prefetches
		PM_L3_LOC_GUESS_CORRECT = 0xb19080, // node/chip and data from local node (local) (pred successful)
		PM_L3_LOC_GUESS_WRONG = 0xb29086, // node but data from out side local node (near or far or rem). Prediction too Low
		PM_L3_MISS = 0x218082, // L3 Misses
		PM_L3_P0_CO_L31 = 0x54808c, // l3 CO to L3.1 (lco) port 0
		PM_L3_P0_CO_MEM = 0x538088, // l3 CO to memory port 0
		PM_L3_P0_CO_RTY = 0x929084, // L3 CO received retry port 0
		PM_L3_P0_GRP_PUMP = 0xa29084, // L3 pf sent with grp scope port 0
		PM_L3_P0_LCO_DATA = 0x528084, // lco sent with data port 0
		PM_L3_P0_LCO_NO_DATA = 0x518080, // dataless l3 lco sent port 0
		PM_L3_P0_LCO_RTY = 0xa4908c, // L3 LCO received retry port 0
		PM_L3_P0_NODE_PUMP = 0xa19080, // L3 pf sent with nodal scope port 0
		PM_L3_P0_PF_RTY = 0x919080, // L3 PF received retry port 0
		PM_L3_P0_SN_HIT = 0x939088, // L3 snoop hit port 0
		PM_L3_P0_SN_INV = 0x118080, // Port0 snooper detects someone doing a store to a line that is Sx
		PM_L3_P0_SN_MISS = 0x94908c, // L3 snoop miss port 0
		PM_L3_P0_SYS_PUMP = 0xa39088, // L3 pf sent with sys scope port 0
		PM_L3_P1_CO_L31 = 0x54808e, // l3 CO to L3.1 (lco) port 1
		PM_L3_P1_CO_MEM = 0x53808a, // l3 CO to memory port 1
		PM_L3_P1_CO_RTY = 0x929086, // L3 CO received retry port 1
		PM_L3_P1_GRP_PUMP = 0xa29086, // L3 pf sent with grp scope port 1
		PM_L3_P1_LCO_DATA = 0x528086, // lco sent with data port 1
		PM_L3_P1_LCO_NO_DATA = 0x518082, // dataless l3 lco sent port 1
		PM_L3_P1_LCO_RTY = 0xa4908e, // L3 LCO received retry port 1
		PM_L3_P1_NODE_PUMP = 0xa19082, // L3 pf sent with nodal scope port 1
		PM_L3_P1_PF_RTY = 0x919082, // L3 PF received retry port 1
		PM_L3_P1_SN_HIT = 0x93908a, // L3 snoop hit port 1
		PM_L3_P1_SN_INV = 0x118082, // Port1 snooper detects someone doing a store to a line that is Sx
		PM_L3_P1_SN_MISS = 0x94908e, // L3 snoop miss port 1
		PM_L3_P1_SYS_PUMP = 0xa3908a, // L3 pf sent with sys scope port 1
		PM_L3_PF0_ALLOC = 0x84908d, // lifetime
		PM_L3_PF0_BUSY = 0x84908c, // lifetime
		PM_L3_PF_HIT_L3 = 0x428084, // l3 pf hit in l3
		PM_L3_PF_MISS_L3 = 0x18080, // L3 Prefetch missed in L3
		PM_L3_PF_OFF_CHIP_CACHE = 0x3808a, // L3 Prefetch from Off chip cache
		PM_L3_PF_OFF_CHIP_MEM = 0x4808e, // L3 Prefetch from Off chip memory
		PM_L3_PF_ON_CHIP_CACHE = 0x38088, // L3 Prefetch from On chip cache
		PM_L3_PF_ON_CHIP_MEM = 0x4808c, // L3 Prefetch from On chip memory
		PM_L3_PF_USAGE = 0x829084, // rotating sample of 32 PF actives
		PM_L3_PREF_ALL = 0x4e052, // Total HW L3 prefetches(Load+store)
		PM_L3_RD0_ALLOC = 0x84908f, // lifetime
		PM_L3_RD0_BUSY = 0x84908e, // lifetime
		PM_L3_RD_USAGE = 0x829086, // rotating sample of 16 RD actives
		PM_L3_SN0_ALLOC = 0x839089, // lifetime
		PM_L3_SN0_BUSY = 0x839088, // lifetime
		PM_L3_SN_USAGE = 0x819080, // rotating sample of 8 snoop valids
		PM_L3_ST_PREF = 0x2e052, // L3 store Prefetches
		PM_L3_SW_PREF = 0x3e052, // Data stream touchto L3
		PM_L3_SYS_GUESS_CORRECT = 0xb29084, // system and data from outside group (far or rem)(pred successful)
		PM_L3_SYS_GUESS_WRONG = 0xb4908c, // system but data from local or near. Predction too high
		PM_L3_TRANS_PF = 0x24808e, // L3 Transient prefetch
		PM_L3_WI0_ALLOC = 0x18081, // lifetime
		PM_L3_WI0_BUSY = 0x418080, // lifetime
		PM_L3_WI_USAGE = 0x418082, // rotating sample of 8 WI actives
		PM_LARX_FIN = 0x3c058, // Larx finished
		PM_LD_CMPL = 0x1002e, // count of Loads completed
		PM_LD_L3MISS_PEND_CYC = 0x10062, // Cycles L3 miss was pending for this thread
		PM_LD_MISS_L1 = 0x3e054, // Load Missed L1
		PM_LD_REF_L1 = 0x100ee, // All L1 D cache load references counted at finish
		PM_LD_REF_L1_LSU0 = 0xc080, // LS0 L1 D cache load references counted at finish
		PM_LD_REF_L1_LSU1 = 0xc082, // LS1 L1 D cache load references counted at finish
		PM_LD_REF_L1_LSU2 = 0xc094, // LS2 L1 D cache load references counted at finish
		PM_LD_REF_L1_LSU3 = 0xc096, // LS3 L1 D cache load references counted at finish
		PM_LINK_STACK_INVALID_PTR = 0x509a, // A flush were LS ptr is invalid
		PM_LINK_STACK_WRONG_ADD_PRED = 0x5098, // Link stack predicts wrong address
		PM_LS0_ERAT_MISS_PREF = 0xe080, // LS0 Erat miss due to prefetch
		PM_LS0_L1_PREF = 0xd0b8, // LS0 L1 cache data prefetches
		PM_LS0_L1_SW_PREF = 0xc098, // Software L1 Prefetches
		PM_LS1_ERAT_MISS_PREF = 0xe082, // LS1 Erat miss due to prefetch
		PM_LS1_L1_PREF = 0xd0ba, // LS1 L1 cache data prefetches
		PM_LS1_L1_SW_PREF = 0xc09a, // Software L1 Prefetches
		PM_LSU0_FLUSH_LRQ = 0xc0b0, // LS0 Flush: LRQ
		PM_LSU0_FLUSH_SRQ = 0xc0b8, // LS0 Flush: SRQ
		PM_LSU0_FLUSH_ULD = 0xc0a4, // LS0 Flush: Unaligned Load
		PM_LSU0_FLUSH_UST = 0xc0ac, // LS0 Flush: Unaligned Store
		PM_LSU0_L1_CAM_CANCEL = 0xf088, // ls0 l1 tm cam cancel
		PM_LSU0_LARX_FIN = 0x1e056, // Larx finished in LSU pipe0
		PM_LSU0_LMQ_LHR_MERGE = 0xd08c, // LS0 Load Merged with another cacheline request
		PM_LSU0_NCLD = 0xc08c, // LS0 Non-cachable Loads counted at finish
		PM_LSU0_PRIMARY_ERAT_HIT = 0xe090, // Primary ERAT hit
		PM_LSU0_REJECT = 0x1e05a, // LSU0 reject
		PM_LSU0_SRQ_STFWD = 0xc09c, // LS0 SRQ forwarded data to a load
		PM_LSU0_STORE_REJECT = 0xf084, // ls0 store reject
		PM_LSU0_TMA_REQ_L2 = 0xe0a8, // addrs only req to L2 only on the first one
		PM_LSU0_TM_L1_HIT = 0xe098, // Load tm hit in L1
		PM_LSU0_TM_L1_MISS = 0xe0a0, // Load tm L1 miss
		PM_LSU1_FLUSH_LRQ = 0xc0b2, // LS1 Flush: LRQ
		PM_LSU1_FLUSH_SRQ = 0xc0ba, // LS1 Flush: SRQ
		PM_LSU1_FLUSH_ULD = 0xc0a6, // LS 1 Flush: Unaligned Load
		PM_LSU1_FLUSH_UST = 0xc0ae, // LS1 Flush: Unaligned Store
		PM_LSU1_L1_CAM_CANCEL = 0xf08a, // ls1 l1 tm cam cancel
		PM_LSU1_LARX_FIN = 0x2e056, // Larx finished in LSU pipe1
		PM_LSU1_LMQ_LHR_MERGE = 0xd08e, // LS1 Load Merge with another cacheline request
		PM_LSU1_NCLD = 0xc08e, // LS1 Non-cachable Loads counted at finish
		PM_LSU1_PRIMARY_ERAT_HIT = 0xe092, // Primary ERAT hit
		PM_LSU1_REJECT = 0x2e05a, // LSU1 reject
		PM_LSU1_SRQ_STFWD = 0xc09e, // LS1 SRQ forwarded data to a load
		PM_LSU1_STORE_REJECT = 0xf086, // ls1 store reject
		PM_LSU1_TMA_REQ_L2 = 0xe0aa, // addrs only req to L2 only on the first one
		PM_LSU1_TM_L1_HIT = 0xe09a, // Load tm hit in L1
		PM_LSU1_TM_L1_MISS = 0xe0a2, // Load tm L1 miss
		PM_LSU2_FLUSH_LRQ = 0xc0b4, // LS02Flush: LRQ
		PM_LSU2_FLUSH_SRQ = 0xc0bc, // LS2 Flush: SRQ
		PM_LSU2_FLUSH_ULD = 0xc0a8, // LS3 Flush: Unaligned Load
		PM_LSU2_L1_CAM_CANCEL = 0xf08c, // ls2 l1 tm cam cancel
		PM_LSU2_LARX_FIN = 0x3e056, // Larx finished in LSU pipe2
		PM_LSU2_LDF = 0xc084, // LS2 Scalar Loads
		PM_LSU2_LDX = 0xc088, // LS0 Vector Loads
		PM_LSU2_LMQ_LHR_MERGE = 0xd090, // LS0 Load Merged with another cacheline request
		PM_LSU2_PRIMARY_ERAT_HIT = 0xe094, // Primary ERAT hit
		PM_LSU2_REJECT = 0x3e05a, // LSU2 reject
		PM_LSU2_SRQ_STFWD = 0xc0a0, // LS2 SRQ forwarded data to a load
		PM_LSU2_TMA_REQ_L2 = 0xe0ac, // addrs only req to L2 only on the first one
		PM_LSU2_TM_L1_HIT = 0xe09c, // Load tm hit in L1
		PM_LSU2_TM_L1_MISS = 0xe0a4, // Load tm L1 miss
		PM_LSU3_FLUSH_LRQ = 0xc0b6, // LS3 Flush: LRQ
		PM_LSU3_FLUSH_SRQ = 0xc0be, // LS13 Flush: SRQ
		PM_LSU3_FLUSH_ULD = 0xc0aa, // LS 14Flush: Unaligned Load
		PM_LSU3_L1_CAM_CANCEL = 0xf08e, // ls3 l1 tm cam cancel
		PM_LSU3_LARX_FIN = 0x4e056, // Larx finished in LSU pipe3
		PM_LSU3_LDF = 0xc086, // LS3 Scalar Loads
		PM_LSU3_LDX = 0xc08a, // LS1 Vector Loads
		PM_LSU3_LMQ_LHR_MERGE = 0xd092, // LS1 Load Merge with another cacheline request
		PM_LSU3_PRIMARY_ERAT_HIT = 0xe096, // Primary ERAT hit
		PM_LSU3_REJECT = 0x4e05a, // LSU3 reject
		PM_LSU3_SRQ_STFWD = 0xc0a2, // LS3 SRQ forwarded data to a load
		PM_LSU3_TMA_REQ_L2 = 0xe0ae, // addrs only req to L2 only on the first one
		PM_LSU3_TM_L1_HIT = 0xe09e, // Load tm hit in L1
		PM_LSU3_TM_L1_MISS = 0xe0a6, // Load tm L1 miss
		PM_LSU_DERAT_MISS = 0x200f6, // DERAT Reloaded due to a DERAT miss
		PM_LSU_ERAT_MISS_PREF = 0xe880, // Erat miss due to prefetch
		PM_LSU_FIN = 0x30066, // LSU Finished an instruction (up to 2 per cycle)
		PM_LSU_FLUSH_UST = 0xc8ac, // Unaligned Store Flush on either pipe
		PM_LSU_FOUR_TABLEWALK_CYC = 0xd0a4, // Cycles when four tablewalks pending on this thread
		PM_LSU_FX_FIN = 0x10066, // LSU Finished a FX operation (up to 2 per cycle
		PM_LSU_L1_PREF = 0xd8b8, // hw initiated
		PM_LSU_L1_SW_PREF = 0xc898, // Software L1 Prefetches
		PM_LSU_LDF = 0xc884, // FPU loads only on LS2/LS3 ie LU0/LU1
		PM_LSU_LDX = 0xc888, // Vector loads can issue only on LS2/LS3
		PM_LSU_LMQ_FULL_CYC = 0xd0a2, // LMQ full
		PM_LSU_LMQ_S0_ALLOC = 0xd0a1, // Per thread - use edge detect to count allocates On a per thread basis
		PM_LSU_LMQ_S0_VALID = 0xd0a0, // Slot 0 of LMQ valid
		PM_LSU_LMQ_SRQ_EMPTY_ALL_CYC = 0x3001c, // ALL threads lsu empty (lmq and srq empty)
		PM_LSU_LMQ_SRQ_EMPTY_CYC = 0x2003e, // LSU empty (lmq and srq empty)
		PM_LSU_LRQ_S0_ALLOC = 0xd09f, // Per thread - use edge detect to count allocates On a per thread basis
		PM_LSU_LRQ_S0_VALID = 0xd09e, // Slot 0 of LRQ valid
		PM_LSU_LRQ_S43_ALLOC = 0xf091, // LRQ slot 43 was released
		PM_LSU_LRQ_S43_VALID = 0xf090, // LRQ slot 43 was busy
		PM_LSU_MRK_DERAT_MISS = 0x30162, // DERAT Reloaded (Miss)
		PM_LSU_NCLD = 0xc88c, // count at finish so can return only on ls0 or ls1
		PM_LSU_NCST = 0xc092, // Non-cachable Stores sent to nest
		PM_LSU_REJECT = 0x10064, // LSU Reject (up to 4 per cycle)
		PM_LSU_REJECT_ERAT_MISS = 0x2e05c, // LSU Reject due to ERAT (up to 4 per cycles)
		PM_LSU_REJECT_LHS = 0x4e05c, // LSU Reject due to LHS (up to 4 per cycle)
		PM_LSU_REJECT_LMQ_FULL = 0x1e05c, // LSU reject due to LMQ full (4 per cycle)
		PM_LSU_SET_MPRED = 0xd082, // Line already in cache at reload time
		PM_LSU_SRQ_EMPTY_CYC = 0x40008, // ALL threads srq empty
		PM_LSU_SRQ_FULL_CYC = 0x1001a, // Storage Queue is full and is blocking dispatch
		PM_LSU_SRQ_S0_ALLOC = 0xd09d, // Per thread - use edge detect to count allocates On a per thread basis
		PM_LSU_SRQ_S0_VALID = 0xd09c, // Slot 0 of SRQ valid
		PM_LSU_SRQ_S39_ALLOC = 0xf093, // SRQ slot 39 was released
		PM_LSU_SRQ_S39_VALID = 0xf092, // SRQ slot 39 was busy
		PM_LSU_SRQ_SYNC = 0xd09b, // A sync in the SRQ ended
		PM_LSU_SRQ_SYNC_CYC = 0xd09a, // A sync is in the SRQ (edge detect to count)
		PM_LSU_STORE_REJECT = 0xf084, // Store reject on either pipe
		PM_LSU_TWO_TABLEWALK_CYC = 0xd0a6, // Cycles when two tablewalks pending on this thread
		PM_LWSYNC = 0x5094, // threaded version
		PM_LWSYNC_HELD = 0x209a, // LWSYNC held at dispatch
		PM_MEM_CO = 0x4c058, // Memory castouts from this lpar
		PM_MEM_LOC_THRESH_IFU = 0x10058, // Local Memory above threshold for IFU speculation control
		PM_MEM_LOC_THRESH_LSU_HIGH = 0x40056, // Local memory above threshold for LSU medium
		PM_MEM_LOC_THRESH_LSU_MED = 0x1c05e, // Local memory above theshold for data prefetch
		PM_MEM_PREF = 0x2c058, // Memory prefetch for this lpar. Includes L4
		PM_MEM_READ = 0x10056, // Reads from Memory from this lpar (includes data/inst/xlate/l1prefetch/inst prefetch). Includes L4
		PM_MEM_RWITM = 0x3c05e, // Memory rwitm for this lpar
		PM_MRK_BACK_BR_CMPL = 0x3515e, // Marked branch instruction completed with a target address less than current instruction address
		PM_MRK_BRU_FIN = 0x2013a, // bru marked instr finish
		PM_MRK_BR_CMPL = 0x1016e, // Branch Instruction completed
		PM_MRK_BR_MPRED_CMPL = 0x301e4, // Marked Branch Mispredicted
		PM_MRK_BR_TAKEN_CMPL = 0x101e2, // Marked Branch Taken completed
		PM_MRK_CRU_FIN = 0x3013a, // IFU non-branch finished
		PM_MRK_DATA_FROM_DL2L3_MOD = 0x4d148, // The processor's data cache was reloaded with Modified (M) data from another chip's L2 or L3 on a different Node or Group (Distant)
		PM_MRK_DATA_FROM_DL2L3_MOD_CYC = 0x2d128, // Duration in cycles to reload with Modified (M) data from another chip's L2 or L3 on a different Node or Group (Distant)
		PM_MRK_DATA_FROM_DL2L3_SHR = 0x3d148, // The processor's data cache was reloaded with Shared (S) data from another chip's L2 or L3 on a different Node or Group (Distant)
		PM_MRK_DATA_FROM_DL2L3_SHR_CYC = 0x2c128, // Duration in cycles to reload with Shared (S) data from another chip's L2 or L3 on a different Node or Group (Distant)
		PM_MRK_DATA_FROM_DL4 = 0x3d14c, // The processor's data cache was reloaded from another chip's L4 on a different Node or Group (Distant) due to a marked load
		PM_MRK_DATA_FROM_DL4_CYC = 0x2c12c, // Duration in cycles to reload from another chip's L4 on a different Node or Group (Distant) due to a marked load
		PM_MRK_DATA_FROM_DMEM = 0x4d14c, // The processor's data cache was reloaded from another chip's memory on the same Node or Group (Distant) due to a marked load
		PM_MRK_DATA_FROM_DMEM_CYC = 0x2d12c, // Duration in cycles to reload from another chip's memory on the same Node or Group (Distant) due to a marked load
		PM_MRK_DATA_FROM_L2 = 0x1d142, // The processor's data cache was reloaded from local core's L2 due to a marked load
		PM_MRK_DATA_FROM_L21_MOD = 0x4d146, // The processor's data cache was reloaded with Modified (M) data from another core's L2 on the same chip due to a marked load
		PM_MRK_DATA_FROM_L21_MOD_CYC = 0x2d126, // Duration in cycles to reload with Modified (M) data from another core's L2 on the same chip due to a marked load
		PM_MRK_DATA_FROM_L21_SHR = 0x3d146, // The processor's data cache was reloaded with Shared (S) data from another core's L2 on the same chip due to a marked load
		PM_MRK_DATA_FROM_L21_SHR_CYC = 0x2c126, // Duration in cycles to reload with Shared (S) data from another core's L2 on the same chip due to a marked load
		PM_MRK_DATA_FROM_L2MISS = 0x1d14e, // Data cache reload L2 miss
		PM_MRK_DATA_FROM_L2MISS_CYC = 0x4c12e, // Duration in cycles to reload from a localtion other than the local core's L2 due to a marked load
		PM_MRK_DATA_FROM_L2_CYC = 0x4c122, // Duration in cycles to reload from local core's L2 due to a marked load
		PM_MRK_DATA_FROM_L2_DISP_CONFLICT_LDHITST = 0x3d140, // The processor's data cache was reloaded from local core's L2 with load hit store conflict due to a marked load
		PM_MRK_DATA_FROM_L2_DISP_CONFLICT_LDHITST_CYC = 0x2c120, // Duration in cycles to reload from local core's L2 with load hit store conflict due to a marked load
		PM_MRK_DATA_FROM_L2_DISP_CONFLICT_OTHER = 0x4d140, // The processor's data cache was reloaded from local core's L2 with dispatch conflict due to a marked load
		PM_MRK_DATA_FROM_L2_DISP_CONFLICT_OTHER_CYC = 0x2d120, // Duration in cycles to reload from local core's L2 with dispatch conflict due to a marked load
		PM_MRK_DATA_FROM_L2_MEPF = 0x2d140, // The processor's data cache was reloaded from local core's L2 hit without dispatch conflicts on Mepf state. due to a marked load
		PM_MRK_DATA_FROM_L2_MEPF_CYC = 0x4d120, // Duration in cycles to reload from local core's L2 hit without dispatch conflicts on Mepf state. due to a marked load
		PM_MRK_DATA_FROM_L2_NO_CONFLICT = 0x1d140, // The processor's data cache was reloaded from local core's L2 without conflict due to a marked load
		PM_MRK_DATA_FROM_L2_NO_CONFLICT_CYC = 0x4c120, // Duration in cycles to reload from local core's L2 without conflict due to a marked load
		PM_MRK_DATA_FROM_L3 = 0x4d142, // The processor's data cache was reloaded from local core's L3 due to a marked load
		PM_MRK_DATA_FROM_L31_ECO_MOD = 0x4d144, // The processor's data cache was reloaded with Modified (M) data from another core's ECO L3 on the same chip due to a marked load
		PM_MRK_DATA_FROM_L31_ECO_MOD_CYC = 0x2d124, // Duration in cycles to reload with Modified (M) data from another core's ECO L3 on the same chip due to a marked load
		PM_MRK_DATA_FROM_L31_ECO_SHR = 0x3d144, // The processor's data cache was reloaded with Shared (S) data from another core's ECO L3 on the same chip due to a marked load
		PM_MRK_DATA_FROM_L31_ECO_SHR_CYC = 0x2c124, // Duration in cycles to reload with Shared (S) data from another core's ECO L3 on the same chip due to a marked load
		PM_MRK_DATA_FROM_L31_MOD = 0x2d144, // The processor's data cache was reloaded with Modified (M) data from another core's L3 on the same chip due to a marked load
		PM_MRK_DATA_FROM_L31_MOD_CYC = 0x4d124, // Duration in cycles to reload with Modified (M) data from another core's L3 on the same chip due to a marked load
		PM_MRK_DATA_FROM_L31_SHR = 0x1d146, // The processor's data cache was reloaded with Shared (S) data from another core's L3 on the same chip due to a marked load
		PM_MRK_DATA_FROM_L31_SHR_CYC = 0x4c126, // Duration in cycles to reload with Shared (S) data from another core's L3 on the same chip due to a marked load
		PM_MRK_DATA_FROM_L3MISS = 0x201e4, // The processor's data cache was reloaded from a localtion other than the local core's L3 due to a marked load
		PM_MRK_DATA_FROM_L3MISS_CYC = 0x2d12e, // Duration in cycles to reload from a localtion other than the local core's L3 due to a marked load
		PM_MRK_DATA_FROM_L3_CYC = 0x2d122, // Duration in cycles to reload from local core's L3 due to a marked load
		PM_MRK_DATA_FROM_L3_DISP_CONFLICT = 0x3d142, // The processor's data cache was reloaded from local core's L3 with dispatch conflict due to a marked load
		PM_MRK_DATA_FROM_L3_DISP_CONFLICT_CYC = 0x2c122, // Duration in cycles to reload from local core's L3 with dispatch conflict due to a marked load
		PM_MRK_DATA_FROM_L3_MEPF = 0x2d142, // The processor's data cache was reloaded from local core's L3 without dispatch conflicts hit on Mepf state. due to a marked load
		PM_MRK_DATA_FROM_L3_MEPF_CYC = 0x4d122, // Duration in cycles to reload from local core's L3 without dispatch conflicts hit on Mepf state. due to a marked load
		PM_MRK_DATA_FROM_L3_NO_CONFLICT = 0x1d144, // The processor's data cache was reloaded from local core's L3 without conflict due to a marked load
		PM_MRK_DATA_FROM_L3_NO_CONFLICT_CYC = 0x4c124, // Duration in cycles to reload from local core's L3 without conflict due to a marked load
		PM_MRK_DATA_FROM_LL4 = 0x1d14c, // The processor's data cache was reloaded from the local chip's L4 cache due to a marked load
		PM_MRK_DATA_FROM_LL4_CYC = 0x4c12c, // Duration in cycles to reload from the local chip's L4 cache due to a marked load
		PM_MRK_DATA_FROM_LMEM = 0x2d148, // The processor's data cache was reloaded from the local chip's Memory due to a marked load
		PM_MRK_DATA_FROM_LMEM_CYC = 0x4d128, // Duration in cycles to reload from the local chip's Memory due to a marked load
		PM_MRK_DATA_FROM_MEM = 0x201e0, // The processor's data cache was reloaded from a memory location including L4 from local remote or distant due to a marked load
		PM_MRK_DATA_FROM_MEMORY = 0x2d14c, // The processor's data cache was reloaded from a memory location including L4 from local remote or distant due to a marked load
		PM_MRK_DATA_FROM_MEMORY_CYC = 0x4d12c, // Duration in cycles to reload from a memory location including L4 from local remote or distant due to a marked load
		PM_MRK_DATA_FROM_OFF_CHIP_CACHE = 0x4d14a, // The processor's data cache was reloaded either shared or modified data from another core's L2/L3 on a different chip (remote or distant) due to a marked load
		PM_MRK_DATA_FROM_OFF_CHIP_CACHE_CYC = 0x2d12a, // Duration in cycles to reload either shared or modified data from another core's L2/L3 on a different chip (remote or distant) due to a marked load
		PM_MRK_DATA_FROM_ON_CHIP_CACHE = 0x1d148, // The processor's data cache was reloaded either shared or modified data from another core's L2/L3 on the same chip due to a marked load
		PM_MRK_DATA_FROM_ON_CHIP_CACHE_CYC = 0x4c128, // Duration in cycles to reload either shared or modified data from another core's L2/L3 on the same chip due to a marked load
		PM_MRK_DATA_FROM_RL2L3_MOD = 0x2d146, // The processor's data cache was reloaded with Modified (M) data from another chip's L2 or L3 on the same Node or Group (Remote)
		PM_MRK_DATA_FROM_RL2L3_MOD_CYC = 0x4d126, // Duration in cycles to reload with Modified (M) data from another chip's L2 or L3 on the same Node or Group (Remote)
		PM_MRK_DATA_FROM_RL2L3_SHR = 0x1d14a, // The processor's data cache was reloaded with Shared (S) data from another chip's L2 or L3 on the same Node or Group (Remote)
		PM_MRK_DATA_FROM_RL2L3_SHR_CYC = 0x4c12a, // Duration in cycles to reload with Shared (S) data from another chip's L2 or L3 on the same Node or Group (Remote)
		PM_MRK_DATA_FROM_RL4 = 0x2d14a, // The processor's data cache was reloaded from another chip's L4 on the same Node or Group (Remote) due to a marked load
		PM_MRK_DATA_FROM_RL4_CYC = 0x4d12a, // Duration in cycles to reload from another chip's L4 on the same Node or Group (Remote) due to a marked load
		PM_MRK_DATA_FROM_RMEM = 0x3d14a, // The processor's data cache was reloaded from another chip's memory on the same Node or Group (Remote) due to a marked load
		PM_MRK_DATA_FROM_RMEM_CYC = 0x2c12a, // Duration in cycles to reload from another chip's memory on the same Node or Group (Remote) due to a marked load
		PM_MRK_DCACHE_RELOAD_INTV = 0x40118, // Combined Intervention event
		PM_MRK_DERAT_MISS = 0x301e6, // Erat Miss (TLB Access) All page sizes
		PM_MRK_DERAT_MISS_16G = 0x4d154, // Marked Data ERAT Miss (Data TLB Access) page size 16G
		PM_MRK_DERAT_MISS_16M = 0x3d154, // Marked Data ERAT Miss (Data TLB Access) page size 16M
		PM_MRK_DERAT_MISS_4K = 0x1d156, // Marked Data ERAT Miss (Data TLB Access) page size 4K
		PM_MRK_DERAT_MISS_64K = 0x2d154, // Marked Data ERAT Miss (Data TLB Access) page size 64K
		PM_MRK_DFU_FIN = 0x20132, // Decimal Unit marked Instruction Finish
		PM_MRK_DPTEG_FROM_DL2L3_MOD = 0x4f148, // A Page Table Entry was loaded into the TLB with Modified (M) data from another chip's L2 or L3 on a different Node or Group (Distant)
		PM_MRK_DPTEG_FROM_DL2L3_SHR = 0x3f148, // A Page Table Entry was loaded into the TLB with Shared (S) data from another chip's L2 or L3 on a different Node or Group (Distant)
		PM_MRK_DPTEG_FROM_DL4 = 0x3f14c, // A Page Table Entry was loaded into the TLB from another chip's L4 on a different Node or Group (Distant) due to a marked data side request
		PM_MRK_DPTEG_FROM_DMEM = 0x4f14c, // A Page Table Entry was loaded into the TLB from another chip's memory on the same Node or Group (Distant) due to a marked data side request
		PM_MRK_DPTEG_FROM_L2 = 0x1f142, // A Page Table Entry was loaded into the TLB from local core's L2 due to a marked data side request
		PM_MRK_DPTEG_FROM_L21_MOD = 0x4f146, // A Page Table Entry was loaded into the TLB with Modified (M) data from another core's L2 on the same chip due to a marked data side request
		PM_MRK_DPTEG_FROM_L21_SHR = 0x3f146, // A Page Table Entry was loaded into the TLB with Shared (S) data from another core's L2 on the same chip due to a marked data side request
		PM_MRK_DPTEG_FROM_L2MISS = 0x1f14e, // A Page Table Entry was loaded into the TLB from a localtion other than the local core's L2 due to a marked data side request
		PM_MRK_DPTEG_FROM_L2_DISP_CONFLICT_LDHITST = 0x3f140, // A Page Table Entry was loaded into the TLB from local core's L2 with load hit store conflict due to a marked data side request
		PM_MRK_DPTEG_FROM_L2_DISP_CONFLICT_OTHER = 0x4f140, // A Page Table Entry was loaded into the TLB from local core's L2 with dispatch conflict due to a marked data side request
		PM_MRK_DPTEG_FROM_L2_MEPF = 0x2f140, // A Page Table Entry was loaded into the TLB from local core's L2 hit without dispatch conflicts on Mepf state. due to a marked data side request
		PM_MRK_DPTEG_FROM_L2_NO_CONFLICT = 0x1f140, // A Page Table Entry was loaded into the TLB from local core's L2 without conflict due to a marked data side request
		PM_MRK_DPTEG_FROM_L3 = 0x4f142, // A Page Table Entry was loaded into the TLB from local core's L3 due to a marked data side request
		PM_MRK_DPTEG_FROM_L31_ECO_MOD = 0x4f144, // A Page Table Entry was loaded into the TLB with Modified (M) data from another core's ECO L3 on the same chip due to a marked data side request
		PM_MRK_DPTEG_FROM_L31_ECO_SHR = 0x3f144, // A Page Table Entry was loaded into the TLB with Shared (S) data from another core's ECO L3 on the same chip due to a marked data side request
		PM_MRK_DPTEG_FROM_L31_MOD = 0x2f144, // A Page Table Entry was loaded into the TLB with Modified (M) data from another core's L3 on the same chip due to a marked data side request
		PM_MRK_DPTEG_FROM_L31_SHR = 0x1f146, // A Page Table Entry was loaded into the TLB with Shared (S) data from another core's L3 on the same chip due to a marked data side request
		PM_MRK_DPTEG_FROM_L3MISS = 0x4f14e, // A Page Table Entry was loaded into the TLB from a localtion other than the local core's L3 due to a marked data side request
		PM_MRK_DPTEG_FROM_L3_DISP_CONFLICT = 0x3f142, // A Page Table Entry was loaded into the TLB from local core's L3 with dispatch conflict due to a marked data side request
		PM_MRK_DPTEG_FROM_L3_MEPF = 0x2f142, // A Page Table Entry was loaded into the TLB from local core's L3 without dispatch conflicts hit on Mepf state. due to a marked data side request
		PM_MRK_DPTEG_FROM_L3_NO_CONFLICT = 0x1f144, // A Page Table Entry was loaded into the TLB from local core's L3 without conflict due to a marked data side request
		PM_MRK_DPTEG_FROM_LL4 = 0x1f14c, // A Page Table Entry was loaded into the TLB from the local chip's L4 cache due to a marked data side request
		PM_MRK_DPTEG_FROM_LMEM = 0x2f148, // A Page Table Entry was loaded into the TLB from the local chip's Memory due to a marked data side request
		PM_MRK_DPTEG_FROM_MEMORY = 0x2f14c, // A Page Table Entry was loaded into the TLB from a memory location including L4 from local remote or distant due to a marked data side request
		PM_MRK_DPTEG_FROM_OFF_CHIP_CACHE = 0x4f14a, // A Page Table Entry was loaded into the TLB either shared or modified data from another core's L2/L3 on a different chip (remote or distant) due to a marked data side request
		PM_MRK_DPTEG_FROM_ON_CHIP_CACHE = 0x1f148, // A Page Table Entry was loaded into the TLB either shared or modified data from another core's L2/L3 on the same chip due to a marked data side request
		PM_MRK_DPTEG_FROM_RL2L3_MOD = 0x2f146, // A Page Table Entry was loaded into the TLB with Modified (M) data from another chip's L2 or L3 on the same Node or Group (Remote)
		PM_MRK_DPTEG_FROM_RL2L3_SHR = 0x1f14a, // A Page Table Entry was loaded into the TLB with Shared (S) data from another chip's L2 or L3 on the same Node or Group (Remote)
		PM_MRK_DPTEG_FROM_RL4 = 0x2f14a, // A Page Table Entry was loaded into the TLB from another chip's L4 on the same Node or Group (Remote) due to a marked data side request
		PM_MRK_DPTEG_FROM_RMEM = 0x3f14a, // A Page Table Entry was loaded into the TLB from another chip's memory on the same Node or Group (Remote) due to a marked data side request
		PM_MRK_DTLB_MISS = 0x401e4, // Marked dtlb miss
		PM_MRK_DTLB_MISS_16G = 0x1d158, // Marked Data TLB Miss page size 16G
		PM_MRK_DTLB_MISS_16M = 0x4d156, // Marked Data TLB Miss page size 16M
		PM_MRK_DTLB_MISS_4K = 0x2d156, // Marked Data TLB Miss page size 4k
		PM_MRK_DTLB_MISS_64K = 0x3d156, // Marked Data TLB Miss page size 64K
		PM_MRK_FAB_RSP_BKILL = 0x40154, // Marked store had to do a bkill
		PM_MRK_FAB_RSP_BKILL_CYC = 0x2f150, // cycles L2 RC took for a bkill
		PM_MRK_FAB_RSP_CLAIM_RTY = 0x3015e, // Sampled store did a rwitm and got a rty
		PM_MRK_FAB_RSP_DCLAIM = 0x30154, // Marked store had to do a dclaim
		PM_MRK_FAB_RSP_DCLAIM_CYC = 0x2f152, // cycles L2 RC took for a dclaim
		PM_MRK_FAB_RSP_MATCH = 0x30156, // ttype and cresp matched as specified in MMCR1
		PM_MRK_FAB_RSP_MATCH_CYC = 0x4f152, // cresp/ttype match cycles
		PM_MRK_FAB_RSP_RD_RTY = 0x4015e, // Sampled L2 reads retry count
		PM_MRK_FAB_RSP_RD_T_INTV = 0x1015e, // Sampled Read got a T intervention
		PM_MRK_FAB_RSP_RWITM_CYC = 0x4f150, // cycles L2 RC took for a rwitm
		PM_MRK_FAB_RSP_RWITM_RTY = 0x2015e, // Sampled store did a rwitm and got a rty
		PM_MRK_FILT_MATCH = 0x2013c, // Marked filter Match
		PM_MRK_FIN_STALL_CYC = 0x1013c, // Marked instruction Finish Stall cycles (marked finish after NTC) (use edge detect to count )
		PM_MRK_FXU_FIN = 0x20134, // fxu marked instr finish
		PM_MRK_GRP_CMPL = 0x40130, // marked instruction finished (completed)
		PM_MRK_GRP_IC_MISS = 0x4013a, // Marked Group experienced I cache miss
		PM_MRK_GRP_NTC = 0x3013c, // Marked group ntc cycles.
		PM_MRK_INST_CMPL = 0x401e0, // marked instruction completed
		PM_MRK_INST_DECODED = 0x20130, // marked instruction decoded
		PM_MRK_INST_DISP = 0x101e0, // The thread has dispatched a randomly sampled marked instruction
		PM_MRK_INST_FIN = 0x30130, // marked instruction finished
		PM_MRK_INST_FROM_L3MISS = 0x401e6, // Marked instruction was reloaded from a location beyond the local chiplet
		PM_MRK_INST_ISSUED = 0x10132, // Marked instruction issued
		PM_MRK_INST_TIMEO = 0x40134, // marked Instruction finish timeout (instruction lost)
		PM_MRK_L1_ICACHE_MISS = 0x101e4, // sampled Instruction suffered an icache Miss
		PM_MRK_L1_RELOAD_VALID = 0x101ea, // Marked demand reload
		PM_MRK_L2_RC_DISP = 0x20114, // Marked Instruction RC dispatched in L2
		PM_MRK_L2_RC_DONE = 0x3012a, // Marked RC done
		PM_MRK_LARX_FIN = 0x40116, // Larx finished
		PM_MRK_LD_MISS_EXPOSED = 0x1013f, // Marked Load exposed Miss (exposed period ended)
		PM_MRK_LD_MISS_EXPOSED_CYC = 0x1013e, // Marked Load exposed Miss cycles
		PM_MRK_LD_MISS_L1 = 0x201e2, // Marked DL1 Demand Miss counted at exec time
		PM_MRK_LD_MISS_L1_CYC = 0x4013e, // Marked ld latency
		PM_MRK_LSU_FIN = 0x40132, // lsu marked instr finish
		PM_MRK_LSU_FLUSH = 0xd180, // Flush: (marked) : All Cases
		PM_MRK_LSU_FLUSH_LRQ = 0xd188, // Flush: (marked) LRQ
		PM_MRK_LSU_FLUSH_SRQ = 0xd18a, // Flush: (marked) SRQ
		PM_MRK_LSU_FLUSH_ULD = 0xd184, // Flush: (marked) Unaligned Load
		PM_MRK_LSU_FLUSH_UST = 0xd186, // Flush: (marked) Unaligned Store
		PM_MRK_LSU_REJECT = 0x40164, // LSU marked reject (up to 2 per cycle)
		PM_MRK_LSU_REJECT_ERAT_MISS = 0x30164, // LSU marked reject due to ERAT (up to 2 per cycle)
		PM_MRK_NTF_FIN = 0x20112, // Marked next to finish instruction finished
		PM_MRK_RUN_CYC = 0x1d15e, // Marked run cycles
		PM_MRK_SRC_PREF_TRACK_EFF = 0x1d15a, // Marked src pref track was effective
		PM_MRK_SRC_PREF_TRACK_INEFF = 0x3d15a, // Prefetch tracked was ineffective for marked src
		PM_MRK_SRC_PREF_TRACK_MOD = 0x4d15c, // Prefetch tracked was moderate for marked src
		PM_MRK_SRC_PREF_TRACK_MOD_L2 = 0x1d15c, // Marked src Prefetch Tracked was moderate (source L2)
		PM_MRK_SRC_PREF_TRACK_MOD_L3 = 0x3d15c, // Prefetch tracked was moderate (L3 hit) for marked src
		PM_MRK_STALL_CMPLU_CYC = 0x3013e, // Marked Group completion Stall
		PM_MRK_STCX_FAIL = 0x3e158, // marked stcx failed
		PM_MRK_ST_CMPL = 0x10134, // marked store completed and sent to nest
		PM_MRK_ST_CMPL_INT = 0x30134, // marked store finished with intervention
		PM_MRK_ST_DRAIN_TO_L2DISP_CYC = 0x3f150, // cycles to drain st from core to L2
		PM_MRK_ST_FWD = 0x3012c, // Marked st forwards
		PM_MRK_ST_L2DISP_TO_CMPL_CYC = 0x1f150, // cycles from L2 rc disp to l2 rc completion
		PM_MRK_ST_NEST = 0x20138, // Marked store sent to nest
		PM_MRK_TGT_PREF_TRACK_EFF = 0x1c15a, // Marked target pref track was effective
		PM_MRK_TGT_PREF_TRACK_INEFF = 0x3c15a, // Prefetch tracked was ineffective for marked target
		PM_MRK_TGT_PREF_TRACK_MOD = 0x4c15c, // Prefetch tracked was moderate for marked target
		PM_MRK_TGT_PREF_TRACK_MOD_L2 = 0x1c15c, // Marked target Prefetch Tracked was moderate (source L2)
		PM_MRK_TGT_PREF_TRACK_MOD_L3 = 0x3c15c, // Prefetch tracked was moderate (L3 hit) for marked target
		PM_MRK_VSU_FIN = 0x30132, // VSU marked instr finish
		PM_MULT_MRK = 0x3d15e, // mult marked instr
		PM_NESTED_TEND = 0x20b0, // Completion time nested tend
		PM_NEST_REF_CLK = 0x3006e, // Multiply by 4 to obtain the number of PB cycles
		PM_NON_FAV_TBEGIN = 0x20b6, // Dispatch time non favored tbegin
		PM_NON_TM_RST_SC = 0x328084, // non tm snp rst tm sc
		PM_NTCG_ALL_FIN = 0x2001a, // Cycles after all instructions have finished to group completed
		PM_OUTER_TBEGIN = 0x20ac, // Completion time outer tbegin
		PM_OUTER_TEND = 0x20ae, // Completion time outer tend
		PM_PMC1_OVERFLOW = 0x20010, // Overflow from counter 1
		PM_PMC2_OVERFLOW = 0x30010, // Overflow from counter 2
		PM_PMC2_REWIND = 0x30020, // PMC2 Rewind Event (did not match condition)
		PM_PMC2_SAVED = 0x10022, // PMC2 Rewind Value saved
		PM_PMC3_OVERFLOW = 0x40010, // Overflow from counter 3
		PM_PMC4_OVERFLOW = 0x10010, // Overflow from counter 4
		PM_PMC4_REWIND = 0x10020, // PMC4 Rewind Event
		PM_PMC4_SAVED = 0x30022, // PMC4 Rewind Value saved (matched condition)
		PM_PMC5_OVERFLOW = 0x10024, // Overflow from counter 5
		PM_PMC6_OVERFLOW = 0x30024, // Overflow from counter 6
		PM_PREF_TRACKED = 0x2005a, // Total number of Prefetch Operations that were tracked
		PM_PREF_TRACK_EFF = 0x1005a, // Prefetch Tracked was effective
		PM_PREF_TRACK_INEFF = 0x3005a, // Prefetch tracked was ineffective
		PM_PREF_TRACK_MOD = 0x4005a, // Prefetch tracked was moderate
		PM_PREF_TRACK_MOD_L2 = 0x1005c, // Prefetch Tracked was moderate (source L2)
		PM_PREF_TRACK_MOD_L3 = 0x3005c, // Prefetch tracked was moderate (L3)
		PM_PROBE_NOP_DISP = 0x40014, // ProbeNops dispatched
		PM_PTE_PREFETCH = 0xe084, // PTE prefetches
		PM_PUMP_CPRED = 0x10054, // Pump prediction correct. Counts across all types of pumps for all data types excluding data prefetch (demand load
		PM_PUMP_MPRED = 0x40052, // Pump misprediction. Counts across all types of pumps for all data types excluding data prefetch (demand load
		PM_RC0_ALLOC = 0x16081, // RC mach 0 Busy. Used by PMU to sample ave RC livetime(mach0 used as sample point)
		PM_RC0_BUSY = 0x16080, // RC mach 0 Busy. Used by PMU to sample ave RC livetime(mach0 used as sample point)
		PM_RC_LIFETIME_EXC_1024 = 0xde200301eaull, // Number of times the RC machine for a sampled instruction was active for more than 1024 cycles
		PM_RC_LIFETIME_EXC_2048 = 0xde200401ecull, // Number of times the RC machine for a sampled instruction was active for more than 2048 cycles
		PM_RC_LIFETIME_EXC_256 = 0xde200101e8ull, // Number of times the RC machine for a sampled instruction was active for more than 256 cycles
		PM_RC_LIFETIME_EXC_32 = 0xde200201e6ull, // Number of times the RC machine for a sampled instruction was active for more than 32 cycles
		PM_RC_USAGE = 0x36088, // Continuous 16 cycle(2to1) window where this signals rotates thru sampling each L2 RC machine busy. PMU uses this wave to then do 16 cyc count to sample total number of machs running
		PM_RD_CLEARING_SC = 0x34808e, // rd clearing sc
		PM_RD_FORMING_SC = 0x34808c, // rd forming sc
		PM_RD_HIT_PF = 0x428086, // rd machine hit l3 pf machine
		PM_REAL_SRQ_FULL = 0x20004, // Out of real srq entries
		PM_RUN_CYC = 0x600f4, // Run_cycles
		PM_RUN_CYC_SMT2_MODE = 0x3006c, // Cycles run latch is set and core is in SMT2 mode
		PM_RUN_CYC_SMT2_SHRD_MODE = 0x2006a, // cycles this threads run latch is set and the core is in SMT2 shared mode
		PM_RUN_CYC_SMT2_SPLIT_MODE = 0x1006a, // Cycles run latch is set and core is in SMT2-split mode
		PM_RUN_CYC_SMT4_MODE = 0x2006c, // cycles this threads run latch is set and the core is in SMT4 mode
		PM_RUN_CYC_SMT8_MODE = 0x4006c, // Cycles run latch is set and core is in SMT8 mode
		PM_RUN_CYC_ST_MODE = 0x1006c, // Cycles run latch is set and core is in ST mode
		PM_RUN_INST_CMPL = 0x500fa, // Run_Instructions
		PM_RUN_PURR = 0x400f4, // Run_PURR
		PM_RUN_SPURR = 0x10008, // Run SPURR
		PM_SEC_ERAT_HIT = 0xf082, // secondary ERAT Hit
		PM_SHL_CREATED = 0x508c, // Store-Hit-Load Table Entry Created
		PM_SHL_ST_CONVERT = 0x508e, // Store-Hit-Load Table Read Hit with entry Enabled
		PM_SHL_ST_DISABLE = 0x5090, // Store-Hit-Load Table Read Hit with entry Disabled (entry was disabled due to the entry shown to not prevent the flush)
		PM_SN0_ALLOC = 0x26085, // SN mach 0 Busy. Used by PMU to sample ave RC livetime(mach0 used as sample point)
		PM_SN0_BUSY = 0x26084, // SN mach 0 Busy. Used by PMU to sample ave RC livetime(mach0 used as sample point)
		PM_SNOOP_TLBIE = 0xd0b2, // TLBIE snoop
		PM_SNP_TM_HIT_M = 0x338088, // snp tm st hit m mu
		PM_SNP_TM_HIT_T = 0x33808a, // snp tm_st_hit t tn te
		PM_SN_USAGE = 0x4608c, // Continuous 16 cycle(2to1) window where this signals rotates thru sampling each L2 SN machine busy. PMU uses this wave to then do 16 cyc count to sample total number of machs running
		PM_STALL_END_GCT_EMPTY = 0x10028, // Count ended because GCT went empty
		PM_STCX_FAIL = 0x1e058, // stcx failed
		PM_STCX_LSU = 0xc090, // STCX executed reported at sent to nest
		PM_ST_CAUSED_FAIL = 0x717080, // Non TM St caused any thread to fail
		PM_ST_CMPL = 0x20016, // Store completion count
		PM_ST_FIN = 0x200f0, // Store Instructions Finished
		PM_ST_FWD = 0x20018, // Store forwards that finished
		PM_ST_MISS_L1 = 0x300f0, // Store Missed L1
		PM_SUSPENDED = 0x0, // Counter OFF
		PM_SWAP_CANCEL = 0x3090, // SWAP cancel
		PM_SWAP_CANCEL_GPR = 0x3092, // SWAP cancel
		PM_SWAP_COMPLETE = 0x308c, // swap cast in completed
		PM_SWAP_COMPLETE_GPR = 0x308e, // swap cast in completed fpr gpr
		PM_SYNC_MRK_BR_LINK = 0x15152, // Marked Branch and link branch that can cause a synchronous interrupt
		PM_SYNC_MRK_BR_MPRED = 0x1515c, // Marked Branch mispredict that can cause a synchronous interrupt
		PM_SYNC_MRK_FX_DIVIDE = 0x15156, // Marked fixed point divide that can cause a synchronous interrupt
		PM_SYNC_MRK_L2HIT = 0x15158, // Marked L2 Hits that can throw a synchronous interrupt
		PM_SYNC_MRK_L2MISS = 0x1515a, // Marked L2 Miss that can throw a synchronous interrupt
		PM_SYNC_MRK_L3MISS = 0x15154, // Marked L3 misses that can throw a synchronous interrupt
		PM_SYNC_MRK_PROBE_NOP = 0x15150, // Marked probeNops which can cause synchronous interrupts
		PM_SYS_PUMP_CPRED = 0x30050, // Initial and Final Pump Scope was system pump for all data types excluding data prefetch (demand load
		PM_SYS_PUMP_MPRED = 0x30052, // Final Pump Scope (system) mispredicted. Either the original scope was too small (Chip/Group) or the original scope was System and it should have been smaller. Counts for all data types excluding data prefetch (demand load
		PM_SYS_PUMP_MPRED_RTY = 0x40050, // Final Pump Scope (system) ended up larger than Initial Pump Scope (Chip/Group) for all data types excluding data prefetch (demand load
		PM_TABLEWALK_CYC = 0x10026, // Cycles when a tablewalk (I or D) is active
		PM_TABLEWALK_CYC_PREF = 0xe086, // tablewalk qualified for pte prefetches
		PM_TABORT_TRECLAIM = 0x20b2, // Completion time tabortnoncd
		PM_TB_BIT_TRANS = 0x300f8, // timebase event
		PM_TEND_PEND_CYC = 0xe0ba, // TEND latency per thread
		PM_THRD_ALL_RUN_CYC = 0x2000c, // All Threads in Run_cycles (was both threads in run_cycles)
		PM_THRD_CONC_RUN_INST = 0x300f4, // PPC Instructions Finished when both threads in run_cycles
		PM_THRD_GRP_CMPL_BOTH_CYC = 0x10012, // Cycles group completed on both completion slots by any thread
		PM_THRD_PRIO_0_1_CYC = 0x40bc, // Cycles thread running at priority level 0 or 1
		PM_THRD_PRIO_2_3_CYC = 0x40be, // Cycles thread running at priority level 2 or 3
		PM_THRD_PRIO_4_5_CYC = 0x5080, // Cycles thread running at priority level 4 or 5
		PM_THRD_PRIO_6_7_CYC = 0x5082, // Cycles thread running at priority level 6 or 7
		PM_THRD_REBAL_CYC = 0x3098, // cycles rebalance was active
		PM_THRESH_EXC_1024 = 0x301ea, // Threshold counter exceeded a value of 1024
		PM_THRESH_EXC_128 = 0x401ea, // Threshold counter exceeded a value of 128
		PM_THRESH_EXC_2048 = 0x401ec, // Threshold counter exceeded a value of 2048
		PM_THRESH_EXC_256 = 0x101e8, // Threshold counter exceed a count of 256
		PM_THRESH_EXC_32 = 0x201e6, // Threshold counter exceeded a value of 32
		PM_THRESH_EXC_4096 = 0x101e6, // Threshold counter exceed a count of 4096
		PM_THRESH_EXC_512 = 0x201e8, // Threshold counter exceeded a value of 512
		PM_THRESH_EXC_64 = 0x301e8, // IFU non-branch finished
		PM_THRESH_MET = 0x101ec, // threshold exceeded
		PM_THRESH_NOT_MET = 0x4016e, // Threshold counter did not meet threshold
		PM_TLBIE_FIN = 0x30058, // tlbie finished
		PM_TLB_MISS = 0x20066, // TLB Miss (I + D)
		PM_TM_BEGIN_ALL = 0x20b8, // Tm any tbegin
		PM_TM_CAM_OVERFLOW = 0x318082, // l3 tm cam overflow during L2 co of SC
		PM_TM_CAP_OVERFLOW = 0x74708c, // TM Footprint Capactiy Overflow
		PM_TM_END_ALL = 0x20ba, // Tm any tend
		PM_TM_FAIL_CONF_NON_TM = 0x3086, // TEXAS fail reason @ completion
		PM_TM_FAIL_CON_TM = 0x3088, // TEXAS fail reason @ completion
		PM_TM_FAIL_DISALLOW = 0xe0b2, // TM fail disallow
		PM_TM_FAIL_FOOTPRINT_OVERFLOW = 0x3084, // TEXAS fail reason @ completion
		PM_TM_FAIL_NON_TX_CONFLICT = 0xe0b8, // Non transactional conflict from LSU whtver gets repoted to texas
		PM_TM_FAIL_SELF = 0x308a, // TEXAS fail reason @ completion
		PM_TM_FAIL_TLBIE = 0xe0b4, // TLBIE hit bloom filter
		PM_TM_FAIL_TX_CONFLICT = 0xe0b6, // Transactional conflict from LSU
		PM_TM_FAV_CAUSED_FAIL = 0x727086, // TM Load (fav) caused another thread to fail
		PM_TM_LD_CAUSED_FAIL = 0x717082, // Non TM Ld caused any thread to fail
		PM_TM_LD_CONF = 0x727084, // TM Load (fav or non-fav) ran into conflict (failed)
		PM_TM_RST_SC = 0x328086, // tm snp rst tm sc
		PM_TM_SC_CO = 0x318080, // l3 castout tm Sc line
		PM_TM_ST_CAUSED_FAIL = 0x73708a, // TM Store (fav or non-fav) caused another thread to fail
		PM_TM_ST_CONF = 0x737088, // TM Store (fav or non-fav) ran into conflict (failed)
		PM_TM_TBEGIN = 0x20bc, // Tm nested tbegin
		PM_TM_TRANS_RUN_CYC = 0x10060, // run cycles in transactional state
		PM_TM_TRANS_RUN_INST = 0x30060, // Instructions completed in transactional state
		PM_TM_TRESUME = 0x3080, // Tm resume
		PM_TM_TSUSPEND = 0x20be, // Tm suspend
		PM_TM_TX_PASS_RUN_CYC = 0x2e012, // cycles spent in successful transactions
		PM_TM_TX_PASS_RUN_INST = 0x4e014, // run instructions spent in successful transactions.
		PM_UP_PREF_L3 = 0xe08c, // Micropartition prefetch
		PM_UP_PREF_POINTER = 0xe08e, // Micrpartition pointer prefetches
		PM_VSU0_16FLOP = 0xa0a4, // Sixteen flops operation (SP vector versions of fdiv
		PM_VSU0_1FLOP = 0xa080, // one flop (fadd
		PM_VSU0_2FLOP = 0xa098, // two flops operation (scalar fmadd
		PM_VSU0_4FLOP = 0xa09c, // four flops operation (scalar fdiv
		PM_VSU0_8FLOP = 0xa0a0, // eight flops operation (DP vector versions of fdiv
		PM_VSU0_COMPLEX_ISSUED = 0xb0a4, // Complex VMX instruction issued
		PM_VSU0_CY_ISSUED = 0xb0b4, // Cryptographic instruction RFC02196 Issued
		PM_VSU0_DD_ISSUED = 0xb0a8, // 64BIT Decimal Issued
		PM_VSU0_DP_2FLOP = 0xa08c, // DP vector version of fmul
		PM_VSU0_DP_FMA = 0xa090, // DP vector version of fmadd
		PM_VSU0_DP_FSQRT_FDIV = 0xa094, // DP vector versions of fdiv
		PM_VSU0_DQ_ISSUED = 0xb0ac, // 128BIT Decimal Issued
		PM_VSU0_EX_ISSUED = 0xb0b0, // Direct move 32/64b VRFtoGPR RFC02206 Issued
		PM_VSU0_FIN = 0xa0bc, // VSU0 Finished an instruction
		PM_VSU0_FMA = 0xa084, // two flops operation (fmadd
		PM_VSU0_FPSCR = 0xb098, // Move to/from FPSCR type instruction issued on Pipe 0
		PM_VSU0_FSQRT_FDIV = 0xa088, // four flops operation (fdiv
		PM_VSU0_PERMUTE_ISSUED = 0xb090, // Permute VMX Instruction Issued
		PM_VSU0_SCALAR_DP_ISSUED = 0xb088, // Double Precision scalar instruction issued on Pipe0
		PM_VSU0_SIMPLE_ISSUED = 0xb094, // Simple VMX instruction issued
		PM_VSU0_SINGLE = 0xa0a8, // FPU single precision
		PM_VSU0_SQ = 0xb09c, // Store Vector Issued
		PM_VSU0_STF = 0xb08c, // FPU store (SP or DP) issued on Pipe0
		PM_VSU0_VECTOR_DP_ISSUED = 0xb080, // Double Precision vector instruction issued on Pipe0
		PM_VSU0_VECTOR_SP_ISSUED = 0xb084, // Single Precision vector instruction issued (executed)
		PM_VSU1_16FLOP = 0xa0a6, // Sixteen flops operation (SP vector versions of fdiv
		PM_VSU1_1FLOP = 0xa082, // one flop (fadd
		PM_VSU1_2FLOP = 0xa09a, // two flops operation (scalar fmadd
		PM_VSU1_4FLOP = 0xa09e, // four flops operation (scalar fdiv
		PM_VSU1_8FLOP = 0xa0a2, // eight flops operation (DP vector versions of fdiv
		PM_VSU1_COMPLEX_ISSUED = 0xb0a6, // Complex VMX instruction issued
		PM_VSU1_CY_ISSUED = 0xb0b6, // Cryptographic instruction RFC02196 Issued
		PM_VSU1_DD_ISSUED = 0xb0aa, // 64BIT Decimal Issued
		PM_VSU1_DP_2FLOP = 0xa08e, // DP vector version of fmul
		PM_VSU1_DP_FMA = 0xa092, // DP vector version of fmadd
		PM_VSU1_DP_FSQRT_FDIV = 0xa096, // DP vector versions of fdiv
		PM_VSU1_DQ_ISSUED = 0xb0ae, // 128BIT Decimal Issued
		PM_VSU1_EX_ISSUED = 0xb0b2, // Direct move 32/64b VRFtoGPR RFC02206 Issued
		PM_VSU1_FIN = 0xa0be, // VSU1 Finished an instruction
		PM_VSU1_FMA = 0xa086, // two flops operation (fmadd
		PM_VSU1_FPSCR = 0xb09a, // Move to/from FPSCR type instruction issued on Pipe 0
		PM_VSU1_FSQRT_FDIV = 0xa08a, // four flops operation (fdiv
		PM_VSU1_PERMUTE_ISSUED = 0xb092, // Permute VMX Instruction Issued
		PM_VSU1_SCALAR_DP_ISSUED = 0xb08a, // Double Precision scalar instruction issued on Pipe1
		PM_VSU1_SIMPLE_ISSUED = 0xb096, // Simple VMX instruction issued
		PM_VSU1_SINGLE = 0xa0aa, // FPU single precision
		PM_VSU1_SQ = 0xb09e, // Store Vector Issued
		PM_VSU1_STF = 0xb08e, // FPU store (SP or DP) issued on Pipe1
		PM_VSU1_VECTOR_DP_ISSUED = 0xb082, // Double Precision vector instruction issued on Pipe1
		PM_VSU1_VECTOR_SP_ISSUED = 0xb086, // Single Precision vector instruction issued (executed)
		
	};
};