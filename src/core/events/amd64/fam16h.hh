#include <cstdint>

namespace optkit_amd64{
	enum class fam16h : uint64_t {
		DISPATCHED_FPU = 0x0, // Dispatched FPU Operations
		DISPATCHED_FPU_MASK_PIPE0 = 0x1, // Pipe0 dispatches
		DISPATCHED_FPU_MASK_PIPE1 = 0x2, // Pipe1 dispatches
		DISPATCHED_FPU_MASK_ALL = 0x3, // All sub-events selected
		FP_SCHEDULER_EMPTY = 0x1, // Cycles in which the FPU is Empty
		DISPATCHED_FPU_OPS_FAST_FLAG = 0x2, // Dispatched Fast Flag FPU Operations
		RETIRED_SSE_AVX_OPERATIONS = 0x3, // Retired SSE/AVX Operations
		RETIRED_SSE_AVX_OPERATIONS_MASK_SINGLE_ADD_SUB_OPS = 0x1, // Single precision add/subtract ops
		RETIRED_SSE_AVX_OPERATIONS_MASK_SINGLE_MUL_OPS = 0x2, // Single precision multiply ops
		RETIRED_SSE_AVX_OPERATIONS_MASK_SINGLE_DIV_OPS = 0x4, // Single precision divide/square root ops
		RETIRED_SSE_AVX_OPERATIONS_MASK_DOUBLE_ADD_SUB_OPS = 0x10, // Double precision add/subtract ops
		RETIRED_SSE_AVX_OPERATIONS_MASK_DOUBLE_MUL_OPS = 0x20, // Double precision multiply ops
		RETIRED_SSE_AVX_OPERATIONS_MASK_DOUBLE_DIV_OPS = 0x40, // Double precision divide/square root ops
		RETIRED_SSE_AVX_OPERATIONS_MASK_ALL = 0x7f, // All sub-events selected
		RETIRED_SERIALIZING_OPS = 0x5, // Retired Serializing Ops
		RETIRED_SERIALIZING_OPS_MASK_SSE_BOTTOM_EXECUTING_UOPS = 0x1, // SSE bottom-executing uops retired
		RETIRED_SERIALIZING_OPS_MASK_SSE_CONTROL_RENAMING_UOPS = 0x2, // SSE control-renaming uops retired
		RETIRED_SERIALIZING_OPS_MASK_X87_BOTTOM_EXECUTING_UOPS = 0x4, // X87 bottom-executing uops retired
		RETIRED_SERIALIZING_OPS_MASK_X87_CONTROL_RENAMING_UOPS = 0x8, // X87 control-renaming uops retired
		RETIRED_SERIALIZING_OPS_MASK_ALL = 0xf, // All sub-events selected
		RETIRED_X87_OPERATIONS = 0x11, // Retired x87 operations
		RETIRED_X87_OPERATIONS_MASK_ADD_AND_SUB = 0x1, // Add and subtract
		RETIRED_X87_OPERATIONS_MASK_MULTIPLY = 0x2, // Multiply
		RETIRED_X87_OPERATIONS_MASK_DIVIDE_AND_FSQRT = 0x4, // Divide and fsqrt
		RETIRED_X87_OPERATIONS_MASK_ALL = 0xf, // All sub-events selected
		SEGMENT_REGISTER_LOADS = 0x20, // Segment Register Loads
		SEGMENT_REGISTER_LOADS_MASK_ES = 0x1, // ES
		SEGMENT_REGISTER_LOADS_MASK_CS = 0x2, // CS
		SEGMENT_REGISTER_LOADS_MASK_SS = 0x4, // SS
		SEGMENT_REGISTER_LOADS_MASK_DS = 0x8, // DS
		SEGMENT_REGISTER_LOADS_MASK_FS = 0x10, // FS
		SEGMENT_REGISTER_LOADS_MASK_GS = 0x20, // GS
		SEGMENT_REGISTER_LOADS_MASK_HS = 0x40, // HS
		SEGMENT_REGISTER_LOADS_MASK_ALL = 0x7f, // All sub-events selected
		PIPELINE_RESTART_DUE_TO_SELF_MODIFYING_CODE = 0x21, // Pipeline Restart Due to Self-Modifying Code
		PIPELINE_RESTART_DUE_TO_PROBE_HIT = 0x22, // Pipeline Restart Due to Probe Hit
		PIPELINE_RESTART_DUE_TO_PROBE_HIT_MASK_INVALIDATING_PROBES = 0x1, // Evictions caused by invalidating probes
		PIPELINE_RESTART_DUE_TO_PROBE_HIT_MASK_FILLS = 0x2, // Evictions caused by fills
		PIPELINE_RESTART_DUE_TO_PROBE_HIT_MASK_ALL = 0x3, // All sub-events selected
		LOCKED_OPS = 0x24, // Locked Operations
		LOCKED_OPS_MASK_EXECUTED = 0x1, // The number of locked instructions executed
		LOCKED_OPS_MASK_CYCLES_TO_ACQUIRE = 0x2, // The number of cycles to acquire bus lock
		LOCKED_OPS_MASK_CYCLES_TO_UNLOCK = 0x4, // The number of cycles to unlock cache line
		LOCKED_OPS_MASK_ALL = 0x7, // All sub-events selected
		RETIRED_CLFLUSH_INSTRUCTIONS = 0x26, // Retired CLFLUSH Instructions
		RETIRED_CPUID_INSTRUCTIONS = 0x27, // Retired CPUID Instructions
		LS_DISPATCH = 0x29, // Transactions dispatched to load-store unit
		LS_DISPATCH_MASK_LOADS = 0x1, // The number of loads
		LS_DISPATCH_MASK_STORES = 0x2, // The number of stores
		LS_DISPATCH_MASK_LOAD_OP_STORES = 0x4, // The number of load-op-stores
		LS_DISPATCH_MASK_ALL = 0x7, // All sub-events selected
		CANCELLED_STORE_TO_LOAD_FORWARD_OPERATIONS = 0x2a, // Cancelled Store to Load Forward Operations
		CANCELLED_STORE_TO_LOAD_FORWARD_OPERATIONS_MASK_ADDRESS_MISMATCHES = 0x1, // Address mismatches (starting byte not the same).
		CANCELLED_STORE_TO_LOAD_FORWARD_OPERATIONS_MASK_STORE_IS_SMALLER_THAN_LOAD = 0x2, // Store is smaller than load.
		CANCELLED_STORE_TO_LOAD_FORWARD_OPERATIONS_MASK_MISALIGNED = 0x4, // Misaligned.
		CANCELLED_STORE_TO_LOAD_FORWARD_OPERATIONS_MASK_ALL = 0x7, // All sub-events selected
		DATA_CACHE_ACCESSES = 0x40, // Data Cache Accesses
		DATA_CACHE_MISSES = 0x41, // Data Cache Misses
		DATA_CACHE_REFILLS = 0x42, // Data Cache Refills from L2 or Northbridge
		DATA_CACHE_REFILLS_MASK_NON_CACHABLE = 0x1, // Non-cachable
		DATA_CACHE_REFILLS_MASK_SHARED = 0x2, // Shared
		DATA_CACHE_REFILLS_MASK_EXCLUSIVE = 0x4, // Exclusive
		DATA_CACHE_REFILLS_MASK_OWNED = 0x8, // Owned
		DATA_CACHE_REFILLS_MASK_MODIFIED = 0x10, // Modified
		DATA_CACHE_REFILLS_MASK_ALL = 0x1f, // All sub-events selected
		DATA_CACHE_REFILLS_FROM_NORTHBRIDGE = 0x43, // Data Cache Refills from the Northbridge
		DATA_CACHE_REFILLS_FROM_NORTHBRIDGE_MASK_NON_CACHABLE = 0x1, // non-cachable
		DATA_CACHE_REFILLS_FROM_NORTHBRIDGE_MASK_SHARED = 0x2, // Shared
		DATA_CACHE_REFILLS_FROM_NORTHBRIDGE_MASK_EXCLUSIVE = 0x4, // Exclusive
		DATA_CACHE_REFILLS_FROM_NORTHBRIDGE_MASK_OWNED = 0x8, // Owned
		DATA_CACHE_REFILLS_FROM_NORTHBRIDGE_MASK_MODIFIED = 0x10, // Modified
		DATA_CACHE_REFILLS_FROM_NORTHBRIDGE_MASK_ALL = 0x1f, // All sub-events selected
		DATA_CACHE_LINES_EVICTED = 0x44, // Data Cache Lines Evicted
		DATA_CACHE_LINES_EVICTED_MASK_EVICTED = 0x1, // Evicted from probe
		DATA_CACHE_LINES_EVICTED_MASK_SHARED = 0x2, // Shared eviction
		DATA_CACHE_LINES_EVICTED_MASK_EXCLUSIVE = 0x4, // Exclusive eviction
		DATA_CACHE_LINES_EVICTED_MASK_OWNED = 0x8, // Owned eviction
		DATA_CACHE_LINES_EVICTED_MASK_MODIFIED = 0x10, // Modified eviction
		DATA_CACHE_LINES_EVICTED_MASK_ALL = 0x1f, // All sub-events selected
		L1_DTLB_MISS_AND_L2_DTLB_HIT = 0x45, // L1 DTLB Miss and L2 DTLB Hit
		DTLB_MISS = 0x46, // L1 DTLB and L2 DTLB Miss
		DTLB_MISS_MASK_STORES_L1TLB = 0x1, // Stores that miss L1TLB
		DTLB_MISS_MASK_LOADS_L1TLB = 0x2, // Loads that miss L1TLB
		DTLB_MISS_MASK_STORES_L2TLB = 0x4, // Stores that miss L2TLB
		DTLB_MISS_MASK_LOADS_L2TLB = 0x8, // Loads that miss L2TLB
		DTLB_MISS_MASK_ALL = 0xf, // All sub-events selected
		MISALIGNED_ACCESSES = 0x47, // Misaligned Accesses
		MISALIGNED_ACCESSES_MASK_MISALIGN_16B = 0x1, // Misaligns that cross 16 Byte boundary
		MISALIGNED_ACCESSES_MASK_MISALIGN_4KB = 0x2, // Misaligns that cross a 4kB boundary
		MISALIGNED_ACCESSES_MASK_ALL = 0x3, // All sub-events selected
		PREFETCH_INSTRUCTIONS_DISPATCHED = 0x4b, // Prefetch Instructions Dispatched
		PREFETCH_INSTRUCTIONS_DISPATCHED_MASK_LOAD = 0x1, // Load (Prefetch
		PREFETCH_INSTRUCTIONS_DISPATCHED_MASK_STORE = 0x2, // Store (PrefetchW)
		PREFETCH_INSTRUCTIONS_DISPATCHED_MASK_NTA = 0x4, // NTA (PrefetchNTA)
		PREFETCH_INSTRUCTIONS_DISPATCHED_MASK_ALL = 0x7, // All sub-events selected
		DCACHE_MISSES_BY_LOCKED_INSTRUCTIONS = 0x4c, // DCACHE Misses by Locked Instructions
		L1_DTLB_HIT = 0x4d, // L1 DTLB Hit
		L1_DTLB_HIT_MASK_L1_4K_TLB_HIT = 0x1, // L1 4K TLB hit
		L1_DTLB_HIT_MASK_L1_2M_TLB_HIT = 0x2, // L1 2M TLB hit
		L1_DTLB_HIT_MASK_ALL = 0x3, // All sub-events selected
		INEFFECTIVE_SW_PREFETCHES = 0x52, // Ineffective Software Prefetches
		INEFFECTIVE_SW_PREFETCHES_MASK_SW_PREFETCH_DATA_CACHE = 0x1, // Software prefetch hit in data cache
		INEFFECTIVE_SW_PREFETCHES_MASK_SW_PREFETCH_PENDING_FILL = 0x2, // Software prefetch hit a pending fill
		INEFFECTIVE_SW_PREFETCHES_MASK_SW_PREFETCH_MAB = 0x4, // Software prefetches that don't get a MAB
		INEFFECTIVE_SW_PREFETCHES_MASK_SW_PREFETCH_HIT_L2 = 0x8, // Software prefetches that hit in L2
		INEFFECTIVE_SW_PREFETCHES_MASK_ALL = 0xf, // All sub-events selected
		GLOBAL_TLB_FLUSHES = 0x54, // Global TLB Flushes
		COMMAND_RELATED_UNCACHABLE = 0x61, // Commands realted to uncachable memory and I/O
		COMMAND_RELATED_UNCACHABLE_MASK_READ_BYTE = 0x1, // Read byte
		COMMAND_RELATED_UNCACHABLE_MASK_READ_DOUBLEWORD = 0x2, // Read doubleword
		COMMAND_RELATED_UNCACHABLE_MASK_WRITE_BYTE = 0x10, // Write byte
		COMMAND_RELATED_UNCACHABLE_MASK_WRITE_DOUBLEWORD = 0x20, // Write doubleword
		COMMAND_RELATED_UNCACHABLE_MASK_ALL = 0x33, // All sub-events selected
		COMMAND_RELATED_READ_BLOCK = 0x62, // Commands realted to read block operations
		COMMAND_RELATED_READ_BLOCK_MASK_READ_BLOCK = 0x1, // Read block
		COMMAND_RELATED_READ_BLOCK_MASK_RDBLKMOD = 0x2, // RdBlkMod
		COMMAND_RELATED_READ_BLOCK_MASK_READ_BLOCK_SHARED = 0x4, // Read block shared
		COMMAND_RELATED_READ_BLOCK_MASK_READ_BLOCK_SPEC = 0x10, // Read block speculative
		COMMAND_RELATED_READ_BLOCK_MASK_READ_BLOCK_SPEC_MOD = 0x20, // Read block speculative modified
		COMMAND_RELATED_READ_BLOCK_MASK_READ_BLOCK_SPEC_SHARED = 0x40, // Read block speculative shared
		COMMAND_RELATED_READ_BLOCK_MASK_ALL = 0x77, // All sub-events selected
		COMMAND_RELATED_DIRTY = 0x63, // Commands realted to change dirty operations
		COMMAND_RELATED_DIRTY_MASK_CHANGE_DIRTY = 0x10, // Change to dirty
		COMMAND_RELATED_DIRTY_MASK_ALL = 0x10, // All sub-events selected
		MEMORY_REQUESTS = 0x65, // Memory Requests by Type
		MEMORY_REQUESTS_MASK_NON_CACHEABLE = 0x1, // Requests to non-cacheable (UC) memory
		MEMORY_REQUESTS_MASK_WRITE_COMBINING = 0x2, // Requests to write-combining (WC) memory or WC buffer flushes to WB memory
		MEMORY_REQUESTS_MASK_STREAMING_STORE = 0x80, // Streaming store (SS) requests
		MEMORY_REQUESTS_MASK_ALL = 0x83, // All sub-events selected
		DATA_PREFETCHES = 0x67, // Data Prefetches
		DATA_PREFETCHES_MASK_ATTEMPTED = 0x2, // Prefetch attempts
		DATA_PREFETCHES_MASK_MAB = 0x8, // Hits on MAB
		DATA_PREFETCHES_MASK_ALL = 0xa, // All sub-events selected
		MAB_REQUESTS = 0x68, // Miss address buffer requests
		MAB_REQUESTS_MASK_DC_MISS0 = 0x1, // Data cache miss buffer 0
		MAB_REQUESTS_MASK_DC_MISS1 = 0x2, // Data cache miss buffer 1
		MAB_REQUESTS_MASK_DC_MISS2 = 0x4, // Data cache miss buffer 2
		MAB_REQUESTS_MASK_DC_MISS3 = 0x8, // Data cache miss buffer 3
		MAB_REQUESTS_MASK_DC_MISS4 = 0x10, // Data cache miss buffer 4
		MAB_REQUESTS_MASK_DC_MISS5 = 0x20, // Data cache miss buffer 5
		MAB_REQUESTS_MASK_DC_MISS6 = 0x40, // Data cache miss buffer 6
		MAB_REQUESTS_MASK_DC_MISS7 = 0x80, // Data cache miss buffer 7
		MAB_REQUESTS_MASK_IC_MISS0 = 0x100, // Instruction cache miss buffer 0
		MAB_REQUESTS_MASK_IC_MISS1 = 0x200, // Instruction cache miss buffer 1
		MAB_REQUESTS_MASK_DC_ANY = 0x800, // Any data cache miss buffer
		MAB_REQUESTS_MASK_IC_ANY = 0x1000, // Any instruction cache miss buffer
		MAB_WAIT_CYCLES = 0x69, // Miss address buffer wait cycles
		MAB_WAIT_CYCLES_MASK_DC_MISS0 = 0x1, // Data cache miss buffer 0
		MAB_WAIT_CYCLES_MASK_DC_MISS1 = 0x2, // Data cache miss buffer 1
		MAB_WAIT_CYCLES_MASK_DC_MISS2 = 0x4, // Data cache miss buffer 2
		MAB_WAIT_CYCLES_MASK_DC_MISS3 = 0x8, // Data cache miss buffer 3
		MAB_WAIT_CYCLES_MASK_DC_MISS4 = 0x10, // Data cache miss buffer 4
		MAB_WAIT_CYCLES_MASK_DC_MISS5 = 0x20, // Data cache miss buffer 5
		MAB_WAIT_CYCLES_MASK_DC_MISS6 = 0x40, // Data cache miss buffer 6
		MAB_WAIT_CYCLES_MASK_DC_MISS7 = 0x80, // Data cache miss buffer 7
		MAB_WAIT_CYCLES_MASK_IC_MISS0 = 0x100, // Instruction cache miss buffer 0
		MAB_WAIT_CYCLES_MASK_IC_MISS1 = 0x200, // Instruction cache miss buffer 1
		MAB_WAIT_CYCLES_MASK_DC_ANY = 0x800, // Any data cache miss buffer
		MAB_WAIT_CYCLES_MASK_IC_ANY = 0x1000, // Any instruction cache miss buffer
		SYSTEM_RESPONSES = 0x6c, // L2I Responses by Coherency State
		SYSTEM_RESPONSES_MASK_EXCLUSIVE = 0x1, // Exclusive
		SYSTEM_RESPONSES_MASK_MODIFIED = 0x2, // Modified
		SYSTEM_RESPONSES_MASK_SHARED = 0x4, // Shared
		SYSTEM_RESPONSES_MASK_OWNED = 0x8, // Owned
		SYSTEM_RESPONSES_MASK_DATA_ERROR = 0x10, // Data Error
		SYSTEM_RESPONSES_MASK_CHANGE_DIRTY = 0x20, // Change to dirty success
		SYSTEM_RESPONSES_MASK_UNCACHEABLE = 0x40, // Uncacheable
		SYSTEM_RESPONSES_MASK_ALL = 0x7f, // All sub-events selected
		DATA_WRITTEN_TO_SYSTEM = 0x6d, // 16-byte transfers written to system
		DATA_WRITTEN_TO_SYSTEM_MASK_DATA_LINE_EVICTIONS = 0x1, // Data line evictions
		DATA_WRITTEN_TO_SYSTEM_MASK_INSTRUCTION_ATTRIBUTE_EVICTIONS = 0x2, // Instruction attribute evictions
		DATA_WRITTEN_TO_SYSTEM_MASK_BYTE_ENABLE_MASK_UNCACHEABLE = 0x4, // Byte enable mask for uncacheabe or I/O store
		DATA_WRITTEN_TO_SYSTEM_MASK_DATA_FOR_UNCACHEABLE = 0x8, // Data for uncacheabe or I/O store
		DATA_WRITTEN_TO_SYSTEM_MASK_BYTE_ENABLE_MASK_WRITE_COMBINE = 0x10, // Byte enable mask for write combine context flush
		DATA_WRITTEN_TO_SYSTEM_MASK_DATA_FOR_WRITE_COMBINE = 0x20, // Data for write combine contet flush
		DATA_WRITTEN_TO_SYSTEM_MASK_ALL = 0x3f, // All sub-events selected
		CACHE_CROSS_INVALIDATES = 0x75, // Internal probes causing cache lines to be invalidated
		CACHE_CROSS_INVALIDATES_MASK_DC_INVALIDATES_IC = 0x1, // Modification of instructions of data too close to code
		CACHE_CROSS_INVALIDATES_MASK_DC_INVALIDATES_DC = 0x2, // CD or WBINVD
		CACHE_CROSS_INVALIDATES_MASK_IC_INVALIDATES_IC = 0x4, // aliasing
		CACHE_CROSS_INVALIDATES_MASK_IC_INVALIDATES_DC_DIRTY = 0x8, // Execution of modified instruction or data too close to code
		CACHE_CROSS_INVALIDATES_MASK_IC_HITS_DC_CLEAN_LINE = 0x10, // Reading code
		CACHE_CROSS_INVALIDATES_MASK_DC_PROBE_REJECTED_EARLY = 0x20, // DC probe rejected early
		CACHE_CROSS_INVALIDATES_MASK_DC_PROBE_REJECTED_LATE = 0x40, // DC probe rejected late
		CACHE_CROSS_INVALIDATES_MASK_ALL = 0x7f, // All sub-events selected
		CPU_CLK_UNHALTED = 0x76, // CPU Clocks not Halted
		PDC_MISS = 0x162, // Number of PDC misses
		PDC_MISS_MASK_HOST_PDE_LEVEL = 0x1, // Host: PDE level
		PDC_MISS_MASK_HOST_PDPE_LEVEL = 0x2, // Host: PDPE level
		PDC_MISS_MASK_HOST_PML4E_LEVEL = 0x4, // Host: PML4E level
		PDC_MISS_MASK_GUEST_PDE_LEVEL = 0x10, // Guest: PDE level
		PDC_MISS_MASK_GUEST_PDPE_LEVEL = 0x20, // Guest: PDPE level
		PDC_MISS_MASK_GUEST_PML4E_LEVEL = 0x40, // Guest: PML4E level
		PDC_MISS_MASK_ALL = 0x77, // All sub-events selected
		INSTRUCTION_CACHE_FETCHES = 0x80, // Instruction Cache Fetches
		INSTRUCTION_CACHE_MISSES = 0x81, // Instruction Cache Misses
		INSTRUCTION_CACHE_REFILLS_FROM_L2 = 0x82, // Instruction Cache Refills from L2
		INSTRUCTION_CACHE_REFILLS_FROM_SYSTEM = 0x83, // Instruction Cache Refills from System
		L1_ITLB_MISS_AND_L2_ITLB_HIT = 0x84, // L1 ITLB Miss and L2 ITLB Hit
		ITLB_MISS = 0x85, // Instruction fetches that miss in 4k and 2M ITLB
		ITLB_MISS_MASK_4K_PAGE_FETCHES = 0x1, // Instruction fetches to a 4K page.
		ITLB_MISS_MASK_2M_PAGE_FETCHES = 0x2, // Instruction fetches to a 2M page.
		ITLB_MISS_MASK_ALL = 0x3, // All sub-events selected
		INSTRUCTION_FETCH_STALL = 0x87, // Instruction Fetch Stall
		RETURN_STACK_HITS = 0x88, // Return Stack Hits
		RETURN_STACK_OVERFLOWS = 0x89, // Return Stack Overflows
		INSTRUCTION_CACHE_VICTIMS = 0x8b, // Instruction Cache Victims
		INSTRUCTION_CACHE_LINES_INVALIDATED = 0x8c, // Instruction Cache Lines Invalidated
		INSTRUCTION_CACHE_LINES_INVALIDATED_MASK_IC_INVALIDATE_LS_PROBE = 0x1, // Instruction cache invalidate due to LS probe
		INSTRUCTION_CACHE_LINES_INVALIDATED_MASK_IC_INVALIDATE_BU_PROBE = 0x2, // Instruction cache invalidate due to BU probe
		INSTRUCTION_CACHE_LINES_INVALIDATED_MASK_ALL = 0x3, // All sub-events selected
		ITLB_RELOADS = 0x99, // ITLB Reloads
		ITLB_RELOADS_ABORTED = 0x9a, // ITLB reloads aborted
		RETIRED_INDIRECT_BRANCH_INFO = 0x19a, // Retired indirect branch info
		RETIRED_INDIRECT_BRANCH_INFO_MASK_RETIRED = 0x1, // Retired indirect branch instruction.
		RETIRED_INDIRECT_BRANCH_INFO_MASK_MISPREDICTED = 0x2, // Retired mispredicted near unconditional jump.
		RETIRED_INDIRECT_BRANCH_INFO_MASK_ALL = 0x3, // All sub-events selected
		RETIRED_INSTRUCTIONS = 0xc0, // Retired Instructions
		RETIRED_UOPS = 0xc1, // Retired uops
		RETIRED_BRANCH_INSTRUCTIONS = 0xc2, // Retired Branch Instructions
		RETIRED_MISPREDICTED_BRANCH_INSTRUCTIONS = 0xc3, // Retired Mispredicted Branch Instructions
		RETIRED_TAKEN_BRANCH_INSTRUCTIONS = 0xc4, // Retired Taken Branch Instructions
		RETIRED_TAKEN_BRANCH_INSTRUCTIONS_MISPREDICTED = 0xc5, // Retired Taken Branch Instructions Mispredicted
		RETIRED_FAR_CONTROL_TRANSFERS = 0xc6, // Retired Far Control Transfers
		RETIRED_BRANCH_RESYNCS = 0xc7, // Retired Branch Resyncs
		RETIRED_NEAR_RETURNS = 0xc8, // Retired Near Returns
		RETIRED_NEAR_RETURNS_MISPREDICTED = 0xc9, // Retired Near Returns Mispredicted
		RETIRED_MISPREDICTED_TAKEN = 0xca, // Retired mispredicted taken branches due to target mismatch
		RETIRED_MMX_AND_FP_INSTRUCTIONS = 0xcb, // Retired MMX/FP Instructions
		RETIRED_MMX_AND_FP_INSTRUCTIONS_MASK_X87 = 0x1, // X87 instructions
		RETIRED_MMX_AND_FP_INSTRUCTIONS_MASK_SSE = 0x2, // SSE
		RETIRED_MMX_AND_FP_INSTRUCTIONS_MASK_ALL = 0x3, // All sub-events selected
		INTERRUPTS_MASKED_CYCLES = 0xcd, // Interrupts-Masked Cycles
		INTERRUPTS_MASKED_CYCLES_WITH_INTERRUPT_PENDING = 0xce, // Interrupts-Masked Cycles with Interrupt Pending
		INTERRUPTS_TAKEN = 0xcf, // Interrupts Taken
		FPU_EXCEPTIONS = 0xdb, // FPU Exceptions
		FPU_EXCEPTIONS_MASK_X87_RECLASS_MICROFAULTS = 0x1, // X87 reclass microfaults
		FPU_EXCEPTIONS_MASK_SSE_RETYPE_MICROFAULTS = 0x2, // SSE retype microfaults
		FPU_EXCEPTIONS_MASK_SSE_RECLASS_MICROFAULTS = 0x4, // SSE reclass microfaults
		FPU_EXCEPTIONS_MASK_SSE_AND_X87_MICROTRAPS = 0x8, // SSE and x87 microtraps
		FPU_EXCEPTIONS_MASK_ALL = 0xf, // All sub-events selected
		DR0_BREAKPOINT_MATCHES = 0xdc, // DR0 Breakpoint Matches
		DR1_BREAKPOINT_MATCHES = 0xdd, // DR1 Breakpoint Matches
		DR2_BREAKPOINT_MATCHES = 0xde, // DR2 Breakpoint Matches
		DR3_BREAKPOINT_MATCHES = 0xdf, // DR3 Breakpoint Matches
		TAGGED_IBS_OPS = 0x1cf, // Ops tagged by IBS
		TAGGED_IBS_OPS_RETIRED = 0x1d0, // Ops tagged by IBS that retired
		};};