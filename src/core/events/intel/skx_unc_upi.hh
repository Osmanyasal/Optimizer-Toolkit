#include <cstdint>
#include <intel_priv.hh>
namespace optkit::intel{
	enum class skx_unc_upi : uint64_t {
		UNC_UPI_CLOCKTICKS = 0x1, // Counts the number of clocks in the UPI LL.  This clock runs at 1/8th the GT/s speed of the UPI link.  For example
		UNC_UPI_DIRECT_ATTEMPTS = 0x12, // Counts the number of Data Response(DRS) packets UPI attempted to send directly to the core or to a different UPI link.  Note:  This only counts attempts on valid candidates such as DRS packets destined for CHAs.
		UNC_UPI_DIRECT_ATTEMPTS__MASK__SKX_UNC_UPI_DIRECT_ATTEMPTS__D2C = 0x100, // Direct packet attempts -- Direct 2 Core
		UNC_UPI_DIRECT_ATTEMPTS__MASK__SKX_UNC_UPI_DIRECT_ATTEMPTS__D2U = 0x200, // Direct packet attempts -- Direct 2 UPI
		UNC_UPI_FLOWQ_NO_VNA_CRD = 0x18, // TBD
		UNC_UPI_FLOWQ_NO_VNA_CRD__MASK__SKX_UNC_UPI_FLOWQ_NO_VNA_CRD__AD_VNA_EQ0 = 0x100, // TBD
		UNC_UPI_FLOWQ_NO_VNA_CRD__MASK__SKX_UNC_UPI_FLOWQ_NO_VNA_CRD__AD_VNA_EQ1 = 0x200, // TBD
		UNC_UPI_FLOWQ_NO_VNA_CRD__MASK__SKX_UNC_UPI_FLOWQ_NO_VNA_CRD__AD_VNA_EQ2 = 0x400, // TBD
		UNC_UPI_FLOWQ_NO_VNA_CRD__MASK__SKX_UNC_UPI_FLOWQ_NO_VNA_CRD__AK_VNA_EQ0 = 0x1000, // TBD
		UNC_UPI_FLOWQ_NO_VNA_CRD__MASK__SKX_UNC_UPI_FLOWQ_NO_VNA_CRD__AK_VNA_EQ1 = 0x2000, // TBD
		UNC_UPI_FLOWQ_NO_VNA_CRD__MASK__SKX_UNC_UPI_FLOWQ_NO_VNA_CRD__AK_VNA_EQ2 = 0x4000, // TBD
		UNC_UPI_FLOWQ_NO_VNA_CRD__MASK__SKX_UNC_UPI_FLOWQ_NO_VNA_CRD__AK_VNA_EQ3 = 0x8000, // TBD
		UNC_UPI_FLOWQ_NO_VNA_CRD__MASK__SKX_UNC_UPI_FLOWQ_NO_VNA_CRD__BL_VNA_EQ0 = 0x800, // TBD
		UNC_UPI_L1_POWER_CYCLES = 0x21, // Number of UPI qfclk cycles spent in L1 power mode.  L1 is a mode that totally shuts down a UPI link.  Use edge detect to count the number of instances when the UPI link entered L1.  Link power states are per link and per direction
		UNC_UPI_M3_BYP_BLOCKED = 0x14, // TBD
		UNC_UPI_M3_BYP_BLOCKED__MASK__SKX_UNC_UPI_M3_BYP_BLOCKED__BGF_CRD = 0x800, // TBD
		UNC_UPI_M3_BYP_BLOCKED__MASK__SKX_UNC_UPI_M3_BYP_BLOCKED__FLOWQ_AD_VNA_LE2 = 0x100, // TBD
		UNC_UPI_M3_BYP_BLOCKED__MASK__SKX_UNC_UPI_M3_BYP_BLOCKED__FLOWQ_AK_VNA_LE3 = 0x400, // TBD
		UNC_UPI_M3_BYP_BLOCKED__MASK__SKX_UNC_UPI_M3_BYP_BLOCKED__FLOWQ_BL_VNA_EQ0 = 0x200, // TBD
		UNC_UPI_M3_BYP_BLOCKED__MASK__SKX_UNC_UPI_M3_BYP_BLOCKED__GV_BLOCK = 0x1000, // TBD
		UNC_UPI_M3_CRD_RETURN_BLOCKED = 0x16, // TBD
		UNC_UPI_M3_RXQ_BLOCKED = 0x15, // TBD
		UNC_UPI_M3_RXQ_BLOCKED__MASK__SKX_UNC_UPI_M3_RXQ_BLOCKED__BGF_CRD = 0x2000, // TBD
		UNC_UPI_M3_RXQ_BLOCKED__MASK__SKX_UNC_UPI_M3_RXQ_BLOCKED__FLOWQ_AD_VNA_BTW_2_THRESH = 0x200, // TBD
		UNC_UPI_M3_RXQ_BLOCKED__MASK__SKX_UNC_UPI_M3_RXQ_BLOCKED__FLOWQ_AD_VNA_LE2 = 0x100, // TBD
		UNC_UPI_M3_RXQ_BLOCKED__MASK__SKX_UNC_UPI_M3_RXQ_BLOCKED__FLOWQ_AK_VNA_LE3 = 0x1000, // TBD
		UNC_UPI_M3_RXQ_BLOCKED__MASK__SKX_UNC_UPI_M3_RXQ_BLOCKED__FLOWQ_BL_VNA_BTW_0_THRESH = 0x800, // TBD
		UNC_UPI_M3_RXQ_BLOCKED__MASK__SKX_UNC_UPI_M3_RXQ_BLOCKED__FLOWQ_BL_VNA_EQ0 = 0x400, // TBD
		UNC_UPI_M3_RXQ_BLOCKED__MASK__SKX_UNC_UPI_M3_RXQ_BLOCKED__GV_BLOCK = 0x4000, // TBD
		UNC_UPI_PHY_INIT_CYCLES = 0x20, // TBD
		UNC_UPI_POWER_L1_NACK = 0x23, // Counts the number of times a link sends/receives a LinkReqNAck.  When the UPI links would like to change power state
		UNC_UPI_POWER_L1_REQ = 0x22, // Counts the number of times a link sends/receives a LinkReqAck.  When the UPI links would like to change power state
		UNC_UPI_REQ_SLOT2_FROM_M3 = 0x46, // TBD
		UNC_UPI_REQ_SLOT2_FROM_M3__MASK__SKX_UNC_UPI_REQ_SLOT2_FROM_M3__ACK = 0x800, // TBD
		UNC_UPI_REQ_SLOT2_FROM_M3__MASK__SKX_UNC_UPI_REQ_SLOT2_FROM_M3__VN0 = 0x200, // TBD
		UNC_UPI_REQ_SLOT2_FROM_M3__MASK__SKX_UNC_UPI_REQ_SLOT2_FROM_M3__VN1 = 0x400, // TBD
		UNC_UPI_REQ_SLOT2_FROM_M3__MASK__SKX_UNC_UPI_REQ_SLOT2_FROM_M3__VNA = 0x100, // TBD
		UNC_UPI_RXL0P_POWER_CYCLES = 0x25, // Number of UPI qfclk cycles spent in L0p power mode.  L0p is a mode where we disable 60% of the UPI lanes
		UNC_UPI_RXL0_POWER_CYCLES = 0x24, // Number of UPI qfclk cycles spent in L0 power mode in the Link Layer.  L0 is the default mode which provides the highest performance with the most power.  Use edge detect to count the number of instances that the link entered L0.  Link power states are per link and per direction
		UNC_UPI_RXL_BASIC_HDR_MATCH = 0x5, // TBD
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCB = 0xe00, // Matches on Receive path of a UPI Port -- Non-Coherent Bypass
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCB_OPC_NCWR = 0x0e00, // Matches on Receive path of a UPI Port -- Non-Coherent Bypass - NCWR
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCB_OPC_WCWR = 0x1e00 | 1ULL << 32, // Matches on Receive path of a UPI Port -- Non-Coherent Bypass - WCWR
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCB_OPC_NCMSGB = 0x8e00 | 1ULL << 32, // Matches on Receive path of a UPI Port -- Non-Coherent Bypass - WCWR
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCB_OPC_INTLOGICAL = 0x9e00 | 1ULL << 32, // Matches on Receive path of a UPI Port -- Non-Coherent Bypass - WCWR
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCB_OPC_INTPHYSICAL = 0xae00 | 1ULL << 32, // Matches on Receive path of a UPI Port -- Non-Coherent Bypass - INTPHYSICAL
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCB_OPC_INTPRIOUPD = 0xbe00 | 1ULL << 32, // Matches on Receive path of a UPI Port -- Non-Coherent Bypass - INTPRIOUPD
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCB_OPC_NCWRPTL = 0xce00, // Matches on Receive path of a UPI Port -- Non-Coherent Bypass - NCWRPTL
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCB_OPC_NCP2PB = 0xfe00, // Matches on Receive path of a UPI Port -- Non-Coherent Bypass - NCP2PB
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCS = 0xf00, // Matches on Receive path of a UPI Port -- Non-Coherent Standard
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCS_OPC_NCRD = 0x0f00, // Matches on Receive path of a UPI Port -- Non-Coherent Standard - NCRD
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCS_OPC_INTACK = 0x1f00, // Matches on Receive path of a UPI Port -- Non-Coherent Standard - INTACK
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCS_OPC_NCRDPTL = 0x4f00 | 1ULL<<32, // Matches on Receive path of a UPI Port -- Non-Coherent Standard - NCRDPTL
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCS_OPC_NCCFGRD = 0x5f00 | 1ULL<<32, // NCS - NCCFGRD
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCS_OPC_NCLTRD = 0x6f00| 1ULL<<32, // Matches on Receive path of a UPI Port -- Non-Coherent Standard - NCLTRD
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCS_OPC_IORD = 0x7f00, // Matches on Receive path of a UPI Port -- Non-Coherent Standard - IORD
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCS_OPC_MSGS = 0x8f00, // NCS - MSGS
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCS_OPC_CFGWR = 0x9f00, // Matches on Receive path of a UPI Port -- Non-Coherent Standard - CFGWR
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCS_OPC_LTWR = 0xaf00, // Matches on Receive path of a UPI Port -- Non-Coherent Standard - LTWR
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCS_OPC_NCIOWR = 0xbf00, // Matches on Receive path of a UPI Port -- Non-Coherent Standard - NCIOWR
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCS_OPC_NCP2PS = 0xff00, // Matches on Receive path of a UPI Port -- Non-Coherent Standard - NCP2PS
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__REQ = 0x800, // Matches on Receive path of a UPI Port -- Request
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__REQ_OPC_INVITOE = 0x7800, // Matches on Receive path of a UPI Port -- Request Opcode - ITOE
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__REQ_OPC_RDINV = 0xc800, // Matches on Receive path of a UPI Port -- Request Opcode - ReadInv
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSPCNFLT = 0xaa00, // Matches on Receive path of a UPI Port -- Response - Conflict
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSPI = 0x2a00, // Matches on Receive path of a UPI Port -- Response - Invalid
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSP_DATA = 0xc00, // Matches on Receive path of a UPI Port -- Response - Data
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSP_DATA_OPC_DATA_M = 0x0c00, // Matches on Receive path of a UPI Port -- Response - Data - DATA_M
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSP_DATA_OPC_DATA_E = 0x1c00, // Matches on Receive path of a UPI Port -- Response - Data - DATA_E
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSP_DATA_OPC_DATA_SI = 0x2c00, // Matches on Receive path of a UPI Port -- Response - Data - DATA_SI
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSP_DATA_OPC_DATA_M_CMPO = 0x4c00, // RSP4 - DATA_M_CMPO
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSP_DATA_OPC_DATA_E_CMPO = 0x5c00, // Matches on Receive path of a UPI Port -- Response - Data - DATA_E_CMPO
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSP_DATA_OPC_DATA_SI_CMPO = 0x6c00, // Matches on Receive path of a UPI Port -- Response - Data - DATA_SI_CMPO
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSP_DATA_OPC_RSPFWDIWB = 0xac00, // Matches on Receive path of a UPI Port -- Response - Data - RSPFWDIWB
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSP_DATA_OPC_RSPFWDSWB = 0xbc00, // Matches on Receive path of a UPI Port -- Response - Data - RSPFWDIWB
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSP_DATA_OPC_RSPIWB = 0xcc00, // Matches on Receive path of a UPI Port -- Response - Data - RSPIWB
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSP_DATA_OPC_RSPSWB = 0xdc00, // Matches on Receive path of a UPI Port -- Response - Data - RSPSWB
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSP_DATA_OPC_DEBUG_DATA = 0xfc00, // Matches on Receive path of a UPI Port -- Response - Data - DEBUGDATA
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSP_NODATA = 0xa00, // Matches on Receive path of a UPI Port -- Response - No Data
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSP_NODATA_OPC_FWDS = 0x6a00, // Matches on Receive path of a UPI Port -- Response - No Data - FWDS
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSP_NODATA_OPC_MIRCMPU = 0x8a00, // Matches on Receive path of a UPI Port -- Response - No Data - MIRCMPU
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSP_NODATA_OPC_CNFLT = 0xaa00, // Matches on Receive path of a UPI Port -- Response - No Data - CNFLT
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSP_NODATA_OPC_FWDCNFLTO = 0xda00, // Matches on Receive path of a UPI Port -- Response - No Data - FWDCNFLTO
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSP_NODATA_OPC_CMPO = 0xca00, // Matches on Receive path of a UPI Port -- Response - No Data - CMPO
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__SNP = 0x900, // Matches on Receive path of a UPI Port -- Snoop
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__SNP_OPC_FCUR = 0x8900, // Matches on Receive path of a UPI Port -- Snoop Opcode - FCUR
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__SNP_OPC_FCODE = 0x9900, // Matches on Receive path of a UPI Port -- Snoop Opcode - FCODE
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__SNP_OPC_FDATA = 0xa900, // Matches on Receive path of a UPI Port -- Snoop Opcode - FDATA
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__SNP_OPC_FDATAMIG = 0xb900, // Matches on Receive path of a UPI Port -- Snoop Opcode - FDATAMIG
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__SNP_OPC_FINVOWN = 0xc900, // Matches on Receive path of a UPI Port -- Snoop Opcode - FDATA
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__SNP_OPC_FINV = 0xd900, // Matches on Receive path of a UPI Port -- Snoop Opcode - FINV
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__WB = 0xd00, // Matches on Receive path of a UPI Port -- Writeback
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__WB_OPC_WBMTOI = 0x0d00, // Matches on Receive path of a UPI Port -- Writeback - MTOI
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__WB_OPC_WBMTOS = 0x1d00, // Matches on Receive path of a UPI Port -- Writeback - MTOS
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__WB_OPC_WBMTOE = 0x2d00, // Matches on Receive path of a UPI Port -- Writeback - MTOE
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__WB_OPC_NONSNPWR = 0x3d00, // Matches on Receive path of a UPI Port -- Writeback - NONSNPWR
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__WB_OPC_MTOIPTL = 0x4d00, // Matches on Receive path of a UPI Port -- Writeback - MTOIPTL
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__WB_OPC_MTOEPTL = 0x6d00, // Matches on Receive path of a UPI Port -- Writeback - MTOEPTL
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__WB_OPC_NONSNPWRTL = 0x6d00, // Matches on Receive path of a UPI Port -- Writeback - NONSNPWRTL
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__WB_OPC_PUSHMTOI = 0x8d00, // Matches on Receive path of a UPI Port -- Writeback - PUSHMTOI
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__WB_OPC_FLUSH = 0xbd00, // Matches on Receive path of a UPI Port -- Writeback - FLUSH
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__WB_OPC_EVCTCLN = 0xcd00, // Matches on Receive path of a UPI Port -- Writeback - EVCTCLN
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__WB_OPC_NONSNPRD = 0xdd00, // WB - NONSNPRD
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__FILT_NONE = 0x0000, // No extra filter
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__FILT_LOCAL = 0x0000, // Filter packets targeting this socket
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__FILT_REMOTE = 0x0000, // Filter packets targeting another socket
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__FILT_DATA = 0x0000, // Filter on Data packets (mutually exclusive with FILT_NON_DATA)
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__FILT_NON_DATA = 0x0000, // Filter on non-Data packets (mutually exclusive with FILT_DATA)
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__FILT_DUAL_SLOT = 0x0000, // Filter on dual-slot packets (mutually exclusive with FILT_SINGLE_SLOT)
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__FILT_SINGLE_SLOT = 0x0000, // Filter on single-slot packets (mutually exclusive with FILT_DUAL_SLOT)
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__FILT_ISOCH = 0x0000, // Filter on isochronous  packets
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__FILT_SLOT0 = 0x0000, // Filter on slot0 packets
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__FILT_SLOT1 = 0x0000, // Filter on slot1 packets
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__FILT_SLOT2 = 0x0000, // Filter on slot2 packets
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__FILT_LLCRD_NON_ZERO = 0x0000, // Filter on LLCRD nonzero (only applies to slot2 with opcode match)
		UNC_UPI_RXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__FILT_IMPL_NULL = 0x0000, // Filter on implied NULL (only applies to slot2 with opcode match)
		UNC_UPI_RXL_BYPASSED = 0x31, // Counts the number of times that an incoming flit was able to bypass the flit buffer and pass directly and into the Egress.  This is a latency optimization
		UNC_UPI_RXL_BYPASSED__MASK__SKX_UNC_UPI_RXL_BYPASSED__SLOT0 = 0x100, // RxQ Flit Buffer Bypassed -- Slot 0
		UNC_UPI_RXL_BYPASSED__MASK__SKX_UNC_UPI_RXL_BYPASSED__SLOT1 = 0x200, // RxQ Flit Buffer Bypassed -- Slot 1
		UNC_UPI_RXL_BYPASSED__MASK__SKX_UNC_UPI_RXL_BYPASSED__SLOT2 = 0x400, // RxQ Flit Buffer Bypassed -- Slot 2
		UNC_UPI_RXL_CREDITS_CONSUMED_VN0 = 0x39, // Counts the number of times that an RxQ VN0 credit was consumed (i.e. message uses a VN0 credit for the Rx Buffer).  This includes packets that went through the RxQ and those that were bypasssed.
		UNC_UPI_RXL_CREDITS_CONSUMED_VN1 = 0x3a, // Counts the number of times that an RxQ VN1 credit was consumed (i.e. message uses a VN1 credit for the Rx Buffer).  This includes packets that went through the RxQ and those that were bypasssed.
		UNC_UPI_RXL_CREDITS_CONSUMED_VNA = 0x38, // Counts the number of times that an RxQ VNA credit was consumed (i.e. message uses a VNA credit for the Rx Buffer).  This includes packets that went through the RxQ and those that were bypasssed.
		UNC_UPI_RXL_FLITS = 0x3, // Shows legal flit time (hides impact of L0p and L0c).
		UNC_UPI_RXL_FLITS__MASK__SKX_UNC_UPI_RXL_FLITS__ALL_DATA = 0xf00, // Valid Flits Received -- All Data
		UNC_UPI_RXL_FLITS__MASK__SKX_UNC_UPI_RXL_FLITS__ALL_NULL = 0x2700, // Valid Flits Received -- All Null Slots
		UNC_UPI_RXL_FLITS__MASK__SKX_UNC_UPI_RXL_FLITS__DATA = 0x800, // Valid Flits Received -- Data
		UNC_UPI_RXL_FLITS__MASK__SKX_UNC_UPI_RXL_FLITS__IDLE = 0x4700, // Valid Flits Received -- Idle
		UNC_UPI_RXL_FLITS__MASK__SKX_UNC_UPI_RXL_FLITS__LLCRD = 0x1000, // Valid Flits Received -- LLCRD Not Empty
		UNC_UPI_RXL_FLITS__MASK__SKX_UNC_UPI_RXL_FLITS__LLCTRL = 0x4000, // Valid Flits Received -- LLCTRL
		UNC_UPI_RXL_FLITS__MASK__SKX_UNC_UPI_RXL_FLITS__NON_DATA = 0x9700, // Valid Flits Received -- All Non Data
		UNC_UPI_RXL_FLITS__MASK__SKX_UNC_UPI_RXL_FLITS__NULL = 0x2000, // Valid Flits Received -- Slot NULL or LLCRD Empty
		UNC_UPI_RXL_FLITS__MASK__SKX_UNC_UPI_RXL_FLITS__PROTHDR = 0x8000, // Valid Flits Received -- Protocol Header
		UNC_UPI_RXL_FLITS__MASK__SKX_UNC_UPI_RXL_FLITS__SLOT0 = 0x100, // Valid Flits Received -- Slot 0
		UNC_UPI_RXL_FLITS__MASK__SKX_UNC_UPI_RXL_FLITS__SLOT1 = 0x200, // Valid Flits Received -- Slot 1
		UNC_UPI_RXL_FLITS__MASK__SKX_UNC_UPI_RXL_FLITS__SLOT2 = 0x400, // Valid Flits Received -- Slot 2
		UNC_UPI_RXL_INSERTS = 0x30, // Number of allocations into the UPI Rx Flit Buffer.  Generally
		UNC_UPI_RXL_INSERTS__MASK__SKX_UNC_UPI_RXL_INSERTS__SLOT0 = 0x100, // RxQ Flit Buffer Allocations -- Slot 0
		UNC_UPI_RXL_INSERTS__MASK__SKX_UNC_UPI_RXL_INSERTS__SLOT1 = 0x200, // RxQ Flit Buffer Allocations -- Slot 1
		UNC_UPI_RXL_INSERTS__MASK__SKX_UNC_UPI_RXL_INSERTS__SLOT2 = 0x400, // RxQ Flit Buffer Allocations -- Slot 2
		UNC_UPI_RXL_OCCUPANCY = 0x32, // Accumulates the number of elements in the UPI RxQ in each cycle.  Generally
		UNC_UPI_RXL_OCCUPANCY__MASK__SKX_UNC_UPI_RXL_OCCUPANCY__SLOT0 = 0x100, // RxQ Occupancy - All Packets -- Slot 0
		UNC_UPI_RXL_OCCUPANCY__MASK__SKX_UNC_UPI_RXL_OCCUPANCY__SLOT1 = 0x200, // RxQ Occupancy - All Packets -- Slot 1
		UNC_UPI_RXL_OCCUPANCY__MASK__SKX_UNC_UPI_RXL_OCCUPANCY__SLOT2 = 0x400, // RxQ Occupancy - All Packets -- Slot 2
		UNC_UPI_RXL_SLOT_BYPASS = 0x33, // TBD
		UNC_UPI_RXL_SLOT_BYPASS__MASK__SKX_UNC_UPI_RXL_SLOT_BYPASS__S0_RXQ1 = 0x100, // TBD
		UNC_UPI_RXL_SLOT_BYPASS__MASK__SKX_UNC_UPI_RXL_SLOT_BYPASS__S0_RXQ2 = 0x200, // TBD
		UNC_UPI_RXL_SLOT_BYPASS__MASK__SKX_UNC_UPI_RXL_SLOT_BYPASS__S1_RXQ0 = 0x400, // TBD
		UNC_UPI_RXL_SLOT_BYPASS__MASK__SKX_UNC_UPI_RXL_SLOT_BYPASS__S1_RXQ2 = 0x800, // TBD
		UNC_UPI_RXL_SLOT_BYPASS__MASK__SKX_UNC_UPI_RXL_SLOT_BYPASS__S2_RXQ0 = 0x1000, // TBD
		UNC_UPI_RXL_SLOT_BYPASS__MASK__SKX_UNC_UPI_RXL_SLOT_BYPASS__S2_RXQ1 = 0x2000, // TBD
		UNC_UPI_TXL0P_CLK_ACTIVE = 0x2a, // TBD
		UNC_UPI_TXL0P_CLK_ACTIVE__MASK__SKX_UNC_UPI_TXL0P_CLK_ACTIVE__CFG_CTL = 0x100, // TBD
		UNC_UPI_TXL0P_CLK_ACTIVE__MASK__SKX_UNC_UPI_TXL0P_CLK_ACTIVE__DFX = 0x4000, // TBD
		UNC_UPI_TXL0P_CLK_ACTIVE__MASK__SKX_UNC_UPI_TXL0P_CLK_ACTIVE__RETRY = 0x2000, // TBD
		UNC_UPI_TXL0P_CLK_ACTIVE__MASK__SKX_UNC_UPI_TXL0P_CLK_ACTIVE__RXQ = 0x200, // TBD
		UNC_UPI_TXL0P_CLK_ACTIVE__MASK__SKX_UNC_UPI_TXL0P_CLK_ACTIVE__RXQ_BYPASS = 0x400, // TBD
		UNC_UPI_TXL0P_CLK_ACTIVE__MASK__SKX_UNC_UPI_TXL0P_CLK_ACTIVE__RXQ_CRED = 0x800, // TBD
		UNC_UPI_TXL0P_CLK_ACTIVE__MASK__SKX_UNC_UPI_TXL0P_CLK_ACTIVE__SPARE = 0x8000, // TBD
		UNC_UPI_TXL0P_CLK_ACTIVE__MASK__SKX_UNC_UPI_TXL0P_CLK_ACTIVE__TXQ = 0x1000, // TBD
		UNC_UPI_TXL0P_POWER_CYCLES = 0x27, // Number of UPI qfclk cycles spent in L0p power mode.  L0p is a mode where we disable 60% of the UPI lanes
		UNC_UPI_TXL0P_POWER_CYCLES_LL_ENTER = 0x28, // TBD
		UNC_UPI_TXL0P_POWER_CYCLES_M3_EXIT = 0x29, // TBD
		UNC_UPI_TXL0_POWER_CYCLES = 0x26, // Number of UPI qfclk cycles spent in L0 power mode in the Link Layer.  L0 is the default mode which provides the highest performance with the most power.  Use edge detect to count the number of instances that the link entered L0.  Link power states are per link and per direction
		UNC_UPI_TXL_BASIC_HDR_MATCH = 0x4, // TBD
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCB = 0xe00, // Matches on Receive path of a UPI Port -- Non-Coherent Bypass
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCB_OPC_NCWR = 0x0e00, // Matches on Receive path of a UPI Port -- Non-Coherent Bypass - NCWR
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCB_OPC_WCWR = 0x1e00 | 1ULL << 32, // Matches on Receive path of a UPI Port -- Non-Coherent Bypass - WCWR
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCB_OPC_NCMSGB = 0x8e00 | 1ULL << 32, // Matches on Receive path of a UPI Port -- Non-Coherent Bypass - WCWR
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCB_OPC_INTLOGICAL = 0x9e00 | 1ULL << 32, // Matches on Receive path of a UPI Port -- Non-Coherent Bypass - WCWR
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCB_OPC_INTPHYSICAL = 0xae00 | 1ULL << 32, // Matches on Receive path of a UPI Port -- Non-Coherent Bypass - INTPHYSICAL
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCB_OPC_INTPRIOUPD = 0xbe00 | 1ULL << 32, // Matches on Receive path of a UPI Port -- Non-Coherent Bypass - INTPRIOUPD
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCB_OPC_NCWRPTL = 0xce00, // Matches on Receive path of a UPI Port -- Non-Coherent Bypass - NCWRPTL
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCB_OPC_NCP2PB = 0xfe00, // Matches on Receive path of a UPI Port -- Non-Coherent Bypass - NCP2PB
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCS = 0xf00, // Matches on Receive path of a UPI Port -- Non-Coherent Standard
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCS_OPC_NCRD = 0x0f00, // Matches on Receive path of a UPI Port -- Non-Coherent Standard - NCRD
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCS_OPC_INTACK = 0x1f00, // Matches on Receive path of a UPI Port -- Non-Coherent Standard - INTACK
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCS_OPC_NCRDPTL = 0x4f00 | 1ULL<<32, // Matches on Receive path of a UPI Port -- Non-Coherent Standard - NCRDPTL
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCS_OPC_NCCFGRD = 0x5f00 | 1ULL<<32, // NCS - NCCFGRD
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCS_OPC_NCLTRD = 0x6f00| 1ULL<<32, // Matches on Receive path of a UPI Port -- Non-Coherent Standard - NCLTRD
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCS_OPC_IORD = 0x7f00, // Matches on Receive path of a UPI Port -- Non-Coherent Standard - IORD
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCS_OPC_MSGS = 0x8f00, // NCS - MSGS
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCS_OPC_CFGWR = 0x9f00, // Matches on Receive path of a UPI Port -- Non-Coherent Standard - CFGWR
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCS_OPC_LTWR = 0xaf00, // Matches on Receive path of a UPI Port -- Non-Coherent Standard - LTWR
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCS_OPC_NCIOWR = 0xbf00, // Matches on Receive path of a UPI Port -- Non-Coherent Standard - NCIOWR
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__NCS_OPC_NCP2PS = 0xff00, // Matches on Receive path of a UPI Port -- Non-Coherent Standard - NCP2PS
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__REQ = 0x800, // Matches on Receive path of a UPI Port -- Request
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__REQ_OPC_INVITOE = 0x7800, // Matches on Receive path of a UPI Port -- Request Opcode - ITOE
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__REQ_OPC_RDINV = 0xc800, // Matches on Receive path of a UPI Port -- Request Opcode - ReadInv
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSPCNFLT = 0xaa00, // Matches on Receive path of a UPI Port -- Response - Conflict
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSPI = 0x2a00, // Matches on Receive path of a UPI Port -- Response - Invalid
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSP_DATA = 0xc00, // Matches on Receive path of a UPI Port -- Response - Data
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSP_DATA_OPC_DATA_M = 0x0c00, // Matches on Receive path of a UPI Port -- Response - Data - DATA_M
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSP_DATA_OPC_DATA_E = 0x1c00, // Matches on Receive path of a UPI Port -- Response - Data - DATA_E
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSP_DATA_OPC_DATA_SI = 0x2c00, // Matches on Receive path of a UPI Port -- Response - Data - DATA_SI
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSP_DATA_OPC_DATA_M_CMPO = 0x4c00, // RSP4 - DATA_M_CMPO
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSP_DATA_OPC_DATA_E_CMPO = 0x5c00, // Matches on Receive path of a UPI Port -- Response - Data - DATA_E_CMPO
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSP_DATA_OPC_DATA_SI_CMPO = 0x6c00, // Matches on Receive path of a UPI Port -- Response - Data - DATA_SI_CMPO
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSP_DATA_OPC_RSPFWDIWB = 0xac00, // Matches on Receive path of a UPI Port -- Response - Data - RSPFWDIWB
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSP_DATA_OPC_RSPFWDSWB = 0xbc00, // Matches on Receive path of a UPI Port -- Response - Data - RSPFWDIWB
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSP_DATA_OPC_RSPIWB = 0xcc00, // Matches on Receive path of a UPI Port -- Response - Data - RSPIWB
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSP_DATA_OPC_RSPSWB = 0xdc00, // Matches on Receive path of a UPI Port -- Response - Data - RSPSWB
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSP_DATA_OPC_DEBUG_DATA = 0xfc00, // Matches on Receive path of a UPI Port -- Response - Data - DEBUGDATA
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSP_NODATA = 0xa00, // Matches on Receive path of a UPI Port -- Response - No Data
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSP_NODATA_OPC_FWDS = 0x6a00, // Matches on Receive path of a UPI Port -- Response - No Data - FWDS
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSP_NODATA_OPC_MIRCMPU = 0x8a00, // Matches on Receive path of a UPI Port -- Response - No Data - MIRCMPU
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSP_NODATA_OPC_CNFLT = 0xaa00, // Matches on Receive path of a UPI Port -- Response - No Data - CNFLT
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSP_NODATA_OPC_FWDCNFLTO = 0xda00, // Matches on Receive path of a UPI Port -- Response - No Data - FWDCNFLTO
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__RSP_NODATA_OPC_CMPO = 0xca00, // Matches on Receive path of a UPI Port -- Response - No Data - CMPO
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__SNP = 0x900, // Matches on Receive path of a UPI Port -- Snoop
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__SNP_OPC_FCUR = 0x8900, // Matches on Receive path of a UPI Port -- Snoop Opcode - FCUR
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__SNP_OPC_FCODE = 0x9900, // Matches on Receive path of a UPI Port -- Snoop Opcode - FCODE
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__SNP_OPC_FDATA = 0xa900, // Matches on Receive path of a UPI Port -- Snoop Opcode - FDATA
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__SNP_OPC_FDATAMIG = 0xb900, // Matches on Receive path of a UPI Port -- Snoop Opcode - FDATAMIG
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__SNP_OPC_FINVOWN = 0xc900, // Matches on Receive path of a UPI Port -- Snoop Opcode - FDATA
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__SNP_OPC_FINV = 0xd900, // Matches on Receive path of a UPI Port -- Snoop Opcode - FINV
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__WB = 0xd00, // Matches on Receive path of a UPI Port -- Writeback
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__WB_OPC_WBMTOI = 0x0d00, // Matches on Receive path of a UPI Port -- Writeback - MTOI
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__WB_OPC_WBMTOS = 0x1d00, // Matches on Receive path of a UPI Port -- Writeback - MTOS
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__WB_OPC_WBMTOE = 0x2d00, // Matches on Receive path of a UPI Port -- Writeback - MTOE
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__WB_OPC_NONSNPWR = 0x3d00, // Matches on Receive path of a UPI Port -- Writeback - NONSNPWR
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__WB_OPC_MTOIPTL = 0x4d00, // Matches on Receive path of a UPI Port -- Writeback - MTOIPTL
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__WB_OPC_MTOEPTL = 0x6d00, // Matches on Receive path of a UPI Port -- Writeback - MTOEPTL
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__WB_OPC_NONSNPWRTL = 0x6d00, // Matches on Receive path of a UPI Port -- Writeback - NONSNPWRTL
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__WB_OPC_PUSHMTOI = 0x8d00, // Matches on Receive path of a UPI Port -- Writeback - PUSHMTOI
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__WB_OPC_FLUSH = 0xbd00, // Matches on Receive path of a UPI Port -- Writeback - FLUSH
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__WB_OPC_EVCTCLN = 0xcd00, // Matches on Receive path of a UPI Port -- Writeback - EVCTCLN
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__WB_OPC_NONSNPRD = 0xdd00, // WB - NONSNPRD
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__FILT_NONE = 0x0000, // No extra filter
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__FILT_LOCAL = 0x0000, // Filter packets targeting this socket
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__FILT_REMOTE = 0x0000, // Filter packets targeting another socket
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__FILT_DATA = 0x0000, // Filter on Data packets (mutually exclusive with FILT_NON_DATA)
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__FILT_NON_DATA = 0x0000, // Filter on non-Data packets (mutually exclusive with FILT_DATA)
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__FILT_DUAL_SLOT = 0x0000, // Filter on dual-slot packets (mutually exclusive with FILT_SINGLE_SLOT)
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__FILT_SINGLE_SLOT = 0x0000, // Filter on single-slot packets (mutually exclusive with FILT_DUAL_SLOT)
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__FILT_ISOCH = 0x0000, // Filter on isochronous  packets
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__FILT_SLOT0 = 0x0000, // Filter on slot0 packets
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__FILT_SLOT1 = 0x0000, // Filter on slot1 packets
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__FILT_SLOT2 = 0x0000, // Filter on slot2 packets
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__FILT_LLCRD_NON_ZERO = 0x0000, // Filter on LLCRD nonzero (only applies to slot2 with opcode match)
		UNC_UPI_TXL_BASIC_HDR_MATCH__MASK__SKX_UNC_UPI_RXL_BASIC_HDR_MATCH__FILT_IMPL_NULL = 0x0000, // Filter on implied NULL (only applies to slot2 with opcode match)
		UNC_UPI_TXL_BYPASSED = 0x41, // Counts the number of times that an incoming flit was able to bypass the Tx flit buffer and pass directly out the UPI Link. Generally
		UNC_UPI_TXL_FLITS = 0x2, // Shows legal flit time (hides impact of L0p and L0c).
		UNC_UPI_TXL_FLITS__MASK__SKX_UNC_UPI_TXL_FLITS__ALL_DATA = 0xf00, // Valid Flits Sent -- All Data
		UNC_UPI_TXL_FLITS__MASK__SKX_UNC_UPI_TXL_FLITS__ALL_NULL = 0x2700, // Valid Flits Sent -- All Null Slots
		UNC_UPI_TXL_FLITS__MASK__SKX_UNC_UPI_TXL_FLITS__DATA = 0x800, // Valid Flits Sent -- Data
		UNC_UPI_TXL_FLITS__MASK__SKX_UNC_UPI_TXL_FLITS__IDLE = 0x4700, // Valid Flits Sent -- Idle
		UNC_UPI_TXL_FLITS__MASK__SKX_UNC_UPI_TXL_FLITS__LLCRD = 0x1000, // Valid Flits Sent -- LLCRD Not Empty
		UNC_UPI_TXL_FLITS__MASK__SKX_UNC_UPI_TXL_FLITS__LLCTRL = 0x4000, // Valid Flits Sent -- LLCTRL
		UNC_UPI_TXL_FLITS__MASK__SKX_UNC_UPI_TXL_FLITS__NON_DATA = 0x9700, // Valid Flits Sent -- All Non Data
		UNC_UPI_TXL_FLITS__MASK__SKX_UNC_UPI_TXL_FLITS__NULL = 0x2000, // Valid Flits Sent -- Slot NULL or LLCRD Empty
		UNC_UPI_TXL_FLITS__MASK__SKX_UNC_UPI_TXL_FLITS__PROTHDR = 0x8000, // Valid Flits Sent -- Protocol Header
		UNC_UPI_TXL_FLITS__MASK__SKX_UNC_UPI_TXL_FLITS__SLOT0 = 0x100, // Valid Flits Sent -- Slot 0
		UNC_UPI_TXL_FLITS__MASK__SKX_UNC_UPI_TXL_FLITS__SLOT1 = 0x200, // Valid Flits Sent -- Slot 1
		UNC_UPI_TXL_FLITS__MASK__SKX_UNC_UPI_TXL_FLITS__SLOT2 = 0x400, // Valid Flits Sent -- Slot 2
		UNC_UPI_TXL_INSERTS = 0x40, // Number of allocations into the UPI Tx Flit Buffer.  Generally
		UNC_UPI_TXL_OCCUPANCY = 0x42, // Accumulates the number of flits in the TxQ.  Generally
		UNC_UPI_VNA_CREDIT_RETURN_BLOCKED_VN01 = 0x45, // TBD
		UNC_UPI_VNA_CREDIT_RETURN_OCCUPANCY = 0x44, // Number of VNA credits in the Rx side that are waitng to be returned back across the link.
		
	};
};