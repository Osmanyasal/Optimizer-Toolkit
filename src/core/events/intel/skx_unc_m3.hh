#include <cstdint>
#include <intel_priv.hh>
namespace optkit::intel::skx_unc_m3{
	enum skx_unc_m3 : uint64_t {
		UNC_M3_AG0_AD_CRD_ACQUIRED = 0x80, // Number of CMS Agent 0 AD credits acquired in a given cycle
		UNC_M3_AG0_AD_CRD_ACQUIRED__MASK__SKX_UNC_M3_AG0_AD_CRD_ACQUIRED__TGR0 = 0x100, // CMS Agent0 Credits Acquired -- For Transgress 0
		UNC_M3_AG0_AD_CRD_ACQUIRED__MASK__SKX_UNC_M3_AG0_AD_CRD_ACQUIRED__TGR1 = 0x200, // CMS Agent0 Credits Acquired -- For Transgress 1
		UNC_M3_AG0_AD_CRD_ACQUIRED__MASK__SKX_UNC_M3_AG0_AD_CRD_ACQUIRED__TGR2 = 0x400, // CMS Agent0 Credits Acquired -- For Transgress 2
		UNC_M3_AG0_AD_CRD_ACQUIRED__MASK__SKX_UNC_M3_AG0_AD_CRD_ACQUIRED__TGR3 = 0x800, // CMS Agent0 Credits Acquired -- For Transgress 3
		UNC_M3_AG0_AD_CRD_ACQUIRED__MASK__SKX_UNC_M3_AG0_AD_CRD_ACQUIRED__TGR4 = 0x1000, // CMS Agent0 Credits Acquired -- For Transgress 4
		UNC_M3_AG0_AD_CRD_ACQUIRED__MASK__SKX_UNC_M3_AG0_AD_CRD_ACQUIRED__TGR5 = 0x2000, // CMS Agent0 Credits Acquired -- For Transgress 5
		UNC_M3_AG0_AD_CRD_OCCUPANCY = 0x82, // Number of CMS Agent 0 AD credits in use in a given cycle
		UNC_M3_AG0_AD_CRD_OCCUPANCY__MASK__SKX_UNC_M3_AG0_AD_CRD_OCCUPANCY__TGR0 = 0x100, // CMS Agent0 Credits Occupancy -- For Transgress 0
		UNC_M3_AG0_AD_CRD_OCCUPANCY__MASK__SKX_UNC_M3_AG0_AD_CRD_OCCUPANCY__TGR1 = 0x200, // CMS Agent0 Credits Occupancy -- For Transgress 1
		UNC_M3_AG0_AD_CRD_OCCUPANCY__MASK__SKX_UNC_M3_AG0_AD_CRD_OCCUPANCY__TGR2 = 0x400, // CMS Agent0 Credits Occupancy -- For Transgress 2
		UNC_M3_AG0_AD_CRD_OCCUPANCY__MASK__SKX_UNC_M3_AG0_AD_CRD_OCCUPANCY__TGR3 = 0x800, // CMS Agent0 Credits Occupancy -- For Transgress 3
		UNC_M3_AG0_AD_CRD_OCCUPANCY__MASK__SKX_UNC_M3_AG0_AD_CRD_OCCUPANCY__TGR4 = 0x1000, // CMS Agent0 Credits Occupancy -- For Transgress 4
		UNC_M3_AG0_AD_CRD_OCCUPANCY__MASK__SKX_UNC_M3_AG0_AD_CRD_OCCUPANCY__TGR5 = 0x2000, // CMS Agent0 Credits Occupancy -- For Transgress 5
		UNC_M3_AG0_BL_CRD_ACQUIRED = 0x88, // Number of CMS Agent 0 BL credits acquired in a given cycle
		UNC_M3_AG0_BL_CRD_ACQUIRED__MASK__SKX_UNC_M3_AG0_AD_CRD_ACQUIRED__TGR0 = 0x100, // CMS Agent0 Credits Acquired -- For Transgress 0
		UNC_M3_AG0_BL_CRD_ACQUIRED__MASK__SKX_UNC_M3_AG0_AD_CRD_ACQUIRED__TGR1 = 0x200, // CMS Agent0 Credits Acquired -- For Transgress 1
		UNC_M3_AG0_BL_CRD_ACQUIRED__MASK__SKX_UNC_M3_AG0_AD_CRD_ACQUIRED__TGR2 = 0x400, // CMS Agent0 Credits Acquired -- For Transgress 2
		UNC_M3_AG0_BL_CRD_ACQUIRED__MASK__SKX_UNC_M3_AG0_AD_CRD_ACQUIRED__TGR3 = 0x800, // CMS Agent0 Credits Acquired -- For Transgress 3
		UNC_M3_AG0_BL_CRD_ACQUIRED__MASK__SKX_UNC_M3_AG0_AD_CRD_ACQUIRED__TGR4 = 0x1000, // CMS Agent0 Credits Acquired -- For Transgress 4
		UNC_M3_AG0_BL_CRD_ACQUIRED__MASK__SKX_UNC_M3_AG0_AD_CRD_ACQUIRED__TGR5 = 0x2000, // CMS Agent0 Credits Acquired -- For Transgress 5
		UNC_M3_AG0_BL_CRD_OCCUPANCY = 0x8a, // Number of CMS Agent 0 BL credits in use in a given cycle
		UNC_M3_AG0_BL_CRD_OCCUPANCY__MASK__SKX_UNC_M3_AG0_AD_CRD_OCCUPANCY__TGR0 = 0x100, // CMS Agent0 Credits Occupancy -- For Transgress 0
		UNC_M3_AG0_BL_CRD_OCCUPANCY__MASK__SKX_UNC_M3_AG0_AD_CRD_OCCUPANCY__TGR1 = 0x200, // CMS Agent0 Credits Occupancy -- For Transgress 1
		UNC_M3_AG0_BL_CRD_OCCUPANCY__MASK__SKX_UNC_M3_AG0_AD_CRD_OCCUPANCY__TGR2 = 0x400, // CMS Agent0 Credits Occupancy -- For Transgress 2
		UNC_M3_AG0_BL_CRD_OCCUPANCY__MASK__SKX_UNC_M3_AG0_AD_CRD_OCCUPANCY__TGR3 = 0x800, // CMS Agent0 Credits Occupancy -- For Transgress 3
		UNC_M3_AG0_BL_CRD_OCCUPANCY__MASK__SKX_UNC_M3_AG0_AD_CRD_OCCUPANCY__TGR4 = 0x1000, // CMS Agent0 Credits Occupancy -- For Transgress 4
		UNC_M3_AG0_BL_CRD_OCCUPANCY__MASK__SKX_UNC_M3_AG0_AD_CRD_OCCUPANCY__TGR5 = 0x2000, // CMS Agent0 Credits Occupancy -- For Transgress 5
		UNC_M3_AG1_AD_CRD_ACQUIRED = 0x84, // Number of CMS Agent 1 AD credits acquired in a given cycle
		UNC_M3_AG1_AD_CRD_ACQUIRED__MASK__SKX_UNC_M3_AG0_AD_CRD_ACQUIRED__TGR0 = 0x100, // CMS Agent0 Credits Acquired -- For Transgress 0
		UNC_M3_AG1_AD_CRD_ACQUIRED__MASK__SKX_UNC_M3_AG0_AD_CRD_ACQUIRED__TGR1 = 0x200, // CMS Agent0 Credits Acquired -- For Transgress 1
		UNC_M3_AG1_AD_CRD_ACQUIRED__MASK__SKX_UNC_M3_AG0_AD_CRD_ACQUIRED__TGR2 = 0x400, // CMS Agent0 Credits Acquired -- For Transgress 2
		UNC_M3_AG1_AD_CRD_ACQUIRED__MASK__SKX_UNC_M3_AG0_AD_CRD_ACQUIRED__TGR3 = 0x800, // CMS Agent0 Credits Acquired -- For Transgress 3
		UNC_M3_AG1_AD_CRD_ACQUIRED__MASK__SKX_UNC_M3_AG0_AD_CRD_ACQUIRED__TGR4 = 0x1000, // CMS Agent0 Credits Acquired -- For Transgress 4
		UNC_M3_AG1_AD_CRD_ACQUIRED__MASK__SKX_UNC_M3_AG0_AD_CRD_ACQUIRED__TGR5 = 0x2000, // CMS Agent0 Credits Acquired -- For Transgress 5
		UNC_M3_AG1_AD_CRD_OCCUPANCY = 0x86, // Number of CMS Agent 1 AD credits in use in a given cycle
		UNC_M3_AG1_AD_CRD_OCCUPANCY__MASK__SKX_UNC_M3_AG0_AD_CRD_OCCUPANCY__TGR0 = 0x100, // CMS Agent0 Credits Occupancy -- For Transgress 0
		UNC_M3_AG1_AD_CRD_OCCUPANCY__MASK__SKX_UNC_M3_AG0_AD_CRD_OCCUPANCY__TGR1 = 0x200, // CMS Agent0 Credits Occupancy -- For Transgress 1
		UNC_M3_AG1_AD_CRD_OCCUPANCY__MASK__SKX_UNC_M3_AG0_AD_CRD_OCCUPANCY__TGR2 = 0x400, // CMS Agent0 Credits Occupancy -- For Transgress 2
		UNC_M3_AG1_AD_CRD_OCCUPANCY__MASK__SKX_UNC_M3_AG0_AD_CRD_OCCUPANCY__TGR3 = 0x800, // CMS Agent0 Credits Occupancy -- For Transgress 3
		UNC_M3_AG1_AD_CRD_OCCUPANCY__MASK__SKX_UNC_M3_AG0_AD_CRD_OCCUPANCY__TGR4 = 0x1000, // CMS Agent0 Credits Occupancy -- For Transgress 4
		UNC_M3_AG1_AD_CRD_OCCUPANCY__MASK__SKX_UNC_M3_AG0_AD_CRD_OCCUPANCY__TGR5 = 0x2000, // CMS Agent0 Credits Occupancy -- For Transgress 5
		UNC_M3_AG1_BL_CRD_OCCUPANCY = 0x8e, // Number of CMS Agent 1 BL credits in use in a given cycle
		UNC_M3_AG1_BL_CRD_OCCUPANCY__MASK__SKX_UNC_M3_AG0_AD_CRD_OCCUPANCY__TGR0 = 0x100, // CMS Agent0 Credits Occupancy -- For Transgress 0
		UNC_M3_AG1_BL_CRD_OCCUPANCY__MASK__SKX_UNC_M3_AG0_AD_CRD_OCCUPANCY__TGR1 = 0x200, // CMS Agent0 Credits Occupancy -- For Transgress 1
		UNC_M3_AG1_BL_CRD_OCCUPANCY__MASK__SKX_UNC_M3_AG0_AD_CRD_OCCUPANCY__TGR2 = 0x400, // CMS Agent0 Credits Occupancy -- For Transgress 2
		UNC_M3_AG1_BL_CRD_OCCUPANCY__MASK__SKX_UNC_M3_AG0_AD_CRD_OCCUPANCY__TGR3 = 0x800, // CMS Agent0 Credits Occupancy -- For Transgress 3
		UNC_M3_AG1_BL_CRD_OCCUPANCY__MASK__SKX_UNC_M3_AG0_AD_CRD_OCCUPANCY__TGR4 = 0x1000, // CMS Agent0 Credits Occupancy -- For Transgress 4
		UNC_M3_AG1_BL_CRD_OCCUPANCY__MASK__SKX_UNC_M3_AG0_AD_CRD_OCCUPANCY__TGR5 = 0x2000, // CMS Agent0 Credits Occupancy -- For Transgress 5
		UNC_M3_AG1_BL_CREDITS_ACQUIRED = 0x8c, // Number of CMS Agent 1 BL credits acquired in a given cycle
		UNC_M3_AG1_BL_CREDITS_ACQUIRED__MASK__SKX_UNC_M3_AG0_AD_CRD_ACQUIRED__TGR0 = 0x100, // CMS Agent0 Credits Acquired -- For Transgress 0
		UNC_M3_AG1_BL_CREDITS_ACQUIRED__MASK__SKX_UNC_M3_AG0_AD_CRD_ACQUIRED__TGR1 = 0x200, // CMS Agent0 Credits Acquired -- For Transgress 1
		UNC_M3_AG1_BL_CREDITS_ACQUIRED__MASK__SKX_UNC_M3_AG0_AD_CRD_ACQUIRED__TGR2 = 0x400, // CMS Agent0 Credits Acquired -- For Transgress 2
		UNC_M3_AG1_BL_CREDITS_ACQUIRED__MASK__SKX_UNC_M3_AG0_AD_CRD_ACQUIRED__TGR3 = 0x800, // CMS Agent0 Credits Acquired -- For Transgress 3
		UNC_M3_AG1_BL_CREDITS_ACQUIRED__MASK__SKX_UNC_M3_AG0_AD_CRD_ACQUIRED__TGR4 = 0x1000, // CMS Agent0 Credits Acquired -- For Transgress 4
		UNC_M3_AG1_BL_CREDITS_ACQUIRED__MASK__SKX_UNC_M3_AG0_AD_CRD_ACQUIRED__TGR5 = 0x2000, // CMS Agent0 Credits Acquired -- For Transgress 5
		UNC_M3_CHA_AD_CREDITS_EMPTY = 0x22, // No credits available to send to Cbox on the AD Ring (covers higher CBoxes)
		UNC_M3_CHA_AD_CREDITS_EMPTY__MASK__SKX_UNC_M3_CHA_AD_CREDITS_EMPTY__REQ = 0x400, // CBox AD Credits Empty -- Requests
		UNC_M3_CHA_AD_CREDITS_EMPTY__MASK__SKX_UNC_M3_CHA_AD_CREDITS_EMPTY__SNP = 0x800, // CBox AD Credits Empty -- Snoops
		UNC_M3_CHA_AD_CREDITS_EMPTY__MASK__SKX_UNC_M3_CHA_AD_CREDITS_EMPTY__VNA = 0x100, // CBox AD Credits Empty -- VNA Messages
		UNC_M3_CHA_AD_CREDITS_EMPTY__MASK__SKX_UNC_M3_CHA_AD_CREDITS_EMPTY__WB = 0x200, // CBox AD Credits Empty -- Writebacks
		UNC_M3_CLOCKTICKS = 0x1, // Counts the number of uclks in the M3 uclk domain.  This could be slightly different than the count in the Ubox because of enable/freeze delays.  However
		UNC_M3_CMS_CLOCKTICKS = 0xc0, // TBD
		UNC_M3_D2C_SENT = 0x2b, // Count cases BL sends direct to core
		UNC_M3_D2U_SENT = 0x2a, // Cases where SMI3 sends D2U command
		UNC_M3_EGRESS_ORDERING = 0xae, // Counts number of cycles IV was blocked in the TGR Egress due to SNP/GO Ordering requirements
		UNC_M3_EGRESS_ORDERING__MASK__SKX_UNC_M3_EGRESS_ORDERING__IV_SNOOPGO_DN = 0x400, // Egress Blocking due to Ordering requirements -- Down
		UNC_M3_EGRESS_ORDERING__MASK__SKX_UNC_M3_EGRESS_ORDERING__IV_SNOOPGO_UP = 0x100, // Egress Blocking due to Ordering requirements -- Up
		UNC_M3_FAST_ASSERTED = 0xa5, // Counts the number of cycles either the local or incoming distress signals are asserted.  Incoming distress includes up
		UNC_M3_FAST_ASSERTED__MASK__SKX_UNC_M3_FAST_ASSERTED__HORZ = 0x200, // FaST wire asserted -- Horizontal
		UNC_M3_FAST_ASSERTED__MASK__SKX_UNC_M3_FAST_ASSERTED__VERT = 0x100, // FaST wire asserted -- Vertical
		UNC_M3_HORZ_RING_AD_IN_USE = 0xa7, // Counts the number of cycles that the Horizontal AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk
		UNC_M3_HORZ_RING_AD_IN_USE__MASK__SKX_UNC_M3_HORZ_RING_AD_IN_USE__LEFT_EVEN = 0x100, // Horizontal AD Ring In Use -- Left and Even
		UNC_M3_HORZ_RING_AD_IN_USE__MASK__SKX_UNC_M3_HORZ_RING_AD_IN_USE__LEFT_ODD = 0x200, // Horizontal AD Ring In Use -- Left and Odd
		UNC_M3_HORZ_RING_AD_IN_USE__MASK__SKX_UNC_M3_HORZ_RING_AD_IN_USE__RIGHT_EVEN = 0x400, // Horizontal AD Ring In Use -- Right and Even
		UNC_M3_HORZ_RING_AD_IN_USE__MASK__SKX_UNC_M3_HORZ_RING_AD_IN_USE__RIGHT_ODD = 0x800, // Horizontal AD Ring In Use -- Right and Odd
		UNC_M3_HORZ_RING_AK_IN_USE = 0xa9, // Counts the number of cycles that the Horizontal AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk
		UNC_M3_HORZ_RING_AK_IN_USE__MASK__SKX_UNC_M3_HORZ_RING_AK_IN_USE__LEFT_EVEN = 0x100, // Horizontal AK Ring In Use -- Left and Even
		UNC_M3_HORZ_RING_AK_IN_USE__MASK__SKX_UNC_M3_HORZ_RING_AK_IN_USE__LEFT_ODD = 0x200, // Horizontal AK Ring In Use -- Left and Odd
		UNC_M3_HORZ_RING_AK_IN_USE__MASK__SKX_UNC_M3_HORZ_RING_AK_IN_USE__RIGHT_EVEN = 0x400, // Horizontal AK Ring In Use -- Right and Even
		UNC_M3_HORZ_RING_AK_IN_USE__MASK__SKX_UNC_M3_HORZ_RING_AK_IN_USE__RIGHT_ODD = 0x800, // Horizontal AK Ring In Use -- Right and Odd
		UNC_M3_HORZ_RING_BL_IN_USE = 0xab, // Counts the number of cycles that the Horizontal BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk
		UNC_M3_HORZ_RING_BL_IN_USE__MASK__SKX_UNC_M3_HORZ_RING_BL_IN_USE__LEFT_EVEN = 0x100, // Horizontal BL Ring in Use -- Left and Even
		UNC_M3_HORZ_RING_BL_IN_USE__MASK__SKX_UNC_M3_HORZ_RING_BL_IN_USE__LEFT_ODD = 0x200, // Horizontal BL Ring in Use -- Left and Odd
		UNC_M3_HORZ_RING_BL_IN_USE__MASK__SKX_UNC_M3_HORZ_RING_BL_IN_USE__RIGHT_EVEN = 0x400, // Horizontal BL Ring in Use -- Right and Even
		UNC_M3_HORZ_RING_BL_IN_USE__MASK__SKX_UNC_M3_HORZ_RING_BL_IN_USE__RIGHT_ODD = 0x800, // Horizontal BL Ring in Use -- Right and Odd
		UNC_M3_HORZ_RING_IV_IN_USE = 0xad, // Counts the number of cycles that the Horizontal IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk
		UNC_M3_HORZ_RING_IV_IN_USE__MASK__SKX_UNC_M3_HORZ_RING_IV_IN_USE__LEFT = 0x100, // Horizontal IV Ring in Use -- Left
		UNC_M3_HORZ_RING_IV_IN_USE__MASK__SKX_UNC_M3_HORZ_RING_IV_IN_USE__RIGHT = 0x400, // Horizontal IV Ring in Use -- Right
		UNC_M3_M2_BL_CREDITS_EMPTY = 0x23, // No vn0 and vna credits available to send to M2
		UNC_M3_M2_BL_CREDITS_EMPTY__MASK__SKX_UNC_M3_M2_BL_CREDITS_EMPTY__IIO0_IIO1_NCB = 0x100, // M2 BL Credits Empty -- IIO0 and IIO1 share the same ring destination. (1 VN0 credit only)
		UNC_M3_M2_BL_CREDITS_EMPTY__MASK__SKX_UNC_M3_M2_BL_CREDITS_EMPTY__IIO2_NCB = 0x200, // M2 BL Credits Empty -- IIO2
		UNC_M3_M2_BL_CREDITS_EMPTY__MASK__SKX_UNC_M3_M2_BL_CREDITS_EMPTY__IIO3_NCB = 0x400, // M2 BL Credits Empty -- IIO3
		UNC_M3_M2_BL_CREDITS_EMPTY__MASK__SKX_UNC_M3_M2_BL_CREDITS_EMPTY__IIO4_NCB = 0x800, // M2 BL Credits Empty -- IIO4
		UNC_M3_M2_BL_CREDITS_EMPTY__MASK__SKX_UNC_M3_M2_BL_CREDITS_EMPTY__IIO5_NCB = 0x1000, // M2 BL Credits Empty -- IIO5
		UNC_M3_M2_BL_CREDITS_EMPTY__MASK__SKX_UNC_M3_M2_BL_CREDITS_EMPTY__NCS = 0x2000, // M2 BL Credits Empty -- All IIO targets for NCS are in single mask. ORs them together
		UNC_M3_M2_BL_CREDITS_EMPTY__MASK__SKX_UNC_M3_M2_BL_CREDITS_EMPTY__NCS_SEL = 0x4000, // M2 BL Credits Empty -- Selected M2p BL NCS credits
		UNC_M3_MULTI_SLOT_RCVD = 0x3e, // Multi slot flit received - S0
		UNC_M3_MULTI_SLOT_RCVD__MASK__SKX_UNC_M3_MULTI_SLOT_RCVD__AD_SLOT0 = 0x100, // Multi Slot Flit Received -- AD - Slot 0
		UNC_M3_MULTI_SLOT_RCVD__MASK__SKX_UNC_M3_MULTI_SLOT_RCVD__AD_SLOT1 = 0x200, // Multi Slot Flit Received -- AD - Slot 1
		UNC_M3_MULTI_SLOT_RCVD__MASK__SKX_UNC_M3_MULTI_SLOT_RCVD__AD_SLOT2 = 0x400, // Multi Slot Flit Received -- AD - Slot 2
		UNC_M3_MULTI_SLOT_RCVD__MASK__SKX_UNC_M3_MULTI_SLOT_RCVD__AK_SLOT0 = 0x1000, // Multi Slot Flit Received -- AK - Slot 0
		UNC_M3_MULTI_SLOT_RCVD__MASK__SKX_UNC_M3_MULTI_SLOT_RCVD__AK_SLOT2 = 0x2000, // Multi Slot Flit Received -- AK - Slot 2
		UNC_M3_MULTI_SLOT_RCVD__MASK__SKX_UNC_M3_MULTI_SLOT_RCVD__BL_SLOT0 = 0x800, // Multi Slot Flit Received -- BL - Slot 0
		UNC_M3_RING_BOUNCES_HORZ = 0xa1, // Number of cycles incoming messages from the Horizontal ring that were bounced
		UNC_M3_RING_BOUNCES_HORZ__MASK__SKX_UNC_M3_RING_BOUNCES_HORZ__AD = 0x100, // Messages that bounced on the Horizontal Ring. -- AD
		UNC_M3_RING_BOUNCES_HORZ__MASK__SKX_UNC_M3_RING_BOUNCES_HORZ__AK = 0x200, // Messages that bounced on the Horizontal Ring. -- AK
		UNC_M3_RING_BOUNCES_HORZ__MASK__SKX_UNC_M3_RING_BOUNCES_HORZ__BL = 0x400, // Messages that bounced on the Horizontal Ring. -- BL
		UNC_M3_RING_BOUNCES_HORZ__MASK__SKX_UNC_M3_RING_BOUNCES_HORZ__IV = 0x800, // Messages that bounced on the Horizontal Ring. -- IV
		UNC_M3_RING_BOUNCES_VERT = 0xa0, // Number of cycles incoming messages from the Vertical ring that were bounced
		UNC_M3_RING_BOUNCES_VERT__MASK__SKX_UNC_M3_RING_BOUNCES_VERT__AD = 0x100, // Messages that bounced on the Vertical Ring. -- AD
		UNC_M3_RING_BOUNCES_VERT__MASK__SKX_UNC_M3_RING_BOUNCES_VERT__AK = 0x200, // Messages that bounced on the Vertical Ring. -- Acknowledgements to core
		UNC_M3_RING_BOUNCES_VERT__MASK__SKX_UNC_M3_RING_BOUNCES_VERT__BL = 0x400, // Messages that bounced on the Vertical Ring. -- Data Responses to core
		UNC_M3_RING_BOUNCES_VERT__MASK__SKX_UNC_M3_RING_BOUNCES_VERT__IV = 0x800, // Messages that bounced on the Vertical Ring. -- Snoops of processors cachee.
		UNC_M3_RING_SINK_STARVED_HORZ = 0xa3, // TBD
		UNC_M3_RING_SINK_STARVED_HORZ__MASK__SKX_UNC_M3_RING_SINK_STARVED_HORZ__AD = 0x100, // Sink Starvation on Horizontal Ring -- AD
		UNC_M3_RING_SINK_STARVED_HORZ__MASK__SKX_UNC_M3_RING_SINK_STARVED_HORZ__AK = 0x200, // Sink Starvation on Horizontal Ring -- AK
		UNC_M3_RING_SINK_STARVED_HORZ__MASK__SKX_UNC_M3_RING_SINK_STARVED_HORZ__AK_AG1 = 0x2000, // Sink Starvation on Horizontal Ring -- Acknowledgements to Agent 1
		UNC_M3_RING_SINK_STARVED_HORZ__MASK__SKX_UNC_M3_RING_SINK_STARVED_HORZ__BL = 0x400, // Sink Starvation on Horizontal Ring -- BL
		UNC_M3_RING_SINK_STARVED_HORZ__MASK__SKX_UNC_M3_RING_SINK_STARVED_HORZ__IV = 0x800, // Sink Starvation on Horizontal Ring -- IV
		UNC_M3_RING_SINK_STARVED_VERT = 0xa2, // TBD
		UNC_M3_RING_SINK_STARVED_VERT__MASK__SKX_UNC_M3_RING_SINK_STARVED_VERT__AD = 0x100, // Sink Starvation on Vertical Ring -- AD
		UNC_M3_RING_SINK_STARVED_VERT__MASK__SKX_UNC_M3_RING_SINK_STARVED_VERT__AK = 0x200, // Sink Starvation on Vertical Ring -- Acknowledgements to core
		UNC_M3_RING_SINK_STARVED_VERT__MASK__SKX_UNC_M3_RING_SINK_STARVED_VERT__BL = 0x400, // Sink Starvation on Vertical Ring -- Data Responses to core
		UNC_M3_RING_SINK_STARVED_VERT__MASK__SKX_UNC_M3_RING_SINK_STARVED_VERT__IV = 0x800, // Sink Starvation on Vertical Ring -- Snoops of processors cachee.
		UNC_M3_RING_SRC_THRTL = 0xa4, // TBD
		UNC_M3_RXC_ARB_LOST_VN0 = 0x4b, // VN0 message requested but lost arbitration
		UNC_M3_RXC_ARB_LOST_VN0__MASK__SKX_UNC_M3_RXC_ARB_LOST_VN0__AD_REQ = 0x100, // Lost Arb for VN0 -- REQ on AD
		UNC_M3_RXC_ARB_LOST_VN0__MASK__SKX_UNC_M3_RXC_ARB_LOST_VN0__AD_RSP = 0x400, // Lost Arb for VN0 -- RSP on AD
		UNC_M3_RXC_ARB_LOST_VN0__MASK__SKX_UNC_M3_RXC_ARB_LOST_VN0__AD_SNP = 0x200, // Lost Arb for VN0 -- SNP on AD
		UNC_M3_RXC_ARB_LOST_VN0__MASK__SKX_UNC_M3_RXC_ARB_LOST_VN0__BL_NCB = 0x2000, // Lost Arb for VN0 -- NCB on BL
		UNC_M3_RXC_ARB_LOST_VN0__MASK__SKX_UNC_M3_RXC_ARB_LOST_VN0__BL_NCS = 0x4000, // Lost Arb for VN0 -- NCS on BL
		UNC_M3_RXC_ARB_LOST_VN0__MASK__SKX_UNC_M3_RXC_ARB_LOST_VN0__BL_RSP = 0x800, // Lost Arb for VN0 -- RSP on BL
		UNC_M3_RXC_ARB_LOST_VN0__MASK__SKX_UNC_M3_RXC_ARB_LOST_VN0__BL_WB = 0x1000, // Lost Arb for VN0 -- WB on BL
		UNC_M3_RXC_ARB_LOST_VN1 = 0x4c, // VN1 message requested but lost arbitration
		UNC_M3_RXC_ARB_LOST_VN1__MASK__SKX_UNC_M3_RXC_ARB_LOST_VN1__AD_REQ = 0x100, // Lost Arb for VN1 -- REQ on AD
		UNC_M3_RXC_ARB_LOST_VN1__MASK__SKX_UNC_M3_RXC_ARB_LOST_VN1__AD_RSP = 0x400, // Lost Arb for VN1 -- RSP on AD
		UNC_M3_RXC_ARB_LOST_VN1__MASK__SKX_UNC_M3_RXC_ARB_LOST_VN1__AD_SNP = 0x200, // Lost Arb for VN1 -- SNP on AD
		UNC_M3_RXC_ARB_LOST_VN1__MASK__SKX_UNC_M3_RXC_ARB_LOST_VN1__BL_NCB = 0x2000, // Lost Arb for VN1 -- NCB on BL
		UNC_M3_RXC_ARB_LOST_VN1__MASK__SKX_UNC_M3_RXC_ARB_LOST_VN1__BL_NCS = 0x4000, // Lost Arb for VN1 -- NCS on BL
		UNC_M3_RXC_ARB_LOST_VN1__MASK__SKX_UNC_M3_RXC_ARB_LOST_VN1__BL_RSP = 0x800, // Lost Arb for VN1 -- RSP on BL
		UNC_M3_RXC_ARB_LOST_VN1__MASK__SKX_UNC_M3_RXC_ARB_LOST_VN1__BL_WB = 0x1000, // Lost Arb for VN1 -- WB on BL
		UNC_M3_RXC_ARB_MISC = 0x4d, // TBD
		UNC_M3_RXC_ARB_MISC__MASK__SKX_UNC_M3_RXC_ARB_MISC__ADBL_PARALLEL_WIN = 0x4000, // Arb Miscellaneous -- AD
		UNC_M3_RXC_ARB_MISC__MASK__SKX_UNC_M3_RXC_ARB_MISC__NO_PROG_AD_VN0 = 0x400, // Arb Miscellaneous -- No Progress on Pending AD VN0
		UNC_M3_RXC_ARB_MISC__MASK__SKX_UNC_M3_RXC_ARB_MISC__NO_PROG_AD_VN1 = 0x800, // Arb Miscellaneous -- No Progress on Pending AD VN1
		UNC_M3_RXC_ARB_MISC__MASK__SKX_UNC_M3_RXC_ARB_MISC__NO_PROG_BL_VN0 = 0x1000, // Arb Miscellaneous -- No Progress on Pending BL VN0
		UNC_M3_RXC_ARB_MISC__MASK__SKX_UNC_M3_RXC_ARB_MISC__NO_PROG_BL_VN1 = 0x2000, // Arb Miscellaneous -- No Progress on Pending BL VN1
		UNC_M3_RXC_ARB_MISC__MASK__SKX_UNC_M3_RXC_ARB_MISC__PAR_BIAS_VN0 = 0x100, // Arb Miscellaneous -- Parallel Bias to VN0
		UNC_M3_RXC_ARB_MISC__MASK__SKX_UNC_M3_RXC_ARB_MISC__PAR_BIAS_VN1 = 0x200, // Arb Miscellaneous -- Parallel Bias to VN1
		UNC_M3_RXC_ARB_NOAD_REQ_VN0 = 0x49, // VN0 message was not able to request arbitration while some other message won arbitration
		UNC_M3_RXC_ARB_NOAD_REQ_VN0__MASK__SKX_UNC_M3_RXC_ARB_NOAD_REQ_VN0__AD_REQ = 0x100, // Cant Arb for VN0 -- REQ on AAD
		UNC_M3_RXC_ARB_NOAD_REQ_VN0__MASK__SKX_UNC_M3_RXC_ARB_NOAD_REQ_VN0__AD_RSP = 0x400, // Cant Arb for VN0 -- RSP on AAD
		UNC_M3_RXC_ARB_NOAD_REQ_VN0__MASK__SKX_UNC_M3_RXC_ARB_NOAD_REQ_VN0__AD_SNP = 0x200, // Cant Arb for VN0 -- SNP on AAD
		UNC_M3_RXC_ARB_NOAD_REQ_VN0__MASK__SKX_UNC_M3_RXC_ARB_NOAD_REQ_VN0__BL_NCB = 0x2000, // Cant Arb for VN0 -- NCB on BBL
		UNC_M3_RXC_ARB_NOAD_REQ_VN0__MASK__SKX_UNC_M3_RXC_ARB_NOAD_REQ_VN0__BL_NCS = 0x4000, // Cant Arb for VN0 -- NCS on BBL
		UNC_M3_RXC_ARB_NOAD_REQ_VN0__MASK__SKX_UNC_M3_RXC_ARB_NOAD_REQ_VN0__BL_RSP = 0x800, // Cant Arb for VN0 -- RSP on BBL
		UNC_M3_RXC_ARB_NOAD_REQ_VN0__MASK__SKX_UNC_M3_RXC_ARB_NOAD_REQ_VN0__BL_WB = 0x1000, // Cant Arb for VN0 -- WB on BBL
		UNC_M3_RXC_ARB_NOAD_REQ_VN1 = 0x4a, // VN1 message was not able to request arbitration while some other message won arbitration
		UNC_M3_RXC_ARB_NOAD_REQ_VN1__MASK__SKX_UNC_M3_RXC_ARB_NOAD_REQ_VN1__AD_REQ = 0x100, // Cant Arb for VN1 -- REQ on AAD
		UNC_M3_RXC_ARB_NOAD_REQ_VN1__MASK__SKX_UNC_M3_RXC_ARB_NOAD_REQ_VN1__AD_RSP = 0x400, // Cant Arb for VN1 -- RSP on AAD
		UNC_M3_RXC_ARB_NOAD_REQ_VN1__MASK__SKX_UNC_M3_RXC_ARB_NOAD_REQ_VN1__AD_SNP = 0x200, // Cant Arb for VN1 -- SNP on AAD
		UNC_M3_RXC_ARB_NOAD_REQ_VN1__MASK__SKX_UNC_M3_RXC_ARB_NOAD_REQ_VN1__BL_NCB = 0x2000, // Cant Arb for VN1 -- NCB on BBL
		UNC_M3_RXC_ARB_NOAD_REQ_VN1__MASK__SKX_UNC_M3_RXC_ARB_NOAD_REQ_VN1__BL_NCS = 0x4000, // Cant Arb for VN1 -- NCS on BBL
		UNC_M3_RXC_ARB_NOAD_REQ_VN1__MASK__SKX_UNC_M3_RXC_ARB_NOAD_REQ_VN1__BL_RSP = 0x800, // Cant Arb for VN1 -- RSP on BBL
		UNC_M3_RXC_ARB_NOAD_REQ_VN1__MASK__SKX_UNC_M3_RXC_ARB_NOAD_REQ_VN1__BL_WB = 0x1000, // Cant Arb for VN1 -- WB on BBL
		UNC_M3_RXC_ARB_NOCRED_VN0 = 0x47, // VN0 message is blocked from requesting arbitration due to lack of remote UPI credits
		UNC_M3_RXC_ARB_NOCRED_VN0__MASK__SKX_UNC_M3_RXC_ARB_NOCRED_VN0__AD_REQ = 0x100, // No Credits to Arb for VN0 -- REQ on AD
		UNC_M3_RXC_ARB_NOCRED_VN0__MASK__SKX_UNC_M3_RXC_ARB_NOCRED_VN0__AD_RSP = 0x400, // No Credits to Arb for VN0 -- RSP on AD
		UNC_M3_RXC_ARB_NOCRED_VN0__MASK__SKX_UNC_M3_RXC_ARB_NOCRED_VN0__AD_SNP = 0x200, // No Credits to Arb for VN0 -- SNP on AD
		UNC_M3_RXC_ARB_NOCRED_VN0__MASK__SKX_UNC_M3_RXC_ARB_NOCRED_VN0__BL_NCB = 0x2000, // No Credits to Arb for VN0 -- NCB on BL
		UNC_M3_RXC_ARB_NOCRED_VN0__MASK__SKX_UNC_M3_RXC_ARB_NOCRED_VN0__BL_NCS = 0x4000, // No Credits to Arb for VN0 -- NCS on BL
		UNC_M3_RXC_ARB_NOCRED_VN0__MASK__SKX_UNC_M3_RXC_ARB_NOCRED_VN0__BL_RSP = 0x800, // No Credits to Arb for VN0 -- RSP on BL
		UNC_M3_RXC_ARB_NOCRED_VN0__MASK__SKX_UNC_M3_RXC_ARB_NOCRED_VN0__BL_WB = 0x1000, // No Credits to Arb for VN0 -- WB on BL
		UNC_M3_RXC_ARB_NOCRED_VN1 = 0x48, // VN1 message is blocked from requesting arbitration due to lack of remote UPI credits
		UNC_M3_RXC_ARB_NOCRED_VN1__MASK__SKX_UNC_M3_RXC_ARB_NOCRED_VN1__AD_REQ = 0x100, // No Credits to Arb for VN1 -- REQ on AD
		UNC_M3_RXC_ARB_NOCRED_VN1__MASK__SKX_UNC_M3_RXC_ARB_NOCRED_VN1__AD_RSP = 0x400, // No Credits to Arb for VN1 -- RSP on AD
		UNC_M3_RXC_ARB_NOCRED_VN1__MASK__SKX_UNC_M3_RXC_ARB_NOCRED_VN1__AD_SNP = 0x200, // No Credits to Arb for VN1 -- SNP on AD
		UNC_M3_RXC_ARB_NOCRED_VN1__MASK__SKX_UNC_M3_RXC_ARB_NOCRED_VN1__BL_NCB = 0x2000, // No Credits to Arb for VN1 -- NCB on BL
		UNC_M3_RXC_ARB_NOCRED_VN1__MASK__SKX_UNC_M3_RXC_ARB_NOCRED_VN1__BL_NCS = 0x4000, // No Credits to Arb for VN1 -- NCS on BL
		UNC_M3_RXC_ARB_NOCRED_VN1__MASK__SKX_UNC_M3_RXC_ARB_NOCRED_VN1__BL_RSP = 0x800, // No Credits to Arb for VN1 -- RSP on BL
		UNC_M3_RXC_ARB_NOCRED_VN1__MASK__SKX_UNC_M3_RXC_ARB_NOCRED_VN1__BL_WB = 0x1000, // No Credits to Arb for VN1 -- WB on BL
		UNC_M3_RXC_BYPASSED = 0x40, // Number ot times message is bypassed around the Ingress Queue
		UNC_M3_RXC_BYPASSED__MASK__SKX_UNC_M3_RXC_BYPASSED__AD_S0_BL_ARB = 0x200, // Ingress Queue Bypasses -- AD to Slot 0 on BL Arb
		UNC_M3_RXC_BYPASSED__MASK__SKX_UNC_M3_RXC_BYPASSED__AD_S0_IDLE = 0x100, // Ingress Queue Bypasses -- AD to Slot 0 on Idle
		UNC_M3_RXC_BYPASSED__MASK__SKX_UNC_M3_RXC_BYPASSED__AD_S1_BL_SLOT = 0x400, // Ingress Queue Bypasses -- AD + BL to Slot 1
		UNC_M3_RXC_BYPASSED__MASK__SKX_UNC_M3_RXC_BYPASSED__AD_S2_BL_SLOT = 0x800, // Ingress Queue Bypasses -- AD + BL to Slot 2
		UNC_M3_RXC_COLLISION_VN0 = 0x50, // Count cases where Ingress VN0 packets lost the contest for Flit Slot 0.
		UNC_M3_RXC_COLLISION_VN0__MASK__SKX_UNC_M3_RXC_COLLISION_VN0__AD_REQ = 0x100, // VN0 message lost contest for flit -- REQ on AD
		UNC_M3_RXC_COLLISION_VN0__MASK__SKX_UNC_M3_RXC_COLLISION_VN0__AD_RSP = 0x400, // VN0 message lost contest for flit -- RSP on AD
		UNC_M3_RXC_COLLISION_VN0__MASK__SKX_UNC_M3_RXC_COLLISION_VN0__AD_SNP = 0x200, // VN0 message lost contest for flit -- SNP on AD
		UNC_M3_RXC_COLLISION_VN0__MASK__SKX_UNC_M3_RXC_COLLISION_VN0__BL_NCB = 0x2000, // VN0 message lost contest for flit -- NCB on BL
		UNC_M3_RXC_COLLISION_VN0__MASK__SKX_UNC_M3_RXC_COLLISION_VN0__BL_NCS = 0x4000, // VN0 message lost contest for flit -- NCS on BL
		UNC_M3_RXC_COLLISION_VN0__MASK__SKX_UNC_M3_RXC_COLLISION_VN0__BL_RSP = 0x800, // VN0 message lost contest for flit -- RSP on BL
		UNC_M3_RXC_COLLISION_VN0__MASK__SKX_UNC_M3_RXC_COLLISION_VN0__BL_WB = 0x1000, // VN0 message lost contest for flit -- WB on BL
		UNC_M3_RXC_COLLISION_VN1 = 0x51, // Count cases where Ingress VN1 packets lost the contest for Flit Slot 0.
		UNC_M3_RXC_COLLISION_VN1__MASK__SKX_UNC_M3_RXC_COLLISION_VN1__AD_REQ = 0x100, // VN1 message lost contest for flit -- REQ on AD
		UNC_M3_RXC_COLLISION_VN1__MASK__SKX_UNC_M3_RXC_COLLISION_VN1__AD_RSP = 0x400, // VN1 message lost contest for flit -- RSP on AD
		UNC_M3_RXC_COLLISION_VN1__MASK__SKX_UNC_M3_RXC_COLLISION_VN1__AD_SNP = 0x200, // VN1 message lost contest for flit -- SNP on AD
		UNC_M3_RXC_COLLISION_VN1__MASK__SKX_UNC_M3_RXC_COLLISION_VN1__BL_NCB = 0x2000, // VN1 message lost contest for flit -- NCB on BL
		UNC_M3_RXC_COLLISION_VN1__MASK__SKX_UNC_M3_RXC_COLLISION_VN1__BL_NCS = 0x4000, // VN1 message lost contest for flit -- NCS on BL
		UNC_M3_RXC_COLLISION_VN1__MASK__SKX_UNC_M3_RXC_COLLISION_VN1__BL_RSP = 0x800, // VN1 message lost contest for flit -- RSP on BL
		UNC_M3_RXC_COLLISION_VN1__MASK__SKX_UNC_M3_RXC_COLLISION_VN1__BL_WB = 0x1000, // VN1 message lost contest for flit -- WB on BL
		UNC_M3_RXC_CRD_MISC = 0x60, // TBD
		UNC_M3_RXC_CRD_MISC__MASK__SKX_UNC_M3_RXC_CRD_MISC__ANY_BGF_FIFO = 0x100, // Miscellaneous Credit Events -- Any In BGF FIFO
		UNC_M3_RXC_CRD_MISC__MASK__SKX_UNC_M3_RXC_CRD_MISC__ANY_BGF_PATH = 0x200, // Miscellaneous Credit Events -- Any in BGF Path
		UNC_M3_RXC_CRD_MISC__MASK__SKX_UNC_M3_RXC_CRD_MISC__NO_D2K_FOR_ARB = 0x400, // Miscellaneous Credit Events -- No D2K For Arb
		UNC_M3_RXC_CRD_OCC = 0x61, // TBD
		UNC_M3_RXC_CRD_OCC__MASK__SKX_UNC_M3_RXC_CRD_OCC__D2K_CRD = 0x1000, // Credit Occupancy -- D2K Credits
		UNC_M3_RXC_CRD_OCC__MASK__SKX_UNC_M3_RXC_CRD_OCC__FLITS_IN_FIFO = 0x200, // Credit Occupancy -- Packets in BGF FIFO
		UNC_M3_RXC_CRD_OCC__MASK__SKX_UNC_M3_RXC_CRD_OCC__FLITS_IN_PATH = 0x400, // Credit Occupancy -- Packets in BGF Path
		UNC_M3_RXC_CRD_OCC__MASK__SKX_UNC_M3_RXC_CRD_OCC__P1P_FIFO = 0x4000, // Credit Occupancy --
		UNC_M3_RXC_CRD_OCC__MASK__SKX_UNC_M3_RXC_CRD_OCC__P1P_TOTAL = 0x2000, // Credit Occupancy --
		UNC_M3_RXC_CRD_OCC__MASK__SKX_UNC_M3_RXC_CRD_OCC__TxQ_CRD = 0x800, // Credit Occupancy -- Transmit Credits
		UNC_M3_RXC_CRD_OCC__MASK__SKX_UNC_M3_RXC_CRD_OCC__VNA_IN_USE = 0x100, // Credit Occupancy -- VNA In Use
		UNC_M3_RXC_CYCLES_NE_VN0 = 0x43, // Counts the number of cycles when the UPI Ingress is not empty.  This tracks one of the three rings that are used by the UPI agent.  This can be used in conjunction with the UPI Ingress Occupancy Accumulator event in order to calculate average queue occupancy.  Multiple ingress buffers can be tracked at a given time using multiple counters.
		UNC_M3_RXC_CYCLES_NE_VN0__MASK__SKX_UNC_M3_RXC_CYCLES_NE_VN0__AD_REQ = 0x100, // VN0 Ingress (from CMS) Queue - Cycles Not Empty -- REQ on AD
		UNC_M3_RXC_CYCLES_NE_VN0__MASK__SKX_UNC_M3_RXC_CYCLES_NE_VN0__AD_RSP = 0x400, // VN0 Ingress (from CMS) Queue - Cycles Not Empty -- RSP on AD
		UNC_M3_RXC_CYCLES_NE_VN0__MASK__SKX_UNC_M3_RXC_CYCLES_NE_VN0__AD_SNP = 0x200, // VN0 Ingress (from CMS) Queue - Cycles Not Empty -- SNP on AD
		UNC_M3_RXC_CYCLES_NE_VN0__MASK__SKX_UNC_M3_RXC_CYCLES_NE_VN0__BL_NCB = 0x2000, // VN0 Ingress (from CMS) Queue - Cycles Not Empty -- NCB on BL
		UNC_M3_RXC_CYCLES_NE_VN0__MASK__SKX_UNC_M3_RXC_CYCLES_NE_VN0__BL_NCS = 0x4000, // VN0 Ingress (from CMS) Queue - Cycles Not Empty -- NCS on BL
		UNC_M3_RXC_CYCLES_NE_VN0__MASK__SKX_UNC_M3_RXC_CYCLES_NE_VN0__BL_RSP = 0x800, // VN0 Ingress (from CMS) Queue - Cycles Not Empty -- RSP on BL
		UNC_M3_RXC_CYCLES_NE_VN0__MASK__SKX_UNC_M3_RXC_CYCLES_NE_VN0__BL_WB = 0x1000, // VN0 Ingress (from CMS) Queue - Cycles Not Empty -- WB on BL
		UNC_M3_RXC_CYCLES_NE_VN1 = 0x44, // Counts the number of allocations into the UPI VN1  Ingress.  This tracks one of the three rings that are used by the UPI agent.  This can be used in conjunction with the UPI VN1  Ingress Occupancy Accumulator event in order to calculate average queue latency.  Multiple ingress buffers can be tracked at a given time using multiple counters.
		UNC_M3_RXC_CYCLES_NE_VN1__MASK__SKX_UNC_M3_RXC_CYCLES_NE_VN1__AD_REQ = 0x100, // VN1 Ingress (from CMS) Queue - Cycles Not Empty -- REQ on AD
		UNC_M3_RXC_CYCLES_NE_VN1__MASK__SKX_UNC_M3_RXC_CYCLES_NE_VN1__AD_RSP = 0x400, // VN1 Ingress (from CMS) Queue - Cycles Not Empty -- RSP on AD
		UNC_M3_RXC_CYCLES_NE_VN1__MASK__SKX_UNC_M3_RXC_CYCLES_NE_VN1__AD_SNP = 0x200, // VN1 Ingress (from CMS) Queue - Cycles Not Empty -- SNP on AD
		UNC_M3_RXC_CYCLES_NE_VN1__MASK__SKX_UNC_M3_RXC_CYCLES_NE_VN1__BL_NCB = 0x2000, // VN1 Ingress (from CMS) Queue - Cycles Not Empty -- NCB on BL
		UNC_M3_RXC_CYCLES_NE_VN1__MASK__SKX_UNC_M3_RXC_CYCLES_NE_VN1__BL_NCS = 0x4000, // VN1 Ingress (from CMS) Queue - Cycles Not Empty -- NCS on BL
		UNC_M3_RXC_CYCLES_NE_VN1__MASK__SKX_UNC_M3_RXC_CYCLES_NE_VN1__BL_RSP = 0x800, // VN1 Ingress (from CMS) Queue - Cycles Not Empty -- RSP on BL
		UNC_M3_RXC_CYCLES_NE_VN1__MASK__SKX_UNC_M3_RXC_CYCLES_NE_VN1__BL_WB = 0x1000, // VN1 Ingress (from CMS) Queue - Cycles Not Empty -- WB on BL
		UNC_M3_RXC_FLITS_DATA_NOT_SENT = 0x57, // Data flit is ready for transmission but could not be sent
		UNC_M3_RXC_FLITS_DATA_NOT_SENT__MASK__SKX_UNC_M3_RXC_FLITS_DATA_NOT_SENT__ALL = 0x100, // Data Flit Not Sent -- All
		UNC_M3_RXC_FLITS_DATA_NOT_SENT__MASK__SKX_UNC_M3_RXC_FLITS_DATA_NOT_SENT__NO_BGF = 0x200, // Data Flit Not Sent -- No BGF Credits
		UNC_M3_RXC_FLITS_DATA_NOT_SENT__MASK__SKX_UNC_M3_RXC_FLITS_DATA_NOT_SENT__NO_TXQ = 0x400, // Data Flit Not Sent -- No TxQ Credits
		UNC_M3_RXC_FLITS_GEN_BL = 0x59, // TBD
		UNC_M3_RXC_FLITS_GEN_BL__MASK__SKX_UNC_M3_RXC_FLITS_GEN_BL__P0_WAIT = 0x100, // Generating BL Data Flit Sequence -- Wait on Pump 0
		UNC_M3_RXC_FLITS_GEN_BL__MASK__SKX_UNC_M3_RXC_FLITS_GEN_BL__P1P_AT_LIMIT = 0x1000, // Generating BL Data Flit Sequence --
		UNC_M3_RXC_FLITS_GEN_BL__MASK__SKX_UNC_M3_RXC_FLITS_GEN_BL__P1P_BUSY = 0x800, // Generating BL Data Flit Sequence --
		UNC_M3_RXC_FLITS_GEN_BL__MASK__SKX_UNC_M3_RXC_FLITS_GEN_BL__P1P_FIFO_FULL = 0x4000, // Generating BL Data Flit Sequence --
		UNC_M3_RXC_FLITS_GEN_BL__MASK__SKX_UNC_M3_RXC_FLITS_GEN_BL__P1P_HOLD_P0 = 0x2000, // Generating BL Data Flit Sequence --
		UNC_M3_RXC_FLITS_GEN_BL__MASK__SKX_UNC_M3_RXC_FLITS_GEN_BL__P1P_TO_LIMBO = 0x400, // Generating BL Data Flit Sequence --
		UNC_M3_RXC_FLITS_GEN_BL__MASK__SKX_UNC_M3_RXC_FLITS_GEN_BL__P1_WAIT = 0x200, // Generating BL Data Flit Sequence -- Wait on Pump 1
		UNC_M3_RXC_FLITS_MISC = 0x5a, // TBD
		UNC_M3_RXC_FLITS_SENT = 0x56, // TBD
		UNC_M3_RXC_FLITS_SENT__MASK__SKX_UNC_M3_RXC_FLITS_SENT__1_MSG = 0x100, // Sent Header Flit -- One Message
		UNC_M3_RXC_FLITS_SENT__MASK__SKX_UNC_M3_RXC_FLITS_SENT__1_MSG_VNX = 0x800, // Sent Header Flit -- One Message in non-VNA
		UNC_M3_RXC_FLITS_SENT__MASK__SKX_UNC_M3_RXC_FLITS_SENT__2_MSGS = 0x200, // Sent Header Flit -- Two Messages
		UNC_M3_RXC_FLITS_SENT__MASK__SKX_UNC_M3_RXC_FLITS_SENT__3_MSGS = 0x400, // Sent Header Flit -- Three Messages
		UNC_M3_RXC_FLITS_SENT__MASK__SKX_UNC_M3_RXC_FLITS_SENT__SLOTS_1 = 0x1000, // Sent Header Flit --
		UNC_M3_RXC_FLITS_SENT__MASK__SKX_UNC_M3_RXC_FLITS_SENT__SLOTS_2 = 0x2000, // Sent Header Flit --
		UNC_M3_RXC_FLITS_SENT__MASK__SKX_UNC_M3_RXC_FLITS_SENT__SLOTS_3 = 0x4000, // Sent Header Flit --
		UNC_M3_RXC_FLITS_SLOT_BL = 0x58, // TBD
		UNC_M3_RXC_FLITS_SLOT_BL__MASK__SKX_UNC_M3_RXC_FLITS_SLOT_BL__ALL = 0x100, // Slotting BL Message Into Header Flit -- All
		UNC_M3_RXC_FLITS_SLOT_BL__MASK__SKX_UNC_M3_RXC_FLITS_SLOT_BL__NEED_DATA = 0x200, // Slotting BL Message Into Header Flit -- Needs Data Flit
		UNC_M3_RXC_FLITS_SLOT_BL__MASK__SKX_UNC_M3_RXC_FLITS_SLOT_BL__P0_WAIT = 0x400, // Slotting BL Message Into Header Flit -- Wait on Pump 0
		UNC_M3_RXC_FLITS_SLOT_BL__MASK__SKX_UNC_M3_RXC_FLITS_SLOT_BL__P1_NOT_REQ = 0x1000, // Slotting BL Message Into Header Flit -- Don't Need Pump 1
		UNC_M3_RXC_FLITS_SLOT_BL__MASK__SKX_UNC_M3_RXC_FLITS_SLOT_BL__P1_NOT_REQ_BUT_BUBBLE = 0x2000, // Slotting BL Message Into Header Flit -- Don't Need Pump 1 - Bubble
		UNC_M3_RXC_FLITS_SLOT_BL__MASK__SKX_UNC_M3_RXC_FLITS_SLOT_BL__P1_NOT_REQ_NOT_AVAIL = 0x4000, // Slotting BL Message Into Header Flit -- Don't Need Pump 1 - Not Avail
		UNC_M3_RXC_FLITS_SLOT_BL__MASK__SKX_UNC_M3_RXC_FLITS_SLOT_BL__P1_WAIT = 0x800, // Slotting BL Message Into Header Flit -- Wait on Pump 1
		UNC_M3_RXC_FLIT_GEN_HDR1 = 0x53, // Events related to Header Flit Generation - Set 1
		UNC_M3_RXC_FLIT_GEN_HDR1__MASK__SKX_UNC_M3_RXC_FLIT_GEN_HDR1__ACCUM = 0x100, // Flit Gen - Header 1 -- Accumulate
		UNC_M3_RXC_FLIT_GEN_HDR1__MASK__SKX_UNC_M3_RXC_FLIT_GEN_HDR1__ACCUM_READ = 0x200, // Flit Gen - Header 1 -- Accumulate Ready
		UNC_M3_RXC_FLIT_GEN_HDR1__MASK__SKX_UNC_M3_RXC_FLIT_GEN_HDR1__ACCUM_WASTED = 0x400, // Flit Gen - Header 1 -- Accumulate Wasted
		UNC_M3_RXC_FLIT_GEN_HDR1__MASK__SKX_UNC_M3_RXC_FLIT_GEN_HDR1__AHEAD_BLOCKED = 0x800, // Flit Gen - Header 1 -- Run-Ahead - Blocked
		UNC_M3_RXC_FLIT_GEN_HDR1__MASK__SKX_UNC_M3_RXC_FLIT_GEN_HDR1__AHEAD_MSG = 0x1000, // Flit Gen - Header 1 -- Run-Ahead - Message
		UNC_M3_RXC_FLIT_GEN_HDR1__MASK__SKX_UNC_M3_RXC_FLIT_GEN_HDR1__PAR = 0x2000, // Flit Gen - Header 1 -- Parallel Ok
		UNC_M3_RXC_FLIT_GEN_HDR1__MASK__SKX_UNC_M3_RXC_FLIT_GEN_HDR1__PAR_FLIT = 0x8000, // Flit Gen - Header 1 -- Parallel Flit Finished
		UNC_M3_RXC_FLIT_GEN_HDR1__MASK__SKX_UNC_M3_RXC_FLIT_GEN_HDR1__PAR_MSG = 0x4000, // Flit Gen - Header 1 -- Parallel Message
		UNC_M3_RXC_FLIT_GEN_HDR2 = 0x54, // Events related to Header Flit Generation - Set 2
		UNC_M3_RXC_FLIT_GEN_HDR2__MASK__SKX_UNC_M3_RXC_FLIT_GEN_HDR2__RMSTALL = 0x100, // Flit Gen - Header 2 -- Rate-matching Stall
		UNC_M3_RXC_FLIT_GEN_HDR2__MASK__SKX_UNC_M3_RXC_FLIT_GEN_HDR2__RMSTALL_NOMSG = 0x200, // Flit Gen - Header 2 -- Rate-matching Stall - No Message
		UNC_M3_RXC_FLIT_NOT_SENT = 0x55, // header flit is ready for transmission but could not be sent
		UNC_M3_RXC_FLIT_NOT_SENT__MASK__SKX_UNC_M3_RXC_FLIT_NOT_SENT__ALL = 0x100, // Header Not Sent -- All
		UNC_M3_RXC_FLIT_NOT_SENT__MASK__SKX_UNC_M3_RXC_FLIT_NOT_SENT__NO_BGF_CRD = 0x200, // Header Not Sent -- No BGF Credits
		UNC_M3_RXC_FLIT_NOT_SENT__MASK__SKX_UNC_M3_RXC_FLIT_NOT_SENT__NO_BGF_NO_MSG = 0x800, // Header Not Sent -- No BGF Credits + No Extra Message Slotted
		UNC_M3_RXC_FLIT_NOT_SENT__MASK__SKX_UNC_M3_RXC_FLIT_NOT_SENT__NO_TXQ_CRD = 0x400, // Header Not Sent -- No TxQ Credits
		UNC_M3_RXC_FLIT_NOT_SENT__MASK__SKX_UNC_M3_RXC_FLIT_NOT_SENT__NO_TXQ_NO_MSG = 0x1000, // Header Not Sent -- No TxQ Credits + No Extra Message Slotted
		UNC_M3_RXC_FLIT_NOT_SENT__MASK__SKX_UNC_M3_RXC_FLIT_NOT_SENT__ONE_TAKEN = 0x2000, // Header Not Sent -- Sent - One Slot Taken
		UNC_M3_RXC_FLIT_NOT_SENT__MASK__SKX_UNC_M3_RXC_FLIT_NOT_SENT__THREE_TAKEN = 0x8000, // Header Not Sent -- Sent - Three Slots Taken
		UNC_M3_RXC_FLIT_NOT_SENT__MASK__SKX_UNC_M3_RXC_FLIT_NOT_SENT__TWO_TAKEN = 0x4000, // Header Not Sent -- Sent - Two Slots Taken
		UNC_M3_RXC_HELD = 0x52, // TBD
		UNC_M3_RXC_HELD__MASK__SKX_UNC_M3_RXC_HELD__CANT_SLOT_AD = 0x4000, // Message Held -- Cant Slot AAD
		UNC_M3_RXC_HELD__MASK__SKX_UNC_M3_RXC_HELD__CANT_SLOT_BL = 0x8000, // Message Held -- Cant Slot BBL
		UNC_M3_RXC_HELD__MASK__SKX_UNC_M3_RXC_HELD__PARALLEL_AD_LOST = 0x1000, // Message Held -- Parallel AD Lost
		UNC_M3_RXC_HELD__MASK__SKX_UNC_M3_RXC_HELD__PARALLEL_ATTEMPT = 0x400, // Message Held -- Parallel Attempt
		UNC_M3_RXC_HELD__MASK__SKX_UNC_M3_RXC_HELD__PARALLEL_BL_LOST = 0x2000, // Message Held -- Parallel BL Lost
		UNC_M3_RXC_HELD__MASK__SKX_UNC_M3_RXC_HELD__PARALLEL_SUCCESS = 0x800, // Message Held -- Parallel Success
		UNC_M3_RXC_HELD__MASK__SKX_UNC_M3_RXC_HELD__VN0 = 0x100, // Message Held -- VN0
		UNC_M3_RXC_HELD__MASK__SKX_UNC_M3_RXC_HELD__VN1 = 0x200, // Message Held -- VN1
		UNC_M3_RXC_INSERTS_VN0 = 0x41, // Counts the number of allocations into the UPI Ingress.  This tracks one of the three rings that are used by the UPI agent.  This can be used in conjunction with the UPI Ingress Occupancy Accumulator event in order to calculate average queue latency.  Multiple ingress buffers can be tracked at a given time using multiple counters.
		UNC_M3_RXC_INSERTS_VN0__MASK__SKX_UNC_M3_RXC_INSERTS_VN0__AD_REQ = 0x100, // VN0 Ingress (from CMS) Queue - Inserts -- REQ on AD
		UNC_M3_RXC_INSERTS_VN0__MASK__SKX_UNC_M3_RXC_INSERTS_VN0__AD_RSP = 0x400, // VN0 Ingress (from CMS) Queue - Inserts -- RSP on AD
		UNC_M3_RXC_INSERTS_VN0__MASK__SKX_UNC_M3_RXC_INSERTS_VN0__AD_SNP = 0x200, // VN0 Ingress (from CMS) Queue - Inserts -- SNP on AD
		UNC_M3_RXC_INSERTS_VN0__MASK__SKX_UNC_M3_RXC_INSERTS_VN0__BL_NCB = 0x2000, // VN0 Ingress (from CMS) Queue - Inserts -- NCB on BL
		UNC_M3_RXC_INSERTS_VN0__MASK__SKX_UNC_M3_RXC_INSERTS_VN0__BL_NCS = 0x4000, // VN0 Ingress (from CMS) Queue - Inserts -- NCS on BL
		UNC_M3_RXC_INSERTS_VN0__MASK__SKX_UNC_M3_RXC_INSERTS_VN0__BL_RSP = 0x800, // VN0 Ingress (from CMS) Queue - Inserts -- RSP on BL
		UNC_M3_RXC_INSERTS_VN0__MASK__SKX_UNC_M3_RXC_INSERTS_VN0__BL_WB = 0x1000, // VN0 Ingress (from CMS) Queue - Inserts -- WB on BL
		UNC_M3_RXC_INSERTS_VN1 = 0x42, // Counts the number of allocations into the UPI VN1  Ingress.  This tracks one of the three rings that are used by the UPI agent.  This can be used in conjunction with the UPI VN1  Ingress Occupancy Accumulator event in order to calculate average queue latency.  Multiple ingress buffers can be tracked at a given time using multiple counters.
		UNC_M3_RXC_INSERTS_VN1__MASK__SKX_UNC_M3_RXC_INSERTS_VN1__AD_REQ = 0x100, // VN1 Ingress (from CMS) Queue - Inserts -- REQ on AD
		UNC_M3_RXC_INSERTS_VN1__MASK__SKX_UNC_M3_RXC_INSERTS_VN1__AD_RSP = 0x400, // VN1 Ingress (from CMS) Queue - Inserts -- RSP on AD
		UNC_M3_RXC_INSERTS_VN1__MASK__SKX_UNC_M3_RXC_INSERTS_VN1__AD_SNP = 0x200, // VN1 Ingress (from CMS) Queue - Inserts -- SNP on AD
		UNC_M3_RXC_INSERTS_VN1__MASK__SKX_UNC_M3_RXC_INSERTS_VN1__BL_NCB = 0x2000, // VN1 Ingress (from CMS) Queue - Inserts -- NCB on BL
		UNC_M3_RXC_INSERTS_VN1__MASK__SKX_UNC_M3_RXC_INSERTS_VN1__BL_NCS = 0x4000, // VN1 Ingress (from CMS) Queue - Inserts -- NCS on BL
		UNC_M3_RXC_INSERTS_VN1__MASK__SKX_UNC_M3_RXC_INSERTS_VN1__BL_RSP = 0x800, // VN1 Ingress (from CMS) Queue - Inserts -- RSP on BL
		UNC_M3_RXC_INSERTS_VN1__MASK__SKX_UNC_M3_RXC_INSERTS_VN1__BL_WB = 0x1000, // VN1 Ingress (from CMS) Queue - Inserts -- WB on BL
		UNC_M3_RXC_OCCUPANCY_VN0 = 0x45, // Accumulates the occupancy of a given UPI VN1  Ingress queue in each cycle.  This tracks one of the three ring Ingress buffers.  This can be used with the UPI VN1  Ingress Not Empty event to calculate average occupancy or the UPI VN1  Ingress Allocations event in order to calculate average queuing latency.
		UNC_M3_RXC_OCCUPANCY_VN0__MASK__SKX_UNC_M3_RXC_OCCUPANCY_VN0__AD_REQ = 0x100, // VN0 Ingress (from CMS) Queue - Occupancy -- REQ on AD
		UNC_M3_RXC_OCCUPANCY_VN0__MASK__SKX_UNC_M3_RXC_OCCUPANCY_VN0__AD_RSP = 0x400, // VN0 Ingress (from CMS) Queue - Occupancy -- RSP on AD
		UNC_M3_RXC_OCCUPANCY_VN0__MASK__SKX_UNC_M3_RXC_OCCUPANCY_VN0__AD_SNP = 0x200, // VN0 Ingress (from CMS) Queue - Occupancy -- SNP on AD
		UNC_M3_RXC_OCCUPANCY_VN0__MASK__SKX_UNC_M3_RXC_OCCUPANCY_VN0__BL_NCB = 0x2000, // VN0 Ingress (from CMS) Queue - Occupancy -- NCB on BL
		UNC_M3_RXC_OCCUPANCY_VN0__MASK__SKX_UNC_M3_RXC_OCCUPANCY_VN0__BL_NCS = 0x4000, // VN0 Ingress (from CMS) Queue - Occupancy -- NCS on BL
		UNC_M3_RXC_OCCUPANCY_VN0__MASK__SKX_UNC_M3_RXC_OCCUPANCY_VN0__BL_RSP = 0x800, // VN0 Ingress (from CMS) Queue - Occupancy -- RSP on BL
		UNC_M3_RXC_OCCUPANCY_VN0__MASK__SKX_UNC_M3_RXC_OCCUPANCY_VN0__BL_WB = 0x1000, // VN0 Ingress (from CMS) Queue - Occupancy -- WB on BL
		UNC_M3_RXC_OCCUPANCY_VN1 = 0x46, // Accumulates the occupancy of a given UPI VN1  Ingress queue in each cycle.  This tracks one of the three ring Ingress buffers.  This can be used with the UPI VN1  Ingress Not Empty event to calculate average occupancy or the UPI VN1  Ingress Allocations event in order to calculate average queuing latency.
		UNC_M3_RXC_OCCUPANCY_VN1__MASK__SKX_UNC_M3_RXC_OCCUPANCY_VN1__AD_REQ = 0x100, // VN1 Ingress (from CMS) Queue - Occupancy -- REQ on AD
		UNC_M3_RXC_OCCUPANCY_VN1__MASK__SKX_UNC_M3_RXC_OCCUPANCY_VN1__AD_RSP = 0x400, // VN1 Ingress (from CMS) Queue - Occupancy -- RSP on AD
		UNC_M3_RXC_OCCUPANCY_VN1__MASK__SKX_UNC_M3_RXC_OCCUPANCY_VN1__AD_SNP = 0x200, // VN1 Ingress (from CMS) Queue - Occupancy -- SNP on AD
		UNC_M3_RXC_OCCUPANCY_VN1__MASK__SKX_UNC_M3_RXC_OCCUPANCY_VN1__BL_NCB = 0x2000, // VN1 Ingress (from CMS) Queue - Occupancy -- NCB on BL
		UNC_M3_RXC_OCCUPANCY_VN1__MASK__SKX_UNC_M3_RXC_OCCUPANCY_VN1__BL_NCS = 0x4000, // VN1 Ingress (from CMS) Queue - Occupancy -- NCS on BL
		UNC_M3_RXC_OCCUPANCY_VN1__MASK__SKX_UNC_M3_RXC_OCCUPANCY_VN1__BL_RSP = 0x800, // VN1 Ingress (from CMS) Queue - Occupancy -- RSP on BL
		UNC_M3_RXC_OCCUPANCY_VN1__MASK__SKX_UNC_M3_RXC_OCCUPANCY_VN1__BL_WB = 0x1000, // VN1 Ingress (from CMS) Queue - Occupancy -- WB on BL
		UNC_M3_RXC_PACKING_MISS_VN0 = 0x4e, // Count cases where Ingress has packets to send but did not have time to pack into flit before sending to Agent so slot was left NULL which could have been used.
		UNC_M3_RXC_PACKING_MISS_VN0__MASK__SKX_UNC_M3_RXC_PACKING_MISS_VN0__AD_REQ = 0x100, // VN0 message cant slot into flit -- REQ on AAD
		UNC_M3_RXC_PACKING_MISS_VN0__MASK__SKX_UNC_M3_RXC_PACKING_MISS_VN0__AD_RSP = 0x400, // VN0 message cant slot into flit -- RSP on AAD
		UNC_M3_RXC_PACKING_MISS_VN0__MASK__SKX_UNC_M3_RXC_PACKING_MISS_VN0__AD_SNP = 0x200, // VN0 message cant slot into flit -- SNP on AAD
		UNC_M3_RXC_PACKING_MISS_VN0__MASK__SKX_UNC_M3_RXC_PACKING_MISS_VN0__BL_NCB = 0x2000, // VN0 message cant slot into flit -- NCB on BBL
		UNC_M3_RXC_PACKING_MISS_VN0__MASK__SKX_UNC_M3_RXC_PACKING_MISS_VN0__BL_NCS = 0x4000, // VN0 message cant slot into flit -- NCS on BBL
		UNC_M3_RXC_PACKING_MISS_VN0__MASK__SKX_UNC_M3_RXC_PACKING_MISS_VN0__BL_RSP = 0x800, // VN0 message cant slot into flit -- RSP on BBL
		UNC_M3_RXC_PACKING_MISS_VN0__MASK__SKX_UNC_M3_RXC_PACKING_MISS_VN0__BL_WB = 0x1000, // VN0 message cant slot into flit -- WB on BBL
		UNC_M3_RXC_PACKING_MISS_VN1 = 0x4f, // Count cases where Ingress has packets to send but did not have time to pack into flit before sending to Agent so slot was left NULL which could have been used.
		UNC_M3_RXC_PACKING_MISS_VN1__MASK__SKX_UNC_M3_RXC_PACKING_MISS_VN1__AD_REQ = 0x100, // VN1 message cant slot into flit -- REQ on AAD
		UNC_M3_RXC_PACKING_MISS_VN1__MASK__SKX_UNC_M3_RXC_PACKING_MISS_VN1__AD_RSP = 0x400, // VN1 message cant slot into flit -- RSP on AAD
		UNC_M3_RXC_PACKING_MISS_VN1__MASK__SKX_UNC_M3_RXC_PACKING_MISS_VN1__AD_SNP = 0x200, // VN1 message cant slot into flit -- SNP on AAD
		UNC_M3_RXC_PACKING_MISS_VN1__MASK__SKX_UNC_M3_RXC_PACKING_MISS_VN1__BL_NCB = 0x2000, // VN1 message cant slot into flit -- NCB on BBL
		UNC_M3_RXC_PACKING_MISS_VN1__MASK__SKX_UNC_M3_RXC_PACKING_MISS_VN1__BL_NCS = 0x4000, // VN1 message cant slot into flit -- NCS on BBL
		UNC_M3_RXC_PACKING_MISS_VN1__MASK__SKX_UNC_M3_RXC_PACKING_MISS_VN1__BL_RSP = 0x800, // VN1 message cant slot into flit -- RSP on BBL
		UNC_M3_RXC_PACKING_MISS_VN1__MASK__SKX_UNC_M3_RXC_PACKING_MISS_VN1__BL_WB = 0x1000, // VN1 message cant slot into flit -- WB on BBL
		UNC_M3_RXC_SMI3_PFTCH = 0x62, // TBD
		UNC_M3_RXC_SMI3_PFTCH__MASK__SKX_UNC_M3_RXC_SMI3_PFTCH__ARB_LOST = 0x200, // SMI3 Prefetch Messages -- Lost Arbitration
		UNC_M3_RXC_SMI3_PFTCH__MASK__SKX_UNC_M3_RXC_SMI3_PFTCH__ARRIVED = 0x100, // SMI3 Prefetch Messages -- Arrived
		UNC_M3_RXC_SMI3_PFTCH__MASK__SKX_UNC_M3_RXC_SMI3_PFTCH__DROP_OLD = 0x800, // SMI3 Prefetch Messages -- Dropped - Old
		UNC_M3_RXC_SMI3_PFTCH__MASK__SKX_UNC_M3_RXC_SMI3_PFTCH__DROP_WRAP = 0x1000, // SMI3 Prefetch Messages -- Dropped - Wrap
		UNC_M3_RXC_SMI3_PFTCH__MASK__SKX_UNC_M3_RXC_SMI3_PFTCH__SLOTTED = 0x400, // SMI3 Prefetch Messages -- Slotted
		UNC_M3_RXC_VNA_CRD = 0x5b, // TBD
		UNC_M3_RXC_VNA_CRD__MASK__SKX_UNC_M3_RXC_VNA_CRD__ANY_IN_USE = 0x2000, // Remote VNA Credits -- Any In Use
		UNC_M3_RXC_VNA_CRD__MASK__SKX_UNC_M3_RXC_VNA_CRD__CORRECTED = 0x200, // Remote VNA Credits -- Corrected
		UNC_M3_RXC_VNA_CRD__MASK__SKX_UNC_M3_RXC_VNA_CRD__LT1 = 0x400, // Remote VNA Credits -- Level < 1
		UNC_M3_RXC_VNA_CRD__MASK__SKX_UNC_M3_RXC_VNA_CRD__LT4 = 0x800, // Remote VNA Credits -- Level < 4
		UNC_M3_RXC_VNA_CRD__MASK__SKX_UNC_M3_RXC_VNA_CRD__LT5 = 0x1000, // Remote VNA Credits -- Level < 5
		UNC_M3_RXC_VNA_CRD__MASK__SKX_UNC_M3_RXC_VNA_CRD__USED = 0x100, // Remote VNA Credits -- Used
		UNC_M3_RXR_BUSY_STARVED = 0xb4, // Counts cycles under injection starvation mode.  This starvation is triggered when the CMS Ingress cannot send a transaction onto the mesh for a long period of time.  In this case
		UNC_M3_RXR_BUSY_STARVED__MASK__SKX_UNC_M3_RXR_BUSY_STARVED__AD_BNC = 0x100, // Transgress Injection Starvation -- AD - Bounce
		UNC_M3_RXR_BUSY_STARVED__MASK__SKX_UNC_M3_RXR_BUSY_STARVED__AD_CRD = 0x1000, // Transgress Injection Starvation -- AD - Credit
		UNC_M3_RXR_BUSY_STARVED__MASK__SKX_UNC_M3_RXR_BUSY_STARVED__BL_BNC = 0x400, // Transgress Injection Starvation -- BL - Bounce
		UNC_M3_RXR_BUSY_STARVED__MASK__SKX_UNC_M3_RXR_BUSY_STARVED__BL_CRD = 0x4000, // Transgress Injection Starvation -- BL - Credit
		UNC_M3_RXR_BYPASS = 0xb2, // Number of packets bypassing the CMS Ingress
		UNC_M3_RXR_BYPASS__MASK__SKX_UNC_M3_RXR_BYPASS__AD_BNC = 0x100, // Transgress Ingress Bypass -- AD - Bounce
		UNC_M3_RXR_BYPASS__MASK__SKX_UNC_M3_RXR_BYPASS__AD_CRD = 0x1000, // Transgress Ingress Bypass -- AD - Credit
		UNC_M3_RXR_BYPASS__MASK__SKX_UNC_M3_RXR_BYPASS__AK_BNC = 0x200, // Transgress Ingress Bypass -- AK - Bounce
		UNC_M3_RXR_BYPASS__MASK__SKX_UNC_M3_RXR_BYPASS__BL_BNC = 0x400, // Transgress Ingress Bypass -- BL - Bounce
		UNC_M3_RXR_BYPASS__MASK__SKX_UNC_M3_RXR_BYPASS__BL_CRD = 0x4000, // Transgress Ingress Bypass -- BL - Credit
		UNC_M3_RXR_BYPASS__MASK__SKX_UNC_M3_RXR_BYPASS__IV_BNC = 0x800, // Transgress Ingress Bypass -- IV - Bounce
		UNC_M3_RXR_CRD_STARVED = 0xb3, // Counts cycles under injection starvation mode.  This starvation is triggered when the CMS Ingress cannot send a transaction onto the mesh for a long period of time.  In this case
		UNC_M3_RXR_CRD_STARVED__MASK__SKX_UNC_M3_RXR_CRD_STARVED__AD_BNC = 0x100, // Transgress Injection Starvation -- AD - Bounce
		UNC_M3_RXR_CRD_STARVED__MASK__SKX_UNC_M3_RXR_CRD_STARVED__AD_CRD = 0x1000, // Transgress Injection Starvation -- AD - Credit
		UNC_M3_RXR_CRD_STARVED__MASK__SKX_UNC_M3_RXR_CRD_STARVED__AK_BNC = 0x200, // Transgress Injection Starvation -- AK - Bounce
		UNC_M3_RXR_CRD_STARVED__MASK__SKX_UNC_M3_RXR_CRD_STARVED__BL_BNC = 0x400, // Transgress Injection Starvation -- BL - Bounce
		UNC_M3_RXR_CRD_STARVED__MASK__SKX_UNC_M3_RXR_CRD_STARVED__BL_CRD = 0x4000, // Transgress Injection Starvation -- BL - Credit
		UNC_M3_RXR_CRD_STARVED__MASK__SKX_UNC_M3_RXR_CRD_STARVED__IFV = 0x8000, // Transgress Injection Starvation -- IFV - Credit
		UNC_M3_RXR_CRD_STARVED__MASK__SKX_UNC_M3_RXR_CRD_STARVED__IV_BNC = 0x800, // Transgress Injection Starvation -- IV - Bounce
		UNC_M3_RXR_INSERTS = 0xb1, // Number of allocations into the CMS Ingress  The Ingress is used to queue up requests received from the mesh
		UNC_M3_RXR_INSERTS__MASK__SKX_UNC_M3_RXR_INSERTS__AD_BNC = 0x100, // Transgress Ingress Allocations -- AD - Bounce
		UNC_M3_RXR_INSERTS__MASK__SKX_UNC_M3_RXR_INSERTS__AD_CRD = 0x1000, // Transgress Ingress Allocations -- AD - Credit
		UNC_M3_RXR_INSERTS__MASK__SKX_UNC_M3_RXR_INSERTS__AK_BNC = 0x200, // Transgress Ingress Allocations -- AK - Bounce
		UNC_M3_RXR_INSERTS__MASK__SKX_UNC_M3_RXR_INSERTS__BL_BNC = 0x400, // Transgress Ingress Allocations -- BL - Bounce
		UNC_M3_RXR_INSERTS__MASK__SKX_UNC_M3_RXR_INSERTS__BL_CRD = 0x4000, // Transgress Ingress Allocations -- BL - Credit
		UNC_M3_RXR_INSERTS__MASK__SKX_UNC_M3_RXR_INSERTS__IV_BNC = 0x800, // Transgress Ingress Allocations -- IV - Bounce
		UNC_M3_RXR_OCCUPANCY = 0xb0, // Occupancy event for the Ingress buffers in the CMS  The Ingress is used to queue up requests received from the mesh
		UNC_M3_RXR_OCCUPANCY__MASK__SKX_UNC_M3_RXR_OCCUPANCY__AD_BNC = 0x100, // Transgress Ingress Occupancy -- AD - Bounce
		UNC_M3_RXR_OCCUPANCY__MASK__SKX_UNC_M3_RXR_OCCUPANCY__AD_CRD = 0x1000, // Transgress Ingress Occupancy -- AD - Credit
		UNC_M3_RXR_OCCUPANCY__MASK__SKX_UNC_M3_RXR_OCCUPANCY__AK_BNC = 0x200, // Transgress Ingress Occupancy -- AK - Bounce
		UNC_M3_RXR_OCCUPANCY__MASK__SKX_UNC_M3_RXR_OCCUPANCY__BL_BNC = 0x400, // Transgress Ingress Occupancy -- BL - Bounce
		UNC_M3_RXR_OCCUPANCY__MASK__SKX_UNC_M3_RXR_OCCUPANCY__BL_CRD = 0x4000, // Transgress Ingress Occupancy -- BL - Credit
		UNC_M3_RXR_OCCUPANCY__MASK__SKX_UNC_M3_RXR_OCCUPANCY__IV_BNC = 0x800, // Transgress Ingress Occupancy -- IV - Bounce
		UNC_M3_STALL_NO_TXR_HORZ_CRD_AD_AG0 = 0xd0, // Number of cycles the AD Agent 0 Egress Buffer is stalled waiting for a TGR credit to become available
		UNC_M3_STALL_NO_TXR_HORZ_CRD_AD_AG0__MASK__SKX_UNC_M3_STALL_NO_TXR_HORZ_CRD_AD_AG0__TGR0 = 0x100, // Stall on No AD Agent0 Transgress Credits -- For Transgress 0
		UNC_M3_STALL_NO_TXR_HORZ_CRD_AD_AG0__MASK__SKX_UNC_M3_STALL_NO_TXR_HORZ_CRD_AD_AG0__TGR1 = 0x200, // Stall on No AD Agent0 Transgress Credits -- For Transgress 1
		UNC_M3_STALL_NO_TXR_HORZ_CRD_AD_AG0__MASK__SKX_UNC_M3_STALL_NO_TXR_HORZ_CRD_AD_AG0__TGR2 = 0x400, // Stall on No AD Agent0 Transgress Credits -- For Transgress 2
		UNC_M3_STALL_NO_TXR_HORZ_CRD_AD_AG0__MASK__SKX_UNC_M3_STALL_NO_TXR_HORZ_CRD_AD_AG0__TGR3 = 0x800, // Stall on No AD Agent0 Transgress Credits -- For Transgress 3
		UNC_M3_STALL_NO_TXR_HORZ_CRD_AD_AG0__MASK__SKX_UNC_M3_STALL_NO_TXR_HORZ_CRD_AD_AG0__TGR4 = 0x1000, // Stall on No AD Agent0 Transgress Credits -- For Transgress 4
		UNC_M3_STALL_NO_TXR_HORZ_CRD_AD_AG0__MASK__SKX_UNC_M3_STALL_NO_TXR_HORZ_CRD_AD_AG0__TGR5 = 0x2000, // Stall on No AD Agent0 Transgress Credits -- For Transgress 5
		UNC_M3_STALL_NO_TXR_HORZ_CRD_AD_AG1 = 0xd2, // Number of cycles the AD Agent 1 Egress Buffer is stalled waiting for a TGR credit to become available
		UNC_M3_STALL_NO_TXR_HORZ_CRD_AD_AG1__MASK__SKX_UNC_M3_STALL_NO_TXR_HORZ_CRD_AD_AG1__TGR0 = 0x100, // Stall on No AD Agent1 Transgress Credits -- For Transgress 0
		UNC_M3_STALL_NO_TXR_HORZ_CRD_AD_AG1__MASK__SKX_UNC_M3_STALL_NO_TXR_HORZ_CRD_AD_AG1__TGR1 = 0x200, // Stall on No AD Agent1 Transgress Credits -- For Transgress 1
		UNC_M3_STALL_NO_TXR_HORZ_CRD_AD_AG1__MASK__SKX_UNC_M3_STALL_NO_TXR_HORZ_CRD_AD_AG1__TGR2 = 0x400, // Stall on No AD Agent1 Transgress Credits -- For Transgress 2
		UNC_M3_STALL_NO_TXR_HORZ_CRD_AD_AG1__MASK__SKX_UNC_M3_STALL_NO_TXR_HORZ_CRD_AD_AG1__TGR3 = 0x800, // Stall on No AD Agent1 Transgress Credits -- For Transgress 3
		UNC_M3_STALL_NO_TXR_HORZ_CRD_AD_AG1__MASK__SKX_UNC_M3_STALL_NO_TXR_HORZ_CRD_AD_AG1__TGR4 = 0x1000, // Stall on No AD Agent1 Transgress Credits -- For Transgress 4
		UNC_M3_STALL_NO_TXR_HORZ_CRD_AD_AG1__MASK__SKX_UNC_M3_STALL_NO_TXR_HORZ_CRD_AD_AG1__TGR5 = 0x2000, // Stall on No AD Agent1 Transgress Credits -- For Transgress 5
		UNC_M3_STALL_NO_TXR_HORZ_CRD_BL_AG0 = 0xd4, // Number of cycles the BL Agent 0 Egress Buffer is stalled waiting for a TGR credit to become available
		UNC_M3_STALL_NO_TXR_HORZ_CRD_BL_AG0__MASK__SKX_UNC_M3_STALL_NO_TXR_HORZ_CRD_BL_AG0__TGR0 = 0x100, // Stall on No BL Agent0 Transgress Credits -- For Transgress 0
		UNC_M3_STALL_NO_TXR_HORZ_CRD_BL_AG0__MASK__SKX_UNC_M3_STALL_NO_TXR_HORZ_CRD_BL_AG0__TGR1 = 0x200, // Stall on No BL Agent0 Transgress Credits -- For Transgress 1
		UNC_M3_STALL_NO_TXR_HORZ_CRD_BL_AG0__MASK__SKX_UNC_M3_STALL_NO_TXR_HORZ_CRD_BL_AG0__TGR2 = 0x400, // Stall on No BL Agent0 Transgress Credits -- For Transgress 2
		UNC_M3_STALL_NO_TXR_HORZ_CRD_BL_AG0__MASK__SKX_UNC_M3_STALL_NO_TXR_HORZ_CRD_BL_AG0__TGR3 = 0x800, // Stall on No BL Agent0 Transgress Credits -- For Transgress 3
		UNC_M3_STALL_NO_TXR_HORZ_CRD_BL_AG0__MASK__SKX_UNC_M3_STALL_NO_TXR_HORZ_CRD_BL_AG0__TGR4 = 0x1000, // Stall on No BL Agent0 Transgress Credits -- For Transgress 4
		UNC_M3_STALL_NO_TXR_HORZ_CRD_BL_AG0__MASK__SKX_UNC_M3_STALL_NO_TXR_HORZ_CRD_BL_AG0__TGR5 = 0x2000, // Stall on No BL Agent0 Transgress Credits -- For Transgress 5
		UNC_M3_STALL_NO_TXR_HORZ_CRD_BL_AG1 = 0xd6, // Number of cycles the BL Agent 1 Egress Buffer is stalled waiting for a TGR credit to become available
		UNC_M3_STALL_NO_TXR_HORZ_CRD_BL_AG1__MASK__SKX_UNC_M3_STALL_NO_TXR_HORZ_CRD_BL_AG1__TGR0 = 0x100, // Stall on No BL Agent1 Transgress Credits -- For Transgress 0
		UNC_M3_STALL_NO_TXR_HORZ_CRD_BL_AG1__MASK__SKX_UNC_M3_STALL_NO_TXR_HORZ_CRD_BL_AG1__TGR1 = 0x200, // Stall on No BL Agent1 Transgress Credits -- For Transgress 1
		UNC_M3_STALL_NO_TXR_HORZ_CRD_BL_AG1__MASK__SKX_UNC_M3_STALL_NO_TXR_HORZ_CRD_BL_AG1__TGR2 = 0x400, // Stall on No BL Agent1 Transgress Credits -- For Transgress 2
		UNC_M3_STALL_NO_TXR_HORZ_CRD_BL_AG1__MASK__SKX_UNC_M3_STALL_NO_TXR_HORZ_CRD_BL_AG1__TGR3 = 0x800, // Stall on No BL Agent1 Transgress Credits -- For Transgress 3
		UNC_M3_STALL_NO_TXR_HORZ_CRD_BL_AG1__MASK__SKX_UNC_M3_STALL_NO_TXR_HORZ_CRD_BL_AG1__TGR4 = 0x1000, // Stall on No BL Agent1 Transgress Credits -- For Transgress 4
		UNC_M3_STALL_NO_TXR_HORZ_CRD_BL_AG1__MASK__SKX_UNC_M3_STALL_NO_TXR_HORZ_CRD_BL_AG1__TGR5 = 0x2000, // Stall on No BL Agent1 Transgress Credits -- For Transgress 5
		UNC_M3_TXC_AD_ARB_FAIL = 0x30, // AD arb but no win; arb request asserted but not won
		UNC_M3_TXC_AD_ARB_FAIL__MASK__SKX_UNC_M3_TXC_AD_ARB_FAIL__VN0_REQ = 0x100, // Failed ARB for AD -- VN0 REQ Messages
		UNC_M3_TXC_AD_ARB_FAIL__MASK__SKX_UNC_M3_TXC_AD_ARB_FAIL__VN0_RSP = 0x400, // Failed ARB for AD -- VN0 RSP Messages
		UNC_M3_TXC_AD_ARB_FAIL__MASK__SKX_UNC_M3_TXC_AD_ARB_FAIL__VN0_SNP = 0x200, // Failed ARB for AD -- VN0 SNP Messages
		UNC_M3_TXC_AD_ARB_FAIL__MASK__SKX_UNC_M3_TXC_AD_ARB_FAIL__VN0_WB = 0x800, // Failed ARB for AD -- VN0 WB Messages
		UNC_M3_TXC_AD_ARB_FAIL__MASK__SKX_UNC_M3_TXC_AD_ARB_FAIL__VN1_REQ = 0x1000, // Failed ARB for AD -- VN1 REQ Messages
		UNC_M3_TXC_AD_ARB_FAIL__MASK__SKX_UNC_M3_TXC_AD_ARB_FAIL__VN1_RSP = 0x4000, // Failed ARB for AD -- VN1 RSP Messages
		UNC_M3_TXC_AD_ARB_FAIL__MASK__SKX_UNC_M3_TXC_AD_ARB_FAIL__VN1_SNP = 0x2000, // Failed ARB for AD -- VN1 SNP Messages
		UNC_M3_TXC_AD_ARB_FAIL__MASK__SKX_UNC_M3_TXC_AD_ARB_FAIL__VN1_WB = 0x8000, // Failed ARB for AD -- VN1 WB Messages
		UNC_M3_TXC_AD_FLQ_BYPASS = 0x2c, // Counts cases when the AD flowQ is bypassed (S0
		UNC_M3_TXC_AD_FLQ_BYPASS__MASK__SKX_UNC_M3_TXC_AD_FLQ_BYPASS__AD_SLOT0 = 0x100, // AD FlowQ Bypass --
		UNC_M3_TXC_AD_FLQ_BYPASS__MASK__SKX_UNC_M3_TXC_AD_FLQ_BYPASS__AD_SLOT1 = 0x200, // AD FlowQ Bypass --
		UNC_M3_TXC_AD_FLQ_BYPASS__MASK__SKX_UNC_M3_TXC_AD_FLQ_BYPASS__AD_SLOT2 = 0x400, // AD FlowQ Bypass --
		UNC_M3_TXC_AD_FLQ_BYPASS__MASK__SKX_UNC_M3_TXC_AD_FLQ_BYPASS__BL_EARLY_RSP = 0x800, // AD FlowQ Bypass --
		UNC_M3_TXC_AD_FLQ_CYCLES_NE = 0x27, // Number of cycles the AD Egress queue is Not Empty
		UNC_M3_TXC_AD_FLQ_CYCLES_NE__MASK__SKX_UNC_M3_TXC_AD_FLQ_CYCLES_NE__VN0_REQ = 0x100, // AD Flow Q Not Empty -- VN0 REQ Messages
		UNC_M3_TXC_AD_FLQ_CYCLES_NE__MASK__SKX_UNC_M3_TXC_AD_FLQ_CYCLES_NE__VN0_RSP = 0x400, // AD Flow Q Not Empty -- VN0 RSP Messages
		UNC_M3_TXC_AD_FLQ_CYCLES_NE__MASK__SKX_UNC_M3_TXC_AD_FLQ_CYCLES_NE__VN0_SNP = 0x200, // AD Flow Q Not Empty -- VN0 SNP Messages
		UNC_M3_TXC_AD_FLQ_CYCLES_NE__MASK__SKX_UNC_M3_TXC_AD_FLQ_CYCLES_NE__VN0_WB = 0x800, // AD Flow Q Not Empty -- VN0 WB Messages
		UNC_M3_TXC_AD_FLQ_CYCLES_NE__MASK__SKX_UNC_M3_TXC_AD_FLQ_CYCLES_NE__VN1_REQ = 0x1000, // AD Flow Q Not Empty -- VN1 REQ Messages
		UNC_M3_TXC_AD_FLQ_CYCLES_NE__MASK__SKX_UNC_M3_TXC_AD_FLQ_CYCLES_NE__VN1_RSP = 0x4000, // AD Flow Q Not Empty -- VN1 RSP Messages
		UNC_M3_TXC_AD_FLQ_CYCLES_NE__MASK__SKX_UNC_M3_TXC_AD_FLQ_CYCLES_NE__VN1_SNP = 0x2000, // AD Flow Q Not Empty -- VN1 SNP Messages
		UNC_M3_TXC_AD_FLQ_CYCLES_NE__MASK__SKX_UNC_M3_TXC_AD_FLQ_CYCLES_NE__VN1_WB = 0x8000, // AD Flow Q Not Empty -- VN1 WB Messages
		UNC_M3_TXC_AD_FLQ_INSERTS = 0x2d, // Counts the number of allocations into the QPI FlowQ. This can be used in conjunction with the QPI FlowQ Occupancy Accumulator event in order to calculate average queue latency.  Only a single FlowQ queue can be tracked at any given time.  It is not possible to filter based on direction or polarity.
		UNC_M3_TXC_AD_FLQ_INSERTS__MASK__SKX_UNC_M3_TXC_AD_FLQ_INSERTS__VN0_REQ = 0x100, // AD Flow Q Inserts -- VN0 REQ Messages
		UNC_M3_TXC_AD_FLQ_INSERTS__MASK__SKX_UNC_M3_TXC_AD_FLQ_INSERTS__VN0_RSP = 0x400, // AD Flow Q Inserts -- VN0 RSP Messages
		UNC_M3_TXC_AD_FLQ_INSERTS__MASK__SKX_UNC_M3_TXC_AD_FLQ_INSERTS__VN0_SNP = 0x200, // AD Flow Q Inserts -- VN0 SNP Messages
		UNC_M3_TXC_AD_FLQ_INSERTS__MASK__SKX_UNC_M3_TXC_AD_FLQ_INSERTS__VN0_WB = 0x800, // AD Flow Q Inserts -- VN0 WB Messages
		UNC_M3_TXC_AD_FLQ_INSERTS__MASK__SKX_UNC_M3_TXC_AD_FLQ_INSERTS__VN1_REQ = 0x1000, // AD Flow Q Inserts -- VN1 REQ Messages
		UNC_M3_TXC_AD_FLQ_INSERTS__MASK__SKX_UNC_M3_TXC_AD_FLQ_INSERTS__VN1_RSP = 0x4000, // AD Flow Q Inserts -- VN1 RSP Messages
		UNC_M3_TXC_AD_FLQ_INSERTS__MASK__SKX_UNC_M3_TXC_AD_FLQ_INSERTS__VN1_SNP = 0x2000, // AD Flow Q Inserts -- VN1 SNP Messages
		UNC_M3_TXC_AD_FLQ_OCCUPANCY = 0x1c, // TBD
		UNC_M3_TXC_AD_FLQ_OCCUPANCY__MASK__SKX_UNC_M3_TXC_AD_FLQ_OCCUPANCY__VN0_REQ = 0x100, // AD Flow Q Occupancy -- VN0 REQ Messages
		UNC_M3_TXC_AD_FLQ_OCCUPANCY__MASK__SKX_UNC_M3_TXC_AD_FLQ_OCCUPANCY__VN0_RSP = 0x400, // AD Flow Q Occupancy -- VN0 RSP Messages
		UNC_M3_TXC_AD_FLQ_OCCUPANCY__MASK__SKX_UNC_M3_TXC_AD_FLQ_OCCUPANCY__VN0_SNP = 0x200, // AD Flow Q Occupancy -- VN0 SNP Messages
		UNC_M3_TXC_AD_FLQ_OCCUPANCY__MASK__SKX_UNC_M3_TXC_AD_FLQ_OCCUPANCY__VN0_WB = 0x800, // AD Flow Q Occupancy -- VN0 WB Messages
		UNC_M3_TXC_AD_FLQ_OCCUPANCY__MASK__SKX_UNC_M3_TXC_AD_FLQ_OCCUPANCY__VN1_REQ = 0x1000, // AD Flow Q Occupancy -- VN1 REQ Messages
		UNC_M3_TXC_AD_FLQ_OCCUPANCY__MASK__SKX_UNC_M3_TXC_AD_FLQ_OCCUPANCY__VN1_RSP = 0x4000, // AD Flow Q Occupancy -- VN1 RSP Messages
		UNC_M3_TXC_AD_FLQ_OCCUPANCY__MASK__SKX_UNC_M3_TXC_AD_FLQ_OCCUPANCY__VN1_SNP = 0x2000, // AD Flow Q Occupancy -- VN1 SNP Messages
		UNC_M3_TXC_AD_SNPF_GRP1_VN1 = 0x3c, // Number of snpfanout targets and non-idle cycles can be used to calculate average snpfanout latency
		UNC_M3_TXC_AD_SNPF_GRP1_VN1__MASK__SKX_UNC_M3_TXC_AD_SNPF_GRP1_VN1__VN0_CHA = 0x400, // Number of Snoop Targets -- CHA on VN0
		UNC_M3_TXC_AD_SNPF_GRP1_VN1__MASK__SKX_UNC_M3_TXC_AD_SNPF_GRP1_VN1__VN0_NON_IDLE = 0x4000, // Number of Snoop Targets -- Non Idle cycles on VN0
		UNC_M3_TXC_AD_SNPF_GRP1_VN1__MASK__SKX_UNC_M3_TXC_AD_SNPF_GRP1_VN1__VN0_PEER_UPI0 = 0x100, // Number of Snoop Targets -- Peer UPI0 on VN0
		UNC_M3_TXC_AD_SNPF_GRP1_VN1__MASK__SKX_UNC_M3_TXC_AD_SNPF_GRP1_VN1__VN0_PEER_UPI1 = 0x200, // Number of Snoop Targets -- Peer UPI1 on VN0
		UNC_M3_TXC_AD_SNPF_GRP1_VN1__MASK__SKX_UNC_M3_TXC_AD_SNPF_GRP1_VN1__VN1_CHA = 0x2000, // Number of Snoop Targets -- CHA on VN1
		UNC_M3_TXC_AD_SNPF_GRP1_VN1__MASK__SKX_UNC_M3_TXC_AD_SNPF_GRP1_VN1__VN1_NON_IDLE = 0x8000, // Number of Snoop Targets -- Non Idle cycles on VN1
		UNC_M3_TXC_AD_SNPF_GRP1_VN1__MASK__SKX_UNC_M3_TXC_AD_SNPF_GRP1_VN1__VN1_PEER_UPI0 = 0x800, // Number of Snoop Targets -- Peer UPI0 on VN1
		UNC_M3_TXC_AD_SNPF_GRP1_VN1__MASK__SKX_UNC_M3_TXC_AD_SNPF_GRP1_VN1__VN1_PEER_UPI1 = 0x1000, // Number of Snoop Targets -- Peer UPI1 on VN1
		UNC_M3_TXC_AD_SNPF_GRP2_VN1 = 0x3d, // Outcome of SnpF pending arbitration
		UNC_M3_TXC_AD_SNPF_GRP2_VN1__MASK__SKX_UNC_M3_TXC_AD_SNPF_GRP2_VN1__VN0_SNPFP_NONSNP = 0x100, // Snoop Arbitration -- FlowQ Won
		UNC_M3_TXC_AD_SNPF_GRP2_VN1__MASK__SKX_UNC_M3_TXC_AD_SNPF_GRP2_VN1__VN0_SNPFP_VN2SNP = 0x400, // Snoop Arbitration -- FlowQ SnpF Won
		UNC_M3_TXC_AD_SNPF_GRP2_VN1__MASK__SKX_UNC_M3_TXC_AD_SNPF_GRP2_VN1__VN1_SNPFP_NONSNP = 0x200, // Snoop Arbitration -- FlowQ Won
		UNC_M3_TXC_AD_SNPF_GRP2_VN1__MASK__SKX_UNC_M3_TXC_AD_SNPF_GRP2_VN1__VN1_SNPFP_VN0SNP = 0x800, // Snoop Arbitration -- FlowQ SnpF Won
		UNC_M3_TXC_AD_SPEC_ARB_CRD_AVAIL = 0x34, // AD speculative arb request with prior cycle credit check complete and credit avail
		UNC_M3_TXC_AD_SPEC_ARB_CRD_AVAIL__MASK__SKX_UNC_M3_TXC_AD_SPEC_ARB_CRD_AVAIL__VN0_REQ = 0x100, // Speculative ARB for AD  -  Credit Available -- VN0 REQ Messages
		UNC_M3_TXC_AD_SPEC_ARB_CRD_AVAIL__MASK__SKX_UNC_M3_TXC_AD_SPEC_ARB_CRD_AVAIL__VN0_SNP = 0x200, // Speculative ARB for AD  -  Credit Available -- VN0 SNP Messages
		UNC_M3_TXC_AD_SPEC_ARB_CRD_AVAIL__MASK__SKX_UNC_M3_TXC_AD_SPEC_ARB_CRD_AVAIL__VN0_WB = 0x800, // Speculative ARB for AD  -  Credit Available -- VN0 WB Messages
		UNC_M3_TXC_AD_SPEC_ARB_CRD_AVAIL__MASK__SKX_UNC_M3_TXC_AD_SPEC_ARB_CRD_AVAIL__VN1_REQ = 0x1000, // Speculative ARB for AD  -  Credit Available -- VN1 REQ Messages
		UNC_M3_TXC_AD_SPEC_ARB_CRD_AVAIL__MASK__SKX_UNC_M3_TXC_AD_SPEC_ARB_CRD_AVAIL__VN1_SNP = 0x2000, // Speculative ARB for AD  -  Credit Available -- VN1 SNP Messages
		UNC_M3_TXC_AD_SPEC_ARB_CRD_AVAIL__MASK__SKX_UNC_M3_TXC_AD_SPEC_ARB_CRD_AVAIL__VN1_WB = 0x8000, // Speculative ARB for AD  -  Credit Available -- VN1 WB Messages
		UNC_M3_TXC_AD_SPEC_ARB_NEW_MSG = 0x33, // AD speculative arb request due to new message arriving on a specific channel (MC/VN)
		UNC_M3_TXC_AD_SPEC_ARB_NEW_MSG__MASK__SKX_UNC_M3_TXC_AD_SPEC_ARB_NEW_MSG__VN0_REQ = 0x100, // Speculative ARB for AD  - New Message -- VN0 REQ Messages
		UNC_M3_TXC_AD_SPEC_ARB_NEW_MSG__MASK__SKX_UNC_M3_TXC_AD_SPEC_ARB_NEW_MSG__VN0_SNP = 0x200, // Speculative ARB for AD  - New Message -- VN0 SNP Messages
		UNC_M3_TXC_AD_SPEC_ARB_NEW_MSG__MASK__SKX_UNC_M3_TXC_AD_SPEC_ARB_NEW_MSG__VN0_WB = 0x800, // Speculative ARB for AD  - New Message -- VN0 WB Messages
		UNC_M3_TXC_AD_SPEC_ARB_NEW_MSG__MASK__SKX_UNC_M3_TXC_AD_SPEC_ARB_NEW_MSG__VN1_REQ = 0x1000, // Speculative ARB for AD  - New Message -- VN1 REQ Messages
		UNC_M3_TXC_AD_SPEC_ARB_NEW_MSG__MASK__SKX_UNC_M3_TXC_AD_SPEC_ARB_NEW_MSG__VN1_SNP = 0x2000, // Speculative ARB for AD  - New Message -- VN1 SNP Messages
		UNC_M3_TXC_AD_SPEC_ARB_NEW_MSG__MASK__SKX_UNC_M3_TXC_AD_SPEC_ARB_NEW_MSG__VN1_WB = 0x8000, // Speculative ARB for AD  - New Message -- VN1 WB Messages
		UNC_M3_TXC_AD_SPEC_ARB_NO_OTHER_PEND = 0x32, // AD speculative arb request asserted due to no other channel being active (have a valid entry but don't have credits to send)
		UNC_M3_TXC_AD_SPEC_ARB_NO_OTHER_PEND__MASK__SKX_UNC_M3_TXC_AD_SPEC_ARB_NO_OTHER_PEND__VN0_REQ = 0x100, // Speculative ARB for AD  - No Credit -- VN0 REQ Messages
		UNC_M3_TXC_AD_SPEC_ARB_NO_OTHER_PEND__MASK__SKX_UNC_M3_TXC_AD_SPEC_ARB_NO_OTHER_PEND__VN0_RSP = 0x400, // Speculative ARB for AD  - No Credit -- VN0 RSP Messages
		UNC_M3_TXC_AD_SPEC_ARB_NO_OTHER_PEND__MASK__SKX_UNC_M3_TXC_AD_SPEC_ARB_NO_OTHER_PEND__VN0_SNP = 0x200, // Speculative ARB for AD  - No Credit -- VN0 SNP Messages
		UNC_M3_TXC_AD_SPEC_ARB_NO_OTHER_PEND__MASK__SKX_UNC_M3_TXC_AD_SPEC_ARB_NO_OTHER_PEND__VN0_WB = 0x800, // Speculative ARB for AD  - No Credit -- VN0 WB Messages
		UNC_M3_TXC_AD_SPEC_ARB_NO_OTHER_PEND__MASK__SKX_UNC_M3_TXC_AD_SPEC_ARB_NO_OTHER_PEND__VN1_REQ = 0x1000, // Speculative ARB for AD  - No Credit -- VN1 REQ Messages
		UNC_M3_TXC_AD_SPEC_ARB_NO_OTHER_PEND__MASK__SKX_UNC_M3_TXC_AD_SPEC_ARB_NO_OTHER_PEND__VN1_RSP = 0x4000, // Speculative ARB for AD  - No Credit -- VN1 RSP Messages
		UNC_M3_TXC_AD_SPEC_ARB_NO_OTHER_PEND__MASK__SKX_UNC_M3_TXC_AD_SPEC_ARB_NO_OTHER_PEND__VN1_SNP = 0x2000, // Speculative ARB for AD  - No Credit -- VN1 SNP Messages
		UNC_M3_TXC_AD_SPEC_ARB_NO_OTHER_PEND__MASK__SKX_UNC_M3_TXC_AD_SPEC_ARB_NO_OTHER_PEND__VN1_WB = 0x8000, // Speculative ARB for AD  - No Credit -- VN1 WB Messages
		UNC_M3_TXC_AK_FLQ_INSERTS = 0x2f, // TBD
		UNC_M3_TXC_AK_FLQ_OCCUPANCY = 0x1e, // TBD
		UNC_M3_TXC_BL_ARB_FAIL = 0x35, // BL arb but no win; arb request asserted but not won
		UNC_M3_TXC_BL_ARB_FAIL__MASK__SKX_UNC_M3_TXC_BL_ARB_FAIL__VN0_NCB = 0x400, // Failed ARB for BL -- VN0 NCB Messages
		UNC_M3_TXC_BL_ARB_FAIL__MASK__SKX_UNC_M3_TXC_BL_ARB_FAIL__VN0_NCS = 0x800, // Failed ARB for BL -- VN0 NCS Messages
		UNC_M3_TXC_BL_ARB_FAIL__MASK__SKX_UNC_M3_TXC_BL_ARB_FAIL__VN0_RSP = 0x100, // Failed ARB for BL -- VN0 RSP Messages
		UNC_M3_TXC_BL_ARB_FAIL__MASK__SKX_UNC_M3_TXC_BL_ARB_FAIL__VN0_WB = 0x200, // Failed ARB for BL -- VN0 WB Messages
		UNC_M3_TXC_BL_ARB_FAIL__MASK__SKX_UNC_M3_TXC_BL_ARB_FAIL__VN1_NCB = 0x4000, // Failed ARB for BL -- VN1 NCS Messages
		UNC_M3_TXC_BL_ARB_FAIL__MASK__SKX_UNC_M3_TXC_BL_ARB_FAIL__VN1_NCS = 0x8000, // Failed ARB for BL -- VN1 NCB Messages
		UNC_M3_TXC_BL_ARB_FAIL__MASK__SKX_UNC_M3_TXC_BL_ARB_FAIL__VN1_RSP = 0x1000, // Failed ARB for BL -- VN1 RSP Messages
		UNC_M3_TXC_BL_ARB_FAIL__MASK__SKX_UNC_M3_TXC_BL_ARB_FAIL__VN1_WB = 0x2000, // Failed ARB for BL -- VN1 WB Messages
		UNC_M3_TXC_BL_FLQ_CYCLES_NE = 0x28, // Number of cycles the BL Egress queue is Not Empty
		UNC_M3_TXC_BL_FLQ_CYCLES_NE__MASK__SKX_UNC_M3_TXC_BL_FLQ_CYCLES_NE__VN0_REQ = 0x100, // BL Flow Q Not Empty -- VN0 REQ Messages
		UNC_M3_TXC_BL_FLQ_CYCLES_NE__MASK__SKX_UNC_M3_TXC_BL_FLQ_CYCLES_NE__VN0_RSP = 0x400, // BL Flow Q Not Empty -- VN0 RSP Messages
		UNC_M3_TXC_BL_FLQ_CYCLES_NE__MASK__SKX_UNC_M3_TXC_BL_FLQ_CYCLES_NE__VN0_SNP = 0x200, // BL Flow Q Not Empty -- VN0 SNP Messages
		UNC_M3_TXC_BL_FLQ_CYCLES_NE__MASK__SKX_UNC_M3_TXC_BL_FLQ_CYCLES_NE__VN0_WB = 0x800, // BL Flow Q Not Empty -- VN0 WB Messages
		UNC_M3_TXC_BL_FLQ_CYCLES_NE__MASK__SKX_UNC_M3_TXC_BL_FLQ_CYCLES_NE__VN1_REQ = 0x1000, // BL Flow Q Not Empty -- VN1 REQ Messages
		UNC_M3_TXC_BL_FLQ_CYCLES_NE__MASK__SKX_UNC_M3_TXC_BL_FLQ_CYCLES_NE__VN1_RSP = 0x4000, // BL Flow Q Not Empty -- VN1 RSP Messages
		UNC_M3_TXC_BL_FLQ_CYCLES_NE__MASK__SKX_UNC_M3_TXC_BL_FLQ_CYCLES_NE__VN1_SNP = 0x2000, // BL Flow Q Not Empty -- VN1 SNP Messages
		UNC_M3_TXC_BL_FLQ_CYCLES_NE__MASK__SKX_UNC_M3_TXC_BL_FLQ_CYCLES_NE__VN1_WB = 0x8000, // BL Flow Q Not Empty -- VN1 WB Messages
		UNC_M3_TXC_BL_FLQ_INSERTS = 0x2e, // Counts the number of allocations into the QPI FlowQ. This can be used in conjunction with the QPI FlowQ Occupancy Accumulator event in order to calculate average queue latency.  Only a single FlowQ queue can be tracked at any given time.  It is not possible to filter based on direction or polarity.
		UNC_M3_TXC_BL_FLQ_INSERTS__MASK__SKX_UNC_M3_TXC_BL_FLQ_INSERTS__VN0_NCB = 0x100, // BL Flow Q Inserts -- VN0 RSP Messages
		UNC_M3_TXC_BL_FLQ_INSERTS__MASK__SKX_UNC_M3_TXC_BL_FLQ_INSERTS__VN0_NCS = 0x200, // BL Flow Q Inserts -- VN0 WB Messages
		UNC_M3_TXC_BL_FLQ_INSERTS__MASK__SKX_UNC_M3_TXC_BL_FLQ_INSERTS__VN0_RSP = 0x800, // BL Flow Q Inserts -- VN0 NCS Messages
		UNC_M3_TXC_BL_FLQ_INSERTS__MASK__SKX_UNC_M3_TXC_BL_FLQ_INSERTS__VN0_WB = 0x400, // BL Flow Q Inserts -- VN0 NCB Messages
		UNC_M3_TXC_BL_FLQ_INSERTS__MASK__SKX_UNC_M3_TXC_BL_FLQ_INSERTS__VN1_NCB = 0x1000, // BL Flow Q Inserts -- VN1 RSP Messages
		UNC_M3_TXC_BL_FLQ_INSERTS__MASK__SKX_UNC_M3_TXC_BL_FLQ_INSERTS__VN1_NCS = 0x2000, // BL Flow Q Inserts -- VN1 WB Messages
		UNC_M3_TXC_BL_FLQ_INSERTS__MASK__SKX_UNC_M3_TXC_BL_FLQ_INSERTS__VN1_RSP = 0x8000, // BL Flow Q Inserts -- VN1_NCB Messages
		UNC_M3_TXC_BL_FLQ_INSERTS__MASK__SKX_UNC_M3_TXC_BL_FLQ_INSERTS__VN1_WB = 0x4000, // BL Flow Q Inserts -- VN1_NCS Messages
		UNC_M3_TXC_BL_FLQ_OCCUPANCY = 0x1d, // TBD
		UNC_M3_TXC_BL_FLQ_OCCUPANCY__MASK__SKX_UNC_M3_TXC_BL_FLQ_OCCUPANCY__VN0_NCB = 0x400, // BL Flow Q Occupancy -- VN0 NCB Messages
		UNC_M3_TXC_BL_FLQ_OCCUPANCY__MASK__SKX_UNC_M3_TXC_BL_FLQ_OCCUPANCY__VN0_NCS = 0x800, // BL Flow Q Occupancy -- VN0 NCS Messages
		UNC_M3_TXC_BL_FLQ_OCCUPANCY__MASK__SKX_UNC_M3_TXC_BL_FLQ_OCCUPANCY__VN0_RSP = 0x100, // BL Flow Q Occupancy -- VN0 RSP Messages
		UNC_M3_TXC_BL_FLQ_OCCUPANCY__MASK__SKX_UNC_M3_TXC_BL_FLQ_OCCUPANCY__VN0_WB = 0x200, // BL Flow Q Occupancy -- VN0 WB Messages
		UNC_M3_TXC_BL_FLQ_OCCUPANCY__MASK__SKX_UNC_M3_TXC_BL_FLQ_OCCUPANCY__VN1_NCB = 0x4000, // BL Flow Q Occupancy -- VN1_NCS Messages
		UNC_M3_TXC_BL_FLQ_OCCUPANCY__MASK__SKX_UNC_M3_TXC_BL_FLQ_OCCUPANCY__VN1_NCS = 0x8000, // BL Flow Q Occupancy -- VN1_NCB Messages
		UNC_M3_TXC_BL_FLQ_OCCUPANCY__MASK__SKX_UNC_M3_TXC_BL_FLQ_OCCUPANCY__VN1_RSP = 0x1000, // BL Flow Q Occupancy -- VN1 RSP Messages
		UNC_M3_TXC_BL_FLQ_OCCUPANCY__MASK__SKX_UNC_M3_TXC_BL_FLQ_OCCUPANCY__VN1_WB = 0x2000, // BL Flow Q Occupancy -- VN1 WB Messages
		UNC_M3_TXC_BL_SPEC_ARB_NEW_MSG = 0x38, // BL speculative arb request due to new message arriving on a specific channel (MC/VN)
		UNC_M3_TXC_BL_SPEC_ARB_NEW_MSG__MASK__SKX_UNC_M3_TXC_BL_SPEC_ARB_NEW_MSG__VN0_NCB = 0x200, // Speculative ARB for BL  - New Message -- VN0 WB Messages
		UNC_M3_TXC_BL_SPEC_ARB_NEW_MSG__MASK__SKX_UNC_M3_TXC_BL_SPEC_ARB_NEW_MSG__VN0_NCS = 0x800, // Speculative ARB for BL  - New Message -- VN0 NCS Messages
		UNC_M3_TXC_BL_SPEC_ARB_NEW_MSG__MASK__SKX_UNC_M3_TXC_BL_SPEC_ARB_NEW_MSG__VN0_WB = 0x100, // Speculative ARB for BL  - New Message -- VN0 WB Messages
		UNC_M3_TXC_BL_SPEC_ARB_NEW_MSG__MASK__SKX_UNC_M3_TXC_BL_SPEC_ARB_NEW_MSG__VN1_NCB = 0x2000, // Speculative ARB for BL  - New Message -- VN1 WB Messages
		UNC_M3_TXC_BL_SPEC_ARB_NEW_MSG__MASK__SKX_UNC_M3_TXC_BL_SPEC_ARB_NEW_MSG__VN1_NCS = 0x8000, // Speculative ARB for BL  - New Message -- VN1 NCB Messages
		UNC_M3_TXC_BL_SPEC_ARB_NEW_MSG__MASK__SKX_UNC_M3_TXC_BL_SPEC_ARB_NEW_MSG__VN1_WB = 0x1000, // Speculative ARB for BL  - New Message -- VN1 RSP Messages
		UNC_M3_TXC_BL_SPEC_ARB_NO_OTHER_PEND = 0x37, // BL speculative arb request asserted due to no other channel being active (have a valid entry but don't have credits to send)
		UNC_M3_TXC_BL_SPEC_ARB_NO_OTHER_PEND__MASK__SKX_UNC_M3_TXC_BL_SPEC_ARB_NO_OTHER_PEND__VN0_NCB = 0x400, // Speculative ARB for AD Failed - No Credit -- VN0 NCB Messages
		UNC_M3_TXC_BL_SPEC_ARB_NO_OTHER_PEND__MASK__SKX_UNC_M3_TXC_BL_SPEC_ARB_NO_OTHER_PEND__VN0_NCS = 0x800, // Speculative ARB for AD Failed - No Credit -- VN0 NCS Messages
		UNC_M3_TXC_BL_SPEC_ARB_NO_OTHER_PEND__MASK__SKX_UNC_M3_TXC_BL_SPEC_ARB_NO_OTHER_PEND__VN0_RSP = 0x100, // Speculative ARB for AD Failed - No Credit -- VN0 RSP Messages
		UNC_M3_TXC_BL_SPEC_ARB_NO_OTHER_PEND__MASK__SKX_UNC_M3_TXC_BL_SPEC_ARB_NO_OTHER_PEND__VN0_WB = 0x200, // Speculative ARB for AD Failed - No Credit -- VN0 WB Messages
		UNC_M3_TXC_BL_SPEC_ARB_NO_OTHER_PEND__MASK__SKX_UNC_M3_TXC_BL_SPEC_ARB_NO_OTHER_PEND__VN1_NCB = 0x4000, // Speculative ARB for AD Failed - No Credit -- VN1 NCS Messages
		UNC_M3_TXC_BL_SPEC_ARB_NO_OTHER_PEND__MASK__SKX_UNC_M3_TXC_BL_SPEC_ARB_NO_OTHER_PEND__VN1_NCS = 0x8000, // Speculative ARB for AD Failed - No Credit -- VN1 NCB Messages
		UNC_M3_TXC_BL_SPEC_ARB_NO_OTHER_PEND__MASK__SKX_UNC_M3_TXC_BL_SPEC_ARB_NO_OTHER_PEND__VN1_RSP = 0x1000, // Speculative ARB for AD Failed - No Credit -- VN1 RSP Messages
		UNC_M3_TXC_BL_SPEC_ARB_NO_OTHER_PEND__MASK__SKX_UNC_M3_TXC_BL_SPEC_ARB_NO_OTHER_PEND__VN1_WB = 0x2000, // Speculative ARB for AD Failed - No Credit -- VN1 WB Messages
		UNC_M3_TXR_HORZ_ADS_USED = 0x9d, // Number of packets using the Horizontal Anti-Deadlock Slot
		UNC_M3_TXR_HORZ_ADS_USED__MASK__SKX_UNC_M3_TXR_HORZ_ADS_USED__AD_BNC = 0x100, // CMS Horizontal ADS Used -- AD - Bounce
		UNC_M3_TXR_HORZ_ADS_USED__MASK__SKX_UNC_M3_TXR_HORZ_ADS_USED__AD_CRD = 0x1000, // CMS Horizontal ADS Used -- AD - Credit
		UNC_M3_TXR_HORZ_ADS_USED__MASK__SKX_UNC_M3_TXR_HORZ_ADS_USED__AK_BNC = 0x200, // CMS Horizontal ADS Used -- AK - Bounce
		UNC_M3_TXR_HORZ_ADS_USED__MASK__SKX_UNC_M3_TXR_HORZ_ADS_USED__BL_BNC = 0x400, // CMS Horizontal ADS Used -- BL - Bounce
		UNC_M3_TXR_HORZ_ADS_USED__MASK__SKX_UNC_M3_TXR_HORZ_ADS_USED__BL_CRD = 0x4000, // CMS Horizontal ADS Used -- BL - Credit
		UNC_M3_TXR_HORZ_BYPASS = 0x9f, // Number of packets bypassing the Horizontal Egress
		UNC_M3_TXR_HORZ_BYPASS__MASK__SKX_UNC_M3_TXR_HORZ_BYPASS__AD_BNC = 0x100, // CMS Horizontal Bypass Used -- AD - Bounce
		UNC_M3_TXR_HORZ_BYPASS__MASK__SKX_UNC_M3_TXR_HORZ_BYPASS__AD_CRD = 0x1000, // CMS Horizontal Bypass Used -- AD - Credit
		UNC_M3_TXR_HORZ_BYPASS__MASK__SKX_UNC_M3_TXR_HORZ_BYPASS__AK_BNC = 0x200, // CMS Horizontal Bypass Used -- AK - Bounce
		UNC_M3_TXR_HORZ_BYPASS__MASK__SKX_UNC_M3_TXR_HORZ_BYPASS__BL_BNC = 0x400, // CMS Horizontal Bypass Used -- BL - Bounce
		UNC_M3_TXR_HORZ_BYPASS__MASK__SKX_UNC_M3_TXR_HORZ_BYPASS__BL_CRD = 0x4000, // CMS Horizontal Bypass Used -- BL - Credit
		UNC_M3_TXR_HORZ_BYPASS__MASK__SKX_UNC_M3_TXR_HORZ_BYPASS__IV_BNC = 0x800, // CMS Horizontal Bypass Used -- IV - Bounce
		UNC_M3_TXR_HORZ_CYCLES_FULL = 0x96, // Cycles the Transgress buffers in the Common Mesh Stop are Full.  The egress is used to queue up requests destined for the Horizontal Ring on the Mesh.
		UNC_M3_TXR_HORZ_CYCLES_FULL__MASK__SKX_UNC_M3_TXR_HORZ_CYCLES_FULL__AD_BNC = 0x100, // Cycles CMS Horizontal Egress Queue is Full -- AD - Bounce
		UNC_M3_TXR_HORZ_CYCLES_FULL__MASK__SKX_UNC_M3_TXR_HORZ_CYCLES_FULL__AD_CRD = 0x1000, // Cycles CMS Horizontal Egress Queue is Full -- AD - Credit
		UNC_M3_TXR_HORZ_CYCLES_FULL__MASK__SKX_UNC_M3_TXR_HORZ_CYCLES_FULL__AK_BNC = 0x200, // Cycles CMS Horizontal Egress Queue is Full -- AK - Bounce
		UNC_M3_TXR_HORZ_CYCLES_FULL__MASK__SKX_UNC_M3_TXR_HORZ_CYCLES_FULL__BL_BNC = 0x400, // Cycles CMS Horizontal Egress Queue is Full -- BL - Bounce
		UNC_M3_TXR_HORZ_CYCLES_FULL__MASK__SKX_UNC_M3_TXR_HORZ_CYCLES_FULL__BL_CRD = 0x4000, // Cycles CMS Horizontal Egress Queue is Full -- BL - Credit
		UNC_M3_TXR_HORZ_CYCLES_FULL__MASK__SKX_UNC_M3_TXR_HORZ_CYCLES_FULL__IV_BNC = 0x800, // Cycles CMS Horizontal Egress Queue is Full -- IV - Bounce
		UNC_M3_TXR_HORZ_CYCLES_NE = 0x97, // Cycles the Transgress buffers in the Common Mesh Stop are Not-Empty.  The egress is used to queue up requests destined for the Horizontal Ring on the Mesh.
		UNC_M3_TXR_HORZ_CYCLES_NE__MASK__SKX_UNC_M3_TXR_HORZ_CYCLES_NE__AD_BNC = 0x100, // Cycles CMS Horizontal Egress Queue is Not Empty -- AD - Bounce
		UNC_M3_TXR_HORZ_CYCLES_NE__MASK__SKX_UNC_M3_TXR_HORZ_CYCLES_NE__AD_CRD = 0x1000, // Cycles CMS Horizontal Egress Queue is Not Empty -- AD - Credit
		UNC_M3_TXR_HORZ_CYCLES_NE__MASK__SKX_UNC_M3_TXR_HORZ_CYCLES_NE__AK_BNC = 0x200, // Cycles CMS Horizontal Egress Queue is Not Empty -- AK - Bounce
		UNC_M3_TXR_HORZ_CYCLES_NE__MASK__SKX_UNC_M3_TXR_HORZ_CYCLES_NE__BL_BNC = 0x400, // Cycles CMS Horizontal Egress Queue is Not Empty -- BL - Bounce
		UNC_M3_TXR_HORZ_CYCLES_NE__MASK__SKX_UNC_M3_TXR_HORZ_CYCLES_NE__BL_CRD = 0x4000, // Cycles CMS Horizontal Egress Queue is Not Empty -- BL - Credit
		UNC_M3_TXR_HORZ_CYCLES_NE__MASK__SKX_UNC_M3_TXR_HORZ_CYCLES_NE__IV_BNC = 0x800, // Cycles CMS Horizontal Egress Queue is Not Empty -- IV - Bounce
		UNC_M3_TXR_HORZ_INSERTS = 0x95, // Number of allocations into the Transgress buffers in the Common Mesh Stop  The egress is used to queue up requests destined for the Horizontal Ring on the Mesh.
		UNC_M3_TXR_HORZ_INSERTS__MASK__SKX_UNC_M3_TXR_HORZ_INSERTS__AD_BNC = 0x100, // CMS Horizontal Egress Inserts -- AD - Bounce
		UNC_M3_TXR_HORZ_INSERTS__MASK__SKX_UNC_M3_TXR_HORZ_INSERTS__AD_CRD = 0x1000, // CMS Horizontal Egress Inserts -- AD - Credit
		UNC_M3_TXR_HORZ_INSERTS__MASK__SKX_UNC_M3_TXR_HORZ_INSERTS__AK_BNC = 0x200, // CMS Horizontal Egress Inserts -- AK - Bounce
		UNC_M3_TXR_HORZ_INSERTS__MASK__SKX_UNC_M3_TXR_HORZ_INSERTS__BL_BNC = 0x400, // CMS Horizontal Egress Inserts -- BL - Bounce
		UNC_M3_TXR_HORZ_INSERTS__MASK__SKX_UNC_M3_TXR_HORZ_INSERTS__BL_CRD = 0x4000, // CMS Horizontal Egress Inserts -- BL - Credit
		UNC_M3_TXR_HORZ_INSERTS__MASK__SKX_UNC_M3_TXR_HORZ_INSERTS__IV_BNC = 0x800, // CMS Horizontal Egress Inserts -- IV - Bounce
		UNC_M3_TXR_HORZ_NACK = 0x99, // Counts number of Egress packets NACKed on to the Horizontal Rinng
		UNC_M3_TXR_HORZ_NACK__MASK__SKX_UNC_M3_TXR_HORZ_NACK__AD_BNC = 0x100, // CMS Horizontal Egress NACKs -- AD - Bounce
		UNC_M3_TXR_HORZ_NACK__MASK__SKX_UNC_M3_TXR_HORZ_NACK__AD_CRD = 0x2000, // CMS Horizontal Egress NACKs -- AD - Credit
		UNC_M3_TXR_HORZ_NACK__MASK__SKX_UNC_M3_TXR_HORZ_NACK__AK_BNC = 0x200, // CMS Horizontal Egress NACKs -- AK - Bounce
		UNC_M3_TXR_HORZ_NACK__MASK__SKX_UNC_M3_TXR_HORZ_NACK__BL_BNC = 0x400, // CMS Horizontal Egress NACKs -- BL - Bounce
		UNC_M3_TXR_HORZ_NACK__MASK__SKX_UNC_M3_TXR_HORZ_NACK__BL_CRD = 0x4000, // CMS Horizontal Egress NACKs -- BL - Credit
		UNC_M3_TXR_HORZ_NACK__MASK__SKX_UNC_M3_TXR_HORZ_NACK__IV_BNC = 0x800, // CMS Horizontal Egress NACKs -- IV - Bounce
		UNC_M3_TXR_HORZ_OCCUPANCY = 0x94, // Occupancy event for the Transgress buffers in the Common Mesh Stop  The egress is used to queue up requests destined for the Horizontal Ring on the Mesh.
		UNC_M3_TXR_HORZ_OCCUPANCY__MASK__SKX_UNC_M3_TXR_HORZ_OCCUPANCY__AD_BNC = 0x100, // CMS Horizontal Egress Occupancy -- AD - Bounce
		UNC_M3_TXR_HORZ_OCCUPANCY__MASK__SKX_UNC_M3_TXR_HORZ_OCCUPANCY__AD_CRD = 0x1000, // CMS Horizontal Egress Occupancy -- AD - Credit
		UNC_M3_TXR_HORZ_OCCUPANCY__MASK__SKX_UNC_M3_TXR_HORZ_OCCUPANCY__AK_BNC = 0x200, // CMS Horizontal Egress Occupancy -- AK - Bounce
		UNC_M3_TXR_HORZ_OCCUPANCY__MASK__SKX_UNC_M3_TXR_HORZ_OCCUPANCY__BL_BNC = 0x400, // CMS Horizontal Egress Occupancy -- BL - Bounce
		UNC_M3_TXR_HORZ_OCCUPANCY__MASK__SKX_UNC_M3_TXR_HORZ_OCCUPANCY__BL_CRD = 0x4000, // CMS Horizontal Egress Occupancy -- BL - Credit
		UNC_M3_TXR_HORZ_OCCUPANCY__MASK__SKX_UNC_M3_TXR_HORZ_OCCUPANCY__IV_BNC = 0x800, // CMS Horizontal Egress Occupancy -- IV - Bounce
		UNC_M3_TXR_HORZ_STARVED = 0x9b, // Counts injection starvation.  This starvation is triggered when the CMS Transgress buffer cannot send a transaction onto the Horizontal ring for a long period of time.
		UNC_M3_TXR_HORZ_STARVED__MASK__SKX_UNC_M3_TXR_HORZ_STARVED__AD_BNC = 0x100, // CMS Horizontal Egress Injection Starvation -- AD - Bounce
		UNC_M3_TXR_HORZ_STARVED__MASK__SKX_UNC_M3_TXR_HORZ_STARVED__AK_BNC = 0x200, // CMS Horizontal Egress Injection Starvation -- AK - Bounce
		UNC_M3_TXR_HORZ_STARVED__MASK__SKX_UNC_M3_TXR_HORZ_STARVED__BL_BNC = 0x400, // CMS Horizontal Egress Injection Starvation -- BL - Bounce
		UNC_M3_TXR_HORZ_STARVED__MASK__SKX_UNC_M3_TXR_HORZ_STARVED__IV_BNC = 0x800, // CMS Horizontal Egress Injection Starvation -- IV - Bounce
		UNC_M3_TXR_VERT_ADS_USED = 0x9c, // Number of packets using the Vertical Anti-Deadlock Slot
		UNC_M3_TXR_VERT_ADS_USED__MASK__SKX_UNC_M3_TXR_VERT_ADS_USED__AD_AG0 = 0x100, // CMS Vertical ADS Used -- AD - Agent 0
		UNC_M3_TXR_VERT_ADS_USED__MASK__SKX_UNC_M3_TXR_VERT_ADS_USED__AD_AG1 = 0x1000, // CMS Vertical ADS Used -- AD - Agent 1
		UNC_M3_TXR_VERT_ADS_USED__MASK__SKX_UNC_M3_TXR_VERT_ADS_USED__AK_AG0 = 0x200, // CMS Vertical ADS Used -- AK - Agent 0
		UNC_M3_TXR_VERT_ADS_USED__MASK__SKX_UNC_M3_TXR_VERT_ADS_USED__AK_AG1 = 0x2000, // CMS Vertical ADS Used -- AK - Agent 1
		UNC_M3_TXR_VERT_ADS_USED__MASK__SKX_UNC_M3_TXR_VERT_ADS_USED__BL_AG0 = 0x400, // CMS Vertical ADS Used -- BL - Agent 0
		UNC_M3_TXR_VERT_ADS_USED__MASK__SKX_UNC_M3_TXR_VERT_ADS_USED__BL_AG1 = 0x4000, // CMS Vertical ADS Used -- BL - Agent 1
		UNC_M3_TXR_VERT_BYPASS = 0x9e, // Number of packets bypassing the Vertical Egress
		UNC_M3_TXR_VERT_BYPASS__MASK__SKX_UNC_M3_TXR_VERT_BYPASS__AD_AG0 = 0x100, // CMS Vertical ADS Used -- AD - Agent 0
		UNC_M3_TXR_VERT_BYPASS__MASK__SKX_UNC_M3_TXR_VERT_BYPASS__AD_AG1 = 0x1000, // CMS Vertical ADS Used -- AD - Agent 1
		UNC_M3_TXR_VERT_BYPASS__MASK__SKX_UNC_M3_TXR_VERT_BYPASS__AK_AG0 = 0x200, // CMS Vertical ADS Used -- AK - Agent 0
		UNC_M3_TXR_VERT_BYPASS__MASK__SKX_UNC_M3_TXR_VERT_BYPASS__AK_AG1 = 0x2000, // CMS Vertical ADS Used -- AK - Agent 1
		UNC_M3_TXR_VERT_BYPASS__MASK__SKX_UNC_M3_TXR_VERT_BYPASS__BL_AG0 = 0x400, // CMS Vertical ADS Used -- BL - Agent 0
		UNC_M3_TXR_VERT_BYPASS__MASK__SKX_UNC_M3_TXR_VERT_BYPASS__BL_AG1 = 0x4000, // CMS Vertical ADS Used -- BL - Agent 1
		UNC_M3_TXR_VERT_BYPASS__MASK__SKX_UNC_M3_TXR_VERT_BYPASS__IV = 0x800, // CMS Vertical ADS Used -- IV
		UNC_M3_TXR_VERT_CYCLES_FULL = 0x92, // Number of cycles the Common Mesh Stop Egress was Not Full.  The Egress is used to queue up requests destined for the Vertical Ring on the Mesh.
		UNC_M3_TXR_VERT_CYCLES_FULL__MASK__SKX_UNC_M3_TXR_VERT_CYCLES_FULL__AD_AG0 = 0x100, // Cycles CMS Vertical Egress Queue Is Full -- AD - Agent 0
		UNC_M3_TXR_VERT_CYCLES_FULL__MASK__SKX_UNC_M3_TXR_VERT_CYCLES_FULL__AD_AG1 = 0x1000, // Cycles CMS Vertical Egress Queue Is Full -- AD - Agent 1
		UNC_M3_TXR_VERT_CYCLES_FULL__MASK__SKX_UNC_M3_TXR_VERT_CYCLES_FULL__AK_AG0 = 0x200, // Cycles CMS Vertical Egress Queue Is Full -- AK - Agent 0
		UNC_M3_TXR_VERT_CYCLES_FULL__MASK__SKX_UNC_M3_TXR_VERT_CYCLES_FULL__AK_AG1 = 0x2000, // Cycles CMS Vertical Egress Queue Is Full -- AK - Agent 1
		UNC_M3_TXR_VERT_CYCLES_FULL__MASK__SKX_UNC_M3_TXR_VERT_CYCLES_FULL__BL_AG0 = 0x400, // Cycles CMS Vertical Egress Queue Is Full -- BL - Agent 0
		UNC_M3_TXR_VERT_CYCLES_FULL__MASK__SKX_UNC_M3_TXR_VERT_CYCLES_FULL__BL_AG1 = 0x4000, // Cycles CMS Vertical Egress Queue Is Full -- BL - Agent 1
		UNC_M3_TXR_VERT_CYCLES_FULL__MASK__SKX_UNC_M3_TXR_VERT_CYCLES_FULL__IV = 0x800, // Cycles CMS Vertical Egress Queue Is Full -- IV
		UNC_M3_TXR_VERT_CYCLES_NE = 0x93, // Number of cycles the Common Mesh Stop Egress was Not Empty.  The Egress is used to queue up requests destined for the Vertical Ring on the Mesh.
		UNC_M3_TXR_VERT_CYCLES_NE__MASK__SKX_UNC_M3_TXR_VERT_CYCLES_NE__AD_AG0 = 0x100, // Cycles CMS Vertical Egress Queue Is Not Empty -- AD - Agent 0
		UNC_M3_TXR_VERT_CYCLES_NE__MASK__SKX_UNC_M3_TXR_VERT_CYCLES_NE__AD_AG1 = 0x1000, // Cycles CMS Vertical Egress Queue Is Not Empty -- AD - Agent 1
		UNC_M3_TXR_VERT_CYCLES_NE__MASK__SKX_UNC_M3_TXR_VERT_CYCLES_NE__AK_AG0 = 0x200, // Cycles CMS Vertical Egress Queue Is Not Empty -- AK - Agent 0
		UNC_M3_TXR_VERT_CYCLES_NE__MASK__SKX_UNC_M3_TXR_VERT_CYCLES_NE__AK_AG1 = 0x2000, // Cycles CMS Vertical Egress Queue Is Not Empty -- AK - Agent 1
		UNC_M3_TXR_VERT_CYCLES_NE__MASK__SKX_UNC_M3_TXR_VERT_CYCLES_NE__BL_AG0 = 0x400, // Cycles CMS Vertical Egress Queue Is Not Empty -- BL - Agent 0
		UNC_M3_TXR_VERT_CYCLES_NE__MASK__SKX_UNC_M3_TXR_VERT_CYCLES_NE__BL_AG1 = 0x4000, // Cycles CMS Vertical Egress Queue Is Not Empty -- BL - Agent 1
		UNC_M3_TXR_VERT_CYCLES_NE__MASK__SKX_UNC_M3_TXR_VERT_CYCLES_NE__IV = 0x800, // Cycles CMS Vertical Egress Queue Is Not Empty -- IV
		UNC_M3_TXR_VERT_INSERTS = 0x91, // Number of allocations into the Common Mesh Stop Egress.  The Egress is used to queue up requests destined for the Vertical Ring on the Mesh.
		UNC_M3_TXR_VERT_INSERTS__MASK__SKX_UNC_M3_TXR_VERT_INSERTS__AD_AG0 = 0x100, // CMS Vert Egress Allocations -- AD - Agent 0
		UNC_M3_TXR_VERT_INSERTS__MASK__SKX_UNC_M3_TXR_VERT_INSERTS__AD_AG1 = 0x1000, // CMS Vert Egress Allocations -- AD - Agent 1
		UNC_M3_TXR_VERT_INSERTS__MASK__SKX_UNC_M3_TXR_VERT_INSERTS__AK_AG0 = 0x200, // CMS Vert Egress Allocations -- AK - Agent 0
		UNC_M3_TXR_VERT_INSERTS__MASK__SKX_UNC_M3_TXR_VERT_INSERTS__AK_AG1 = 0x2000, // CMS Vert Egress Allocations -- AK - Agent 1
		UNC_M3_TXR_VERT_INSERTS__MASK__SKX_UNC_M3_TXR_VERT_INSERTS__BL_AG0 = 0x400, // CMS Vert Egress Allocations -- BL - Agent 0
		UNC_M3_TXR_VERT_INSERTS__MASK__SKX_UNC_M3_TXR_VERT_INSERTS__BL_AG1 = 0x4000, // CMS Vert Egress Allocations -- BL - Agent 1
		UNC_M3_TXR_VERT_INSERTS__MASK__SKX_UNC_M3_TXR_VERT_INSERTS__IV = 0x800, // CMS Vert Egress Allocations -- IV
		UNC_M3_TXR_VERT_NACK = 0x98, // Counts number of Egress packets NACKed on to the Vertical Rinng
		UNC_M3_TXR_VERT_NACK__MASK__SKX_UNC_M3_TXR_VERT_NACK__AD_AG0 = 0x100, // CMS Vertical Egress NACKs -- AD - Agent 0
		UNC_M3_TXR_VERT_NACK__MASK__SKX_UNC_M3_TXR_VERT_NACK__AD_AG1 = 0x1000, // CMS Vertical Egress NACKs -- AD - Agent 1
		UNC_M3_TXR_VERT_NACK__MASK__SKX_UNC_M3_TXR_VERT_NACK__AK_AG0 = 0x200, // CMS Vertical Egress NACKs -- AK - Agent 0
		UNC_M3_TXR_VERT_NACK__MASK__SKX_UNC_M3_TXR_VERT_NACK__AK_AG1 = 0x2000, // CMS Vertical Egress NACKs -- AK - Agent 1
		UNC_M3_TXR_VERT_NACK__MASK__SKX_UNC_M3_TXR_VERT_NACK__BL_AG0 = 0x400, // CMS Vertical Egress NACKs -- BL - Agent 0
		UNC_M3_TXR_VERT_NACK__MASK__SKX_UNC_M3_TXR_VERT_NACK__BL_AG1 = 0x4000, // CMS Vertical Egress NACKs -- BL - Agent 1
		UNC_M3_TXR_VERT_NACK__MASK__SKX_UNC_M3_TXR_VERT_NACK__IV = 0x800, // CMS Vertical Egress NACKs -- IV
		UNC_M3_TXR_VERT_OCCUPANCY = 0x90, // Occupancy event for the Egress buffers in the Common Mesh Stop  The egress is used to queue up requests destined for the Vertical Ring on the Mesh.
		UNC_M3_TXR_VERT_OCCUPANCY__MASK__SKX_UNC_M3_TXR_VERT_OCCUPANCY__AD_AG0 = 0x100, // CMS Vert Egress Occupancy -- AD - Agent 0
		UNC_M3_TXR_VERT_OCCUPANCY__MASK__SKX_UNC_M3_TXR_VERT_OCCUPANCY__AD_AG1 = 0x1000, // CMS Vert Egress Occupancy -- AD - Agent 1
		UNC_M3_TXR_VERT_OCCUPANCY__MASK__SKX_UNC_M3_TXR_VERT_OCCUPANCY__AK_AG0 = 0x200, // CMS Vert Egress Occupancy -- AK - Agent 0
		UNC_M3_TXR_VERT_OCCUPANCY__MASK__SKX_UNC_M3_TXR_VERT_OCCUPANCY__AK_AG1 = 0x2000, // CMS Vert Egress Occupancy -- AK - Agent 1
		UNC_M3_TXR_VERT_OCCUPANCY__MASK__SKX_UNC_M3_TXR_VERT_OCCUPANCY__BL_AG0 = 0x400, // CMS Vert Egress Occupancy -- BL - Agent 0
		UNC_M3_TXR_VERT_OCCUPANCY__MASK__SKX_UNC_M3_TXR_VERT_OCCUPANCY__BL_AG1 = 0x4000, // CMS Vert Egress Occupancy -- BL - Agent 1
		UNC_M3_TXR_VERT_OCCUPANCY__MASK__SKX_UNC_M3_TXR_VERT_OCCUPANCY__IV = 0x800, // CMS Vert Egress Occupancy -- IV
		UNC_M3_TXR_VERT_STARVED = 0x9a, // Counts injection starvation.  This starvation is triggered when the CMS Egress cannot send a transaction onto the Vertical ring for a long period of time.
		UNC_M3_TXR_VERT_STARVED__MASK__SKX_UNC_M3_TXR_VERT_STARVED__AD_AG0 = 0x100, // CMS Vertical Egress Injection Starvation -- AD - Agent 0
		UNC_M3_TXR_VERT_STARVED__MASK__SKX_UNC_M3_TXR_VERT_STARVED__AD_AG1 = 0x1000, // CMS Vertical Egress Injection Starvation -- AD - Agent 1
		UNC_M3_TXR_VERT_STARVED__MASK__SKX_UNC_M3_TXR_VERT_STARVED__AK_AG0 = 0x200, // CMS Vertical Egress Injection Starvation -- AK - Agent 0
		UNC_M3_TXR_VERT_STARVED__MASK__SKX_UNC_M3_TXR_VERT_STARVED__AK_AG1 = 0x2000, // CMS Vertical Egress Injection Starvation -- AK - Agent 1
		UNC_M3_TXR_VERT_STARVED__MASK__SKX_UNC_M3_TXR_VERT_STARVED__BL_AG0 = 0x400, // CMS Vertical Egress Injection Starvation -- BL - Agent 0
		UNC_M3_TXR_VERT_STARVED__MASK__SKX_UNC_M3_TXR_VERT_STARVED__BL_AG1 = 0x4000, // CMS Vertical Egress Injection Starvation -- BL - Agent 1
		UNC_M3_TXR_VERT_STARVED__MASK__SKX_UNC_M3_TXR_VERT_STARVED__IV = 0x800, // CMS Vertical Egress Injection Starvation -- IV
		UNC_M3_UPI_PEER_AD_CREDITS_EMPTY = 0x20, // No credits available to send to UPIs on the AD Ring
		UNC_M3_UPI_PEER_AD_CREDITS_EMPTY__MASK__SKX_UNC_M3_UPI_PEER_AD_CREDITS_EMPTY__VN0_REQ = 0x200, // UPI0 AD Credits Empty -- VN0 REQ Messages
		UNC_M3_UPI_PEER_AD_CREDITS_EMPTY__MASK__SKX_UNC_M3_UPI_PEER_AD_CREDITS_EMPTY__VN0_RSP = 0x800, // UPI0 AD Credits Empty -- VN0 RSP Messages
		UNC_M3_UPI_PEER_AD_CREDITS_EMPTY__MASK__SKX_UNC_M3_UPI_PEER_AD_CREDITS_EMPTY__VN0_SNP = 0x400, // UPI0 AD Credits Empty -- VN0 SNP Messages
		UNC_M3_UPI_PEER_AD_CREDITS_EMPTY__MASK__SKX_UNC_M3_UPI_PEER_AD_CREDITS_EMPTY__VN1_REQ = 0x1000, // UPI0 AD Credits Empty -- VN1 REQ Messages
		UNC_M3_UPI_PEER_AD_CREDITS_EMPTY__MASK__SKX_UNC_M3_UPI_PEER_AD_CREDITS_EMPTY__VN1_RSP = 0x4000, // UPI0 AD Credits Empty -- VN1 RSP Messages
		UNC_M3_UPI_PEER_AD_CREDITS_EMPTY__MASK__SKX_UNC_M3_UPI_PEER_AD_CREDITS_EMPTY__VN1_SNP = 0x2000, // UPI0 AD Credits Empty -- VN1 SNP Messages
		UNC_M3_UPI_PEER_AD_CREDITS_EMPTY__MASK__SKX_UNC_M3_UPI_PEER_AD_CREDITS_EMPTY__VNA = 0x100, // UPI0 AD Credits Empty -- VNA
		UNC_M3_UPI_PEER_BL_CREDITS_EMPTY = 0x21, // No credits available to send to UPI on the BL Ring (diff between non-SMI and SMI mode)
		UNC_M3_UPI_PEER_BL_CREDITS_EMPTY__MASK__SKX_UNC_M3_UPI_PEER_BL_CREDITS_EMPTY__VN0_NCS_NCB = 0x400, // UPI0 BL Credits Empty -- VN0 RSP Messages
		UNC_M3_UPI_PEER_BL_CREDITS_EMPTY__MASK__SKX_UNC_M3_UPI_PEER_BL_CREDITS_EMPTY__VN0_RSP = 0x200, // UPI0 BL Credits Empty -- VN0 REQ Messages
		UNC_M3_UPI_PEER_BL_CREDITS_EMPTY__MASK__SKX_UNC_M3_UPI_PEER_BL_CREDITS_EMPTY__VN0_WB = 0x800, // UPI0 BL Credits Empty -- VN0 SNP Messages
		UNC_M3_UPI_PEER_BL_CREDITS_EMPTY__MASK__SKX_UNC_M3_UPI_PEER_BL_CREDITS_EMPTY__VN1_NCS_NCB = 0x2000, // UPI0 BL Credits Empty -- VN1 RSP Messages
		UNC_M3_UPI_PEER_BL_CREDITS_EMPTY__MASK__SKX_UNC_M3_UPI_PEER_BL_CREDITS_EMPTY__VN1_RSP = 0x1000, // UPI0 BL Credits Empty -- VN1 REQ Messages
		UNC_M3_UPI_PEER_BL_CREDITS_EMPTY__MASK__SKX_UNC_M3_UPI_PEER_BL_CREDITS_EMPTY__VN1_WB = 0x4000, // UPI0 BL Credits Empty -- VN1 SNP Messages
		UNC_M3_UPI_PEER_BL_CREDITS_EMPTY__MASK__SKX_UNC_M3_UPI_PEER_BL_CREDITS_EMPTY__VNA = 0x100, // UPI0 BL Credits Empty -- VNA
		UNC_M3_UPI_PREFETCH_SPAWN = 0x29, // Count cases where FlowQ causes spawn of Prefetch to iMC/SMI3 target
		UNC_M3_VERT_RING_AD_IN_USE = 0xa6, // Counts the number of cycles that the Vertical AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk
		UNC_M3_VERT_RING_AD_IN_USE__MASK__SKX_UNC_M3_VERT_RING_AD_IN_USE__DN_EVEN = 0x400, // Vertical AD Ring In Use -- Down and Even
		UNC_M3_VERT_RING_AD_IN_USE__MASK__SKX_UNC_M3_VERT_RING_AD_IN_USE__DN_ODD = 0x800, // Vertical AD Ring In Use -- Down and Odd
		UNC_M3_VERT_RING_AD_IN_USE__MASK__SKX_UNC_M3_VERT_RING_AD_IN_USE__UP_EVEN = 0x100, // Vertical AD Ring In Use -- Up and Even
		UNC_M3_VERT_RING_AD_IN_USE__MASK__SKX_UNC_M3_VERT_RING_AD_IN_USE__UP_ODD = 0x200, // Vertical AD Ring In Use -- Up and Odd
		UNC_M3_VERT_RING_AK_IN_USE = 0xa8, // Counts the number of cycles that the Vertical AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk
		UNC_M3_VERT_RING_AK_IN_USE__MASK__SKX_UNC_M3_VERT_RING_AK_IN_USE__DN_EVEN = 0x400, // Vertical AK Ring In Use -- Down and Even
		UNC_M3_VERT_RING_AK_IN_USE__MASK__SKX_UNC_M3_VERT_RING_AK_IN_USE__DN_ODD = 0x800, // Vertical AK Ring In Use -- Down and Odd
		UNC_M3_VERT_RING_AK_IN_USE__MASK__SKX_UNC_M3_VERT_RING_AK_IN_USE__UP_EVEN = 0x100, // Vertical AK Ring In Use -- Up and Even
		UNC_M3_VERT_RING_AK_IN_USE__MASK__SKX_UNC_M3_VERT_RING_AK_IN_USE__UP_ODD = 0x200, // Vertical AK Ring In Use -- Up and Odd
		UNC_M3_VERT_RING_BL_IN_USE = 0xaa, // Counts the number of cycles that the Vertical BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk
		UNC_M3_VERT_RING_BL_IN_USE__MASK__SKX_UNC_M3_VERT_RING_BL_IN_USE__DN_EVEN = 0x400, // Vertical BL Ring in Use -- Down and Even
		UNC_M3_VERT_RING_BL_IN_USE__MASK__SKX_UNC_M3_VERT_RING_BL_IN_USE__DN_ODD = 0x800, // Vertical BL Ring in Use -- Down and Odd
		UNC_M3_VERT_RING_BL_IN_USE__MASK__SKX_UNC_M3_VERT_RING_BL_IN_USE__UP_EVEN = 0x100, // Vertical BL Ring in Use -- Up and Even
		UNC_M3_VERT_RING_BL_IN_USE__MASK__SKX_UNC_M3_VERT_RING_BL_IN_USE__UP_ODD = 0x200, // Vertical BL Ring in Use -- Up and Odd
		UNC_M3_VERT_RING_IV_IN_USE = 0xac, // Counts the number of cycles that the Vertical IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk
		UNC_M3_VERT_RING_IV_IN_USE__MASK__SKX_UNC_M3_VERT_RING_IV_IN_USE__DN = 0x400, // Vertical IV Ring in Use -- Down
		UNC_M3_VERT_RING_IV_IN_USE__MASK__SKX_UNC_M3_VERT_RING_IV_IN_USE__UP = 0x100, // Vertical IV Ring in Use -- Up
		UNC_M3_VN0_CREDITS_USED = 0x5c, // Number of times a VN0 credit was used on the DRS message channel.  In order for a request to be transferred across UPI
		UNC_M3_VN0_CREDITS_USED__MASK__SKX_UNC_M3_VN0_CREDITS_USED__NCB = 0x1000, // VN0 Credit Used -- WB on BL
		UNC_M3_VN0_CREDITS_USED__MASK__SKX_UNC_M3_VN0_CREDITS_USED__NCS = 0x2000, // VN0 Credit Used -- NCB on BL
		UNC_M3_VN0_CREDITS_USED__MASK__SKX_UNC_M3_VN0_CREDITS_USED__REQ = 0x100, // VN0 Credit Used -- REQ on AD
		UNC_M3_VN0_CREDITS_USED__MASK__SKX_UNC_M3_VN0_CREDITS_USED__RSP = 0x400, // VN0 Credit Used -- RSP on AD
		UNC_M3_VN0_CREDITS_USED__MASK__SKX_UNC_M3_VN0_CREDITS_USED__SNP = 0x200, // VN0 Credit Used -- SNP on AD
		UNC_M3_VN0_CREDITS_USED__MASK__SKX_UNC_M3_VN0_CREDITS_USED__WB = 0x800, // VN0 Credit Used -- RSP on BL
		UNC_M3_VN0_NO_CREDITS = 0x5e, // Number of Cycles there were no VN0 Credits
		UNC_M3_VN0_NO_CREDITS__MASK__SKX_UNC_M3_VN0_NO_CREDITS__NCB = 0x1000, // VN0 No Credits -- WB on BL
		UNC_M3_VN0_NO_CREDITS__MASK__SKX_UNC_M3_VN0_NO_CREDITS__NCS = 0x2000, // VN0 No Credits -- NCB on BL
		UNC_M3_VN0_NO_CREDITS__MASK__SKX_UNC_M3_VN0_NO_CREDITS__REQ = 0x100, // VN0 No Credits -- REQ on AD
		UNC_M3_VN0_NO_CREDITS__MASK__SKX_UNC_M3_VN0_NO_CREDITS__RSP = 0x400, // VN0 No Credits -- RSP on AD
		UNC_M3_VN0_NO_CREDITS__MASK__SKX_UNC_M3_VN0_NO_CREDITS__SNP = 0x200, // VN0 No Credits -- SNP on AD
		UNC_M3_VN0_NO_CREDITS__MASK__SKX_UNC_M3_VN0_NO_CREDITS__WB = 0x800, // VN0 No Credits -- RSP on BL
		UNC_M3_VN1_CREDITS_USED = 0x5d, // Number of times a VN1 credit was used on the WB message channel.  In order for a request to be transferred across QPI
		UNC_M3_VN1_CREDITS_USED__MASK__SKX_UNC_M3_VN1_CREDITS_USED__NCB = 0x1000, // VN1 Credit Used -- WB on BL
		UNC_M3_VN1_CREDITS_USED__MASK__SKX_UNC_M3_VN1_CREDITS_USED__NCS = 0x2000, // VN1 Credit Used -- NCB on BL
		UNC_M3_VN1_CREDITS_USED__MASK__SKX_UNC_M3_VN1_CREDITS_USED__REQ = 0x100, // VN1 Credit Used -- REQ on AD
		UNC_M3_VN1_CREDITS_USED__MASK__SKX_UNC_M3_VN1_CREDITS_USED__RSP = 0x400, // VN1 Credit Used -- RSP on AD
		UNC_M3_VN1_CREDITS_USED__MASK__SKX_UNC_M3_VN1_CREDITS_USED__SNP = 0x200, // VN1 Credit Used -- SNP on AD
		UNC_M3_VN1_CREDITS_USED__MASK__SKX_UNC_M3_VN1_CREDITS_USED__WB = 0x800, // VN1 Credit Used -- RSP on BL
		UNC_M3_VN1_NO_CREDITS = 0x5f, // Number of Cycles there were no VN1 Credits
		UNC_M3_VN1_NO_CREDITS__MASK__SKX_UNC_M3_VN1_NO_CREDITS__NCB = 0x1000, // VN1 No Credits -- WB on BL
		UNC_M3_VN1_NO_CREDITS__MASK__SKX_UNC_M3_VN1_NO_CREDITS__NCS = 0x2000, // VN1 No Credits -- NCB on BL
		UNC_M3_VN1_NO_CREDITS__MASK__SKX_UNC_M3_VN1_NO_CREDITS__REQ = 0x100, // VN1 No Credits -- REQ on AD
		UNC_M3_VN1_NO_CREDITS__MASK__SKX_UNC_M3_VN1_NO_CREDITS__RSP = 0x400, // VN1 No Credits -- RSP on AD
		UNC_M3_VN1_NO_CREDITS__MASK__SKX_UNC_M3_VN1_NO_CREDITS__SNP = 0x200, // VN1 No Credits -- SNP on AD
		UNC_M3_VN1_NO_CREDITS__MASK__SKX_UNC_M3_VN1_NO_CREDITS__WB = 0x800, // VN1 No Credits -- RSP on BL
		
	};
};

namespace skx_unc_m3 = optkit::intel::skx_unc_m3;