#include <cstdint>

namespace optkit_intel{
	enum class skx_unc_m2m : uint64_t {
		UNC_M2_AG0_AD_CRD_ACQUIRED = 0x80, // Number of CMS Agent 0 AD credits acquired in a given cycle
		UNC_M2_AG0_AD_CRD_ACQUIRED_MASK_TGR0 = 0x100, // CMS Agent0 Credits Acquired -- For Transgress 0
		UNC_M2_AG0_AD_CRD_ACQUIRED_MASK_TGR1 = 0x200, // CMS Agent0 Credits Acquired -- For Transgress 1
		UNC_M2_AG0_AD_CRD_ACQUIRED_MASK_TGR2 = 0x400, // CMS Agent0 Credits Acquired -- For Transgress 2
		UNC_M2_AG0_AD_CRD_ACQUIRED_MASK_TGR3 = 0x800, // CMS Agent0 Credits Acquired -- For Transgress 3
		UNC_M2_AG0_AD_CRD_ACQUIRED_MASK_TGR4 = 0x1000, // CMS Agent0 Credits Acquired -- For Transgress 4
		UNC_M2_AG0_AD_CRD_ACQUIRED_MASK_TGR5 = 0x2000, // CMS Agent0 Credits Acquired -- For Transgress 5
		UNC_M2_AG0_AD_CRD_OCCUPANCY = 0x82, // Number of CMS Agent 0 AD credits in use in a given cycle
		UNC_M2_AG0_AD_CRD_OCCUPANCY_MASK_TGR0 = 0x100, // CMS Agent0 Credits Occupancy -- For Transgress 0
		UNC_M2_AG0_AD_CRD_OCCUPANCY_MASK_TGR1 = 0x200, // CMS Agent0 Credits Occupancy -- For Transgress 1
		UNC_M2_AG0_AD_CRD_OCCUPANCY_MASK_TGR2 = 0x400, // CMS Agent0 Credits Occupancy -- For Transgress 2
		UNC_M2_AG0_AD_CRD_OCCUPANCY_MASK_TGR3 = 0x800, // CMS Agent0 Credits Occupancy -- For Transgress 3
		UNC_M2_AG0_AD_CRD_OCCUPANCY_MASK_TGR4 = 0x1000, // CMS Agent0 Credits Occupancy -- For Transgress 4
		UNC_M2_AG0_AD_CRD_OCCUPANCY_MASK_TGR5 = 0x2000, // CMS Agent0 Credits Occupancy -- For Transgress 5
		UNC_M2_AG0_BL_CRD_ACQUIRED = 0x88, // Number of CMS Agent 0 BL credits acquired in a given cycle
		UNC_M2_AG0_BL_CRD_ACQUIRED_MASK_TGR0 = 0x100, // CMS Agent0 Credits Acquired -- For Transgress 0
		UNC_M2_AG0_BL_CRD_ACQUIRED_MASK_TGR1 = 0x200, // CMS Agent0 Credits Acquired -- For Transgress 1
		UNC_M2_AG0_BL_CRD_ACQUIRED_MASK_TGR2 = 0x400, // CMS Agent0 Credits Acquired -- For Transgress 2
		UNC_M2_AG0_BL_CRD_ACQUIRED_MASK_TGR3 = 0x800, // CMS Agent0 Credits Acquired -- For Transgress 3
		UNC_M2_AG0_BL_CRD_ACQUIRED_MASK_TGR4 = 0x1000, // CMS Agent0 Credits Acquired -- For Transgress 4
		UNC_M2_AG0_BL_CRD_ACQUIRED_MASK_TGR5 = 0x2000, // CMS Agent0 Credits Acquired -- For Transgress 5
		UNC_M2_AG0_BL_CRD_OCCUPANCY = 0x8a, // Number of CMS Agent 0 BL credits in use in a given cycle
		UNC_M2_AG0_BL_CRD_OCCUPANCY_MASK_TGR0 = 0x100, // CMS Agent0 Credits Occupancy -- For Transgress 0
		UNC_M2_AG0_BL_CRD_OCCUPANCY_MASK_TGR1 = 0x200, // CMS Agent0 Credits Occupancy -- For Transgress 1
		UNC_M2_AG0_BL_CRD_OCCUPANCY_MASK_TGR2 = 0x400, // CMS Agent0 Credits Occupancy -- For Transgress 2
		UNC_M2_AG0_BL_CRD_OCCUPANCY_MASK_TGR3 = 0x800, // CMS Agent0 Credits Occupancy -- For Transgress 3
		UNC_M2_AG0_BL_CRD_OCCUPANCY_MASK_TGR4 = 0x1000, // CMS Agent0 Credits Occupancy -- For Transgress 4
		UNC_M2_AG0_BL_CRD_OCCUPANCY_MASK_TGR5 = 0x2000, // CMS Agent0 Credits Occupancy -- For Transgress 5
		UNC_M2_AG1_AD_CRD_ACQUIRED = 0x84, // Number of CMS Agent 1 AD credits acquired in a given cycle
		UNC_M2_AG1_AD_CRD_ACQUIRED_MASK_TGR0 = 0x100, // CMS Agent0 Credits Acquired -- For Transgress 0
		UNC_M2_AG1_AD_CRD_ACQUIRED_MASK_TGR1 = 0x200, // CMS Agent0 Credits Acquired -- For Transgress 1
		UNC_M2_AG1_AD_CRD_ACQUIRED_MASK_TGR2 = 0x400, // CMS Agent0 Credits Acquired -- For Transgress 2
		UNC_M2_AG1_AD_CRD_ACQUIRED_MASK_TGR3 = 0x800, // CMS Agent0 Credits Acquired -- For Transgress 3
		UNC_M2_AG1_AD_CRD_ACQUIRED_MASK_TGR4 = 0x1000, // CMS Agent0 Credits Acquired -- For Transgress 4
		UNC_M2_AG1_AD_CRD_ACQUIRED_MASK_TGR5 = 0x2000, // CMS Agent0 Credits Acquired -- For Transgress 5
		UNC_M2_AG1_AD_CRD_OCCUPANCY = 0x86, // Number of CMS Agent 1 AD credits in use in a given cycle
		UNC_M2_AG1_AD_CRD_OCCUPANCY_MASK_TGR0 = 0x100, // CMS Agent0 Credits Occupancy -- For Transgress 0
		UNC_M2_AG1_AD_CRD_OCCUPANCY_MASK_TGR1 = 0x200, // CMS Agent0 Credits Occupancy -- For Transgress 1
		UNC_M2_AG1_AD_CRD_OCCUPANCY_MASK_TGR2 = 0x400, // CMS Agent0 Credits Occupancy -- For Transgress 2
		UNC_M2_AG1_AD_CRD_OCCUPANCY_MASK_TGR3 = 0x800, // CMS Agent0 Credits Occupancy -- For Transgress 3
		UNC_M2_AG1_AD_CRD_OCCUPANCY_MASK_TGR4 = 0x1000, // CMS Agent0 Credits Occupancy -- For Transgress 4
		UNC_M2_AG1_AD_CRD_OCCUPANCY_MASK_TGR5 = 0x2000, // CMS Agent0 Credits Occupancy -- For Transgress 5
		UNC_M2_AG1_BL_CRD_OCCUPANCY = 0x8e, // Number of CMS Agent 1 BL credits in use in a given cycle
		UNC_M2_AG1_BL_CRD_OCCUPANCY_MASK_TGR0 = 0x100, // CMS Agent0 Credits Occupancy -- For Transgress 0
		UNC_M2_AG1_BL_CRD_OCCUPANCY_MASK_TGR1 = 0x200, // CMS Agent0 Credits Occupancy -- For Transgress 1
		UNC_M2_AG1_BL_CRD_OCCUPANCY_MASK_TGR2 = 0x400, // CMS Agent0 Credits Occupancy -- For Transgress 2
		UNC_M2_AG1_BL_CRD_OCCUPANCY_MASK_TGR3 = 0x800, // CMS Agent0 Credits Occupancy -- For Transgress 3
		UNC_M2_AG1_BL_CRD_OCCUPANCY_MASK_TGR4 = 0x1000, // CMS Agent0 Credits Occupancy -- For Transgress 4
		UNC_M2_AG1_BL_CRD_OCCUPANCY_MASK_TGR5 = 0x2000, // CMS Agent0 Credits Occupancy -- For Transgress 5
		UNC_M2_AG1_BL_CREDITS_ACQUIRED = 0x8c, // Number of CMS Agent 1 BL credits acquired in a given cycle
		UNC_M2_AG1_BL_CREDITS_ACQUIRED_MASK_TGR0 = 0x100, // CMS Agent0 Credits Acquired -- For Transgress 0
		UNC_M2_AG1_BL_CREDITS_ACQUIRED_MASK_TGR1 = 0x200, // CMS Agent0 Credits Acquired -- For Transgress 1
		UNC_M2_AG1_BL_CREDITS_ACQUIRED_MASK_TGR2 = 0x400, // CMS Agent0 Credits Acquired -- For Transgress 2
		UNC_M2_AG1_BL_CREDITS_ACQUIRED_MASK_TGR3 = 0x800, // CMS Agent0 Credits Acquired -- For Transgress 3
		UNC_M2_AG1_BL_CREDITS_ACQUIRED_MASK_TGR4 = 0x1000, // CMS Agent0 Credits Acquired -- For Transgress 4
		UNC_M2_AG1_BL_CREDITS_ACQUIRED_MASK_TGR5 = 0x2000, // CMS Agent0 Credits Acquired -- For Transgress 5
		UNC_M2_BYPASS_M2M_EGRESS = 0x22, // TBD
		UNC_M2_BYPASS_M2M_EGRESS_MASK_NOT_TAKEN = 0x200, // M2M to iMC Bypass -- Not Taken
		UNC_M2_BYPASS_M2M_EGRESS_MASK_TAKEN = 0x100, // M2M to iMC Bypass -- Taken
		UNC_M2_BYPASS_M2M_INGRESS = 0x21, // TBD
		UNC_M2_BYPASS_M2M_INGRESS_MASK_NOT_TAKEN = 0x200, // M2M to iMC Bypass -- Not Taken
		UNC_M2_BYPASS_M2M_INGRESS_MASK_TAKEN = 0x100, // M2M to iMC Bypass -- Taken
		UNC_M2_CLOCKTICKS = 0x0, // TBD
		UNC_M2_CMS_CLOCKTICKS = 0xc0, // TBD
		UNC_M2_DIRECT2CORE_NOT_TAKEN_DIRSTATE = 0x24, // TBD
		UNC_M2_DIRECT2CORE_TAKEN = 0x23, // TBD
		UNC_M2_DIRECT2CORE_TXN_OVERRIDE = 0x25, // TBD
		UNC_M2_DIRECT2UPI_NOT_TAKEN_CREDITS = 0x28, // TBD
		UNC_M2_DIRECT2UPI_NOT_TAKEN_DIRSTATE = 0x27, // TBD
		UNC_M2_DIRECT2UPI_TAKEN = 0x26, // TBD
		UNC_M2_DIRECT2UPI_TXN_OVERRIDE = 0x29, // TBD
		UNC_M2_DIRECTORY_HIT = 0x2a, // TBD
		UNC_M2_DIRECTORY_HIT_MASK_CLEAN_A = 0x8000, // Directory Hit -- On NonDirty Line in A State
		UNC_M2_DIRECTORY_HIT_MASK_CLEAN_I = 0x1000, // Directory Hit -- On NonDirty Line in I State
		UNC_M2_DIRECTORY_HIT_MASK_CLEAN_P = 0x4000, // Directory Hit -- On NonDirty Line in L State
		UNC_M2_DIRECTORY_HIT_MASK_CLEAN_S = 0x2000, // Directory Hit -- On NonDirty Line in S State
		UNC_M2_DIRECTORY_HIT_MASK_DIRTY_A = 0x800, // Directory Hit -- On Dirty Line in A State
		UNC_M2_DIRECTORY_HIT_MASK_DIRTY_I = 0x100, // Directory Hit -- On Dirty Line in I State
		UNC_M2_DIRECTORY_HIT_MASK_DIRTY_P = 0x400, // Directory Hit -- On Dirty Line in L State
		UNC_M2_DIRECTORY_HIT_MASK_DIRTY_S = 0x200, // Directory Hit -- On Dirty Line in S State
		UNC_M2_DIRECTORY_LOOKUP = 0x2d, // TBD
		UNC_M2_DIRECTORY_LOOKUP_MASK_ANY = 0x100, // Directory Lookups -- Any state
		UNC_M2_DIRECTORY_LOOKUP_MASK_STATE_A = 0x800, // Directory Lookups -- A State
		UNC_M2_DIRECTORY_LOOKUP_MASK_STATE_I = 0x200, // Directory Lookups -- I State
		UNC_M2_DIRECTORY_LOOKUP_MASK_STATE_S = 0x400, // Directory Lookups -- S State
		UNC_M2_DIRECTORY_MISS = 0x2b, // TBD
		UNC_M2_DIRECTORY_MISS_MASK_CLEAN_A = 0x8000, // Directory Miss -- On NonDirty Line in A State
		UNC_M2_DIRECTORY_MISS_MASK_CLEAN_I = 0x1000, // Directory Miss -- On NonDirty Line in I State
		UNC_M2_DIRECTORY_MISS_MASK_CLEAN_P = 0x4000, // Directory Miss -- On NonDirty Line in L State
		UNC_M2_DIRECTORY_MISS_MASK_CLEAN_S = 0x2000, // Directory Miss -- On NonDirty Line in S State
		UNC_M2_DIRECTORY_MISS_MASK_DIRTY_A = 0x800, // Directory Miss -- On Dirty Line in A State
		UNC_M2_DIRECTORY_MISS_MASK_DIRTY_I = 0x100, // Directory Miss -- On Dirty Line in I State
		UNC_M2_DIRECTORY_MISS_MASK_DIRTY_P = 0x400, // Directory Miss -- On Dirty Line in L State
		UNC_M2_DIRECTORY_MISS_MASK_DIRTY_S = 0x200, // Directory Miss -- On Dirty Line in S State
		UNC_M2_DIRECTORY_UPDATE = 0x2e, // TBD
		UNC_M2_DIRECTORY_UPDATE_MASK_A2I = 0x2000, // Directory Updates -- A2I
		UNC_M2_DIRECTORY_UPDATE_MASK_A2S = 0x4000, // Directory Updates -- A2S
		UNC_M2_DIRECTORY_UPDATE_MASK_ANY = 0x100, // Directory Updates -- Any
		UNC_M2_DIRECTORY_UPDATE_MASK_I2A = 0x400, // Directory Updates -- I2A
		UNC_M2_DIRECTORY_UPDATE_MASK_I2S = 0x200, // Directory Updates -- I2S
		UNC_M2_DIRECTORY_UPDATE_MASK_S2A = 0x1000, // Directory Updates -- S2A
		UNC_M2_DIRECTORY_UPDATE_MASK_S2I = 0x800, // Directory Updates -- S2I
		UNC_M2_EGRESS_ORDERING = 0xae, // Counts number of cycles IV was blocked in the TGR Egress due to SNP/GO Ordering requirements
		UNC_M2_EGRESS_ORDERING_MASK_IV_SNOOPGO_DN = 0x400, // Egress Blocking due to Ordering requirements -- Down
		UNC_M2_EGRESS_ORDERING_MASK_IV_SNOOPGO_UP = 0x100, // Egress Blocking due to Ordering requirements -- Up
		UNC_M2_FAST_ASSERTED = 0xa5, // Counts the number of cycles either the local or incoming distress signals are asserted.  Incoming distress includes up
		UNC_M2_FAST_ASSERTED_MASK_HORZ = 0x200, // FaST wire asserted -- Horizontal
		UNC_M2_FAST_ASSERTED_MASK_VERT = 0x100, // FaST wire asserted -- Vertical
		UNC_M2_HORZ_RING_AD_IN_USE = 0xa7, // Counts the number of cycles that the Horizontal AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk
		UNC_M2_HORZ_RING_AD_IN_USE_MASK_LEFT_EVEN = 0x100, // Horizontal AD Ring In Use -- Left and Even
		UNC_M2_HORZ_RING_AD_IN_USE_MASK_LEFT_ODD = 0x200, // Horizontal AD Ring In Use -- Left and Odd
		UNC_M2_HORZ_RING_AD_IN_USE_MASK_RIGHT_EVEN = 0x400, // Horizontal AD Ring In Use -- Right and Even
		UNC_M2_HORZ_RING_AD_IN_USE_MASK_RIGHT_ODD = 0x800, // Horizontal AD Ring In Use -- Right and Odd
		UNC_M2_HORZ_RING_AK_IN_USE = 0xa9, // Counts the number of cycles that the Horizontal AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk
		UNC_M2_HORZ_RING_AK_IN_USE_MASK_LEFT_EVEN = 0x100, // Horizontal AK Ring In Use -- Left and Even
		UNC_M2_HORZ_RING_AK_IN_USE_MASK_LEFT_ODD = 0x200, // Horizontal AK Ring In Use -- Left and Odd
		UNC_M2_HORZ_RING_AK_IN_USE_MASK_RIGHT_EVEN = 0x400, // Horizontal AK Ring In Use -- Right and Even
		UNC_M2_HORZ_RING_AK_IN_USE_MASK_RIGHT_ODD = 0x800, // Horizontal AK Ring In Use -- Right and Odd
		UNC_M2_HORZ_RING_BL_IN_USE = 0xab, // Counts the number of cycles that the Horizontal BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk
		UNC_M2_HORZ_RING_BL_IN_USE_MASK_LEFT_EVEN = 0x100, // Horizontal BL Ring in Use -- Left and Even
		UNC_M2_HORZ_RING_BL_IN_USE_MASK_LEFT_ODD = 0x200, // Horizontal BL Ring in Use -- Left and Odd
		UNC_M2_HORZ_RING_BL_IN_USE_MASK_RIGHT_EVEN = 0x400, // Horizontal BL Ring in Use -- Right and Even
		UNC_M2_HORZ_RING_BL_IN_USE_MASK_RIGHT_ODD = 0x800, // Horizontal BL Ring in Use -- Right and Odd
		UNC_M2_HORZ_RING_IV_IN_USE = 0xad, // Counts the number of cycles that the Horizontal IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk
		UNC_M2_HORZ_RING_IV_IN_USE_MASK_LEFT = 0x100, // Horizontal IV Ring in Use -- Left
		UNC_M2_HORZ_RING_IV_IN_USE_MASK_RIGHT = 0x400, // Horizontal IV Ring in Use -- Right
		UNC_M2_IMC_READS = 0x37, // TBD
		UNC_M2_IMC_READS_MASK_ALL = 0x400, // M2M Reads Issued to iMC -- All
		UNC_M2_IMC_READS_MASK_FROM_TRANSGRESS = 0x1000, // M2M Reads Issued to iMC -- All
		UNC_M2_IMC_READS_MASK_ISOCH = 0x200, // M2M Reads Issued to iMC -- Critical Priority
		UNC_M2_IMC_READS_MASK_NORMAL = 0x100, // M2M Reads Issued to iMC -- Normal Priority
		UNC_M2_IMC_WRITES = 0x38, // TBD
		UNC_M2_IMC_WRITES_MASK_ALL = 0x1000, // M2M Writes Issued to iMC -- All Writes
		UNC_M2_IMC_WRITES_MASK_FROM_TRANSGRESS = 0x4000, // M2M Writes Issued to iMC -- All
		UNC_M2_IMC_WRITES_MASK_FULL = 0x100, // M2M Writes Issued to iMC -- Full Line Non-ISOCH
		UNC_M2_IMC_WRITES_MASK_FULL_ISOCH = 0x400, // M2M Writes Issued to iMC -- ISOCH Full Line
		UNC_M2_IMC_WRITES_MASK_NI = 0x8000, // M2M Writes Issued to iMC -- All
		UNC_M2_IMC_WRITES_MASK_PARTIAL = 0x200, // M2M Writes Issued to iMC -- Partial Non-ISOCH
		UNC_M2_IMC_WRITES_MASK_PARTIAL_ISOCH = 0x800, // M2M Writes Issued to iMC -- ISOCH Partial
		UNC_M2_PKT_MATCH = 0x4c, // TBD
		UNC_M2_PKT_MATCH_MASK_MC = 0x200, // Number Packet Header Matches -- MC Match
		UNC_M2_PKT_MATCH_MASK_MESH = 0x100, // Number Packet Header Matches -- Mesh Match
		UNC_M2_PREFCAM_CYCLES_FULL = 0x53, // TBD
		UNC_M2_PREFCAM_CYCLES_NE = 0x54, // TBD
		UNC_M2_PREFCAM_DEMAND_PROMOTIONS = 0x56, // TBD
		UNC_M2_PREFCAM_INSERTS = 0x57, // TBD
		UNC_M2_PREFCAM_OCCUPANCY = 0x55, // TBD
		UNC_M2_RING_BOUNCES_HORZ = 0xa1, // Number of cycles incoming messages from the Horizontal ring that were bounced
		UNC_M2_RING_BOUNCES_HORZ_MASK_AD = 0x100, // Messages that bounced on the Horizontal Ring. -- AD
		UNC_M2_RING_BOUNCES_HORZ_MASK_AK = 0x200, // Messages that bounced on the Horizontal Ring. -- AK
		UNC_M2_RING_BOUNCES_HORZ_MASK_BL = 0x400, // Messages that bounced on the Horizontal Ring. -- BL
		UNC_M2_RING_BOUNCES_HORZ_MASK_IV = 0x800, // Messages that bounced on the Horizontal Ring. -- IV
		UNC_M2_RING_BOUNCES_VERT = 0xa0, // Number of cycles incoming messages from the Vertical ring that were bounced
		UNC_M2_RING_BOUNCES_VERT_MASK_AD = 0x100, // Messages that bounced on the Vertical Ring. -- AD
		UNC_M2_RING_BOUNCES_VERT_MASK_AK = 0x200, // Messages that bounced on the Vertical Ring. -- Acknowledgements to core
		UNC_M2_RING_BOUNCES_VERT_MASK_BL = 0x400, // Messages that bounced on the Vertical Ring. -- Data Responses to core
		UNC_M2_RING_BOUNCES_VERT_MASK_IV = 0x800, // Messages that bounced on the Vertical Ring. -- Snoops of processors cachee.
		UNC_M2_RING_SINK_STARVED_HORZ = 0xa3, // TBD
		UNC_M2_RING_SINK_STARVED_HORZ_MASK_AD = 0x100, // Sink Starvation on Horizontal Ring -- AD
		UNC_M2_RING_SINK_STARVED_HORZ_MASK_AK = 0x200, // Sink Starvation on Horizontal Ring -- AK
		UNC_M2_RING_SINK_STARVED_HORZ_MASK_AK_AG1 = 0x2000, // Sink Starvation on Horizontal Ring -- Acknowledgements to Agent 1
		UNC_M2_RING_SINK_STARVED_HORZ_MASK_BL = 0x400, // Sink Starvation on Horizontal Ring -- BL
		UNC_M2_RING_SINK_STARVED_HORZ_MASK_IV = 0x800, // Sink Starvation on Horizontal Ring -- IV
		UNC_M2_RING_SINK_STARVED_VERT = 0xa2, // TBD
		UNC_M2_RING_SINK_STARVED_VERT_MASK_AD = 0x100, // Sink Starvation on Vertical Ring -- AD
		UNC_M2_RING_SINK_STARVED_VERT_MASK_AK = 0x200, // Sink Starvation on Vertical Ring -- Acknowledgements to core
		UNC_M2_RING_SINK_STARVED_VERT_MASK_BL = 0x400, // Sink Starvation on Vertical Ring -- Data Responses to core
		UNC_M2_RING_SINK_STARVED_VERT_MASK_IV = 0x800, // Sink Starvation on Vertical Ring -- Snoops of processors cachee.
		UNC_M2_RING_SRC_THRTL = 0xa4, // TBD
		UNC_M2_RPQ_CYCLES_REG_CREDITS = 0x43, // TBD
		UNC_M2_RPQ_CYCLES_REG_CREDITS_MASK_CHN0 = 0x100, // M2M to iMC RPQ Cycles w/Credits - Regular -- Channel 0
		UNC_M2_RPQ_CYCLES_REG_CREDITS_MASK_CHN1 = 0x200, // M2M to iMC RPQ Cycles w/Credits - Regular -- Channel 1
		UNC_M2_RPQ_CYCLES_REG_CREDITS_MASK_CHN2 = 0x400, // M2M to iMC RPQ Cycles w/Credits - Regular -- Channel 2
		UNC_M2_RPQ_CYCLES_SPEC_CREDITS = 0x44, // TBD
		UNC_M2_RPQ_CYCLES_SPEC_CREDITS_MASK_CHN0 = 0x100, // M2M to iMC RPQ Cycles w/Credits - Special -- Channel 0
		UNC_M2_RPQ_CYCLES_SPEC_CREDITS_MASK_CHN1 = 0x200, // M2M to iMC RPQ Cycles w/Credits - Special -- Channel 1
		UNC_M2_RPQ_CYCLES_SPEC_CREDITS_MASK_CHN2 = 0x400, // M2M to iMC RPQ Cycles w/Credits - Special -- Channel 2
		UNC_M2_RXC_AD_CYCLES_FULL = 0x4, // TBD
		UNC_M2_RXC_AD_CYCLES_NE = 0x3, // TBD
		UNC_M2_RXC_AD_INSERTS = 0x1, // TBD
		UNC_M2_RXC_AD_OCCUPANCY = 0x2, // TBD
		UNC_M2_RXC_BL_CYCLES_FULL = 0x8, // TBD
		UNC_M2_RXC_BL_CYCLES_NE = 0x7, // TBD
		UNC_M2_RXC_BL_INSERTS = 0x5, // TBD
		UNC_M2_RXC_BL_OCCUPANCY = 0x6, // TBD
		UNC_M2_RXR_BUSY_STARVED = 0xb4, // Counts cycles under injection starvation mode.  This starvation is triggered when the CMS Ingress cannot send a transaction onto the mesh for a long period of time.  In this case
		UNC_M2_RXR_BUSY_STARVED_MASK_AD_BNC = 0x100, // Transgress Injection Starvation -- AD - Bounce
		UNC_M2_RXR_BUSY_STARVED_MASK_AD_CRD = 0x1000, // Transgress Injection Starvation -- AD - Credit
		UNC_M2_RXR_BUSY_STARVED_MASK_BL_BNC = 0x400, // Transgress Injection Starvation -- BL - Bounce
		UNC_M2_RXR_BUSY_STARVED_MASK_BL_CRD = 0x4000, // Transgress Injection Starvation -- BL - Credit
		UNC_M2_RXR_BYPASS = 0xb2, // Number of packets bypassing the CMS Ingress
		UNC_M2_RXR_BYPASS_MASK_AD_BNC = 0x100, // Transgress Ingress Bypass -- AD - Bounce
		UNC_M2_RXR_BYPASS_MASK_AD_CRD = 0x1000, // Transgress Ingress Bypass -- AD - Credit
		UNC_M2_RXR_BYPASS_MASK_AK_BNC = 0x200, // Transgress Ingress Bypass -- AK - Bounce
		UNC_M2_RXR_BYPASS_MASK_BL_BNC = 0x400, // Transgress Ingress Bypass -- BL - Bounce
		UNC_M2_RXR_BYPASS_MASK_BL_CRD = 0x4000, // Transgress Ingress Bypass -- BL - Credit
		UNC_M2_RXR_BYPASS_MASK_IV_BNC = 0x800, // Transgress Ingress Bypass -- IV - Bounce
		UNC_M2_RXR_CRD_STARVED = 0xb3, // Counts cycles under injection starvation mode.  This starvation is triggered when the CMS Ingress cannot send a transaction onto the mesh for a long period of time.  In this case
		UNC_M2_RXR_CRD_STARVED_MASK_AD_BNC = 0x100, // Transgress Injection Starvation -- AD - Bounce
		UNC_M2_RXR_CRD_STARVED_MASK_AD_CRD = 0x1000, // Transgress Injection Starvation -- AD - Credit
		UNC_M2_RXR_CRD_STARVED_MASK_AK_BNC = 0x200, // Transgress Injection Starvation -- AK - Bounce
		UNC_M2_RXR_CRD_STARVED_MASK_BL_BNC = 0x400, // Transgress Injection Starvation -- BL - Bounce
		UNC_M2_RXR_CRD_STARVED_MASK_BL_CRD = 0x4000, // Transgress Injection Starvation -- BL - Credit
		UNC_M2_RXR_CRD_STARVED_MASK_IFV = 0x8000, // Transgress Injection Starvation -- IFV - Credit
		UNC_M2_RXR_CRD_STARVED_MASK_IV_BNC = 0x800, // Transgress Injection Starvation -- IV - Bounce
		UNC_M2_RXR_INSERTS = 0xb1, // Number of allocations into the CMS Ingress  The Ingress is used to queue up requests received from the mesh
		UNC_M2_RXR_INSERTS_MASK_AD_BNC = 0x100, // Transgress Ingress Allocations -- AD - Bounce
		UNC_M2_RXR_INSERTS_MASK_AD_CRD = 0x1000, // Transgress Ingress Allocations -- AD - Credit
		UNC_M2_RXR_INSERTS_MASK_AK_BNC = 0x200, // Transgress Ingress Allocations -- AK - Bounce
		UNC_M2_RXR_INSERTS_MASK_BL_BNC = 0x400, // Transgress Ingress Allocations -- BL - Bounce
		UNC_M2_RXR_INSERTS_MASK_BL_CRD = 0x4000, // Transgress Ingress Allocations -- BL - Credit
		UNC_M2_RXR_INSERTS_MASK_IV_BNC = 0x800, // Transgress Ingress Allocations -- IV - Bounce
		UNC_M2_RXR_OCCUPANCY = 0xb0, // Occupancy event for the Ingress buffers in the CMS  The Ingress is used to queue up requests received from the mesh
		UNC_M2_RXR_OCCUPANCY_MASK_AD_BNC = 0x100, // Transgress Ingress Occupancy -- AD - Bounce
		UNC_M2_RXR_OCCUPANCY_MASK_AD_CRD = 0x1000, // Transgress Ingress Occupancy -- AD - Credit
		UNC_M2_RXR_OCCUPANCY_MASK_AK_BNC = 0x200, // Transgress Ingress Occupancy -- AK - Bounce
		UNC_M2_RXR_OCCUPANCY_MASK_BL_BNC = 0x400, // Transgress Ingress Occupancy -- BL - Bounce
		UNC_M2_RXR_OCCUPANCY_MASK_BL_CRD = 0x4000, // Transgress Ingress Occupancy -- BL - Credit
		UNC_M2_RXR_OCCUPANCY_MASK_IV_BNC = 0x800, // Transgress Ingress Occupancy -- IV - Bounce
		UNC_M2_STALL_NO_TXR_HORZ_CRD_AD_AG0 = 0xd0, // Number of cycles the AD Agent 0 Egress Buffer is stalled waiting for a TGR credit to become available
		UNC_M2_STALL_NO_TXR_HORZ_CRD_AD_AG0_MASK_TGR0 = 0x100, // Stall on No AD Agent0 Transgress Credits -- For Transgress 0
		UNC_M2_STALL_NO_TXR_HORZ_CRD_AD_AG0_MASK_TGR1 = 0x200, // Stall on No AD Agent0 Transgress Credits -- For Transgress 1
		UNC_M2_STALL_NO_TXR_HORZ_CRD_AD_AG0_MASK_TGR2 = 0x400, // Stall on No AD Agent0 Transgress Credits -- For Transgress 2
		UNC_M2_STALL_NO_TXR_HORZ_CRD_AD_AG0_MASK_TGR3 = 0x800, // Stall on No AD Agent0 Transgress Credits -- For Transgress 3
		UNC_M2_STALL_NO_TXR_HORZ_CRD_AD_AG0_MASK_TGR4 = 0x1000, // Stall on No AD Agent0 Transgress Credits -- For Transgress 4
		UNC_M2_STALL_NO_TXR_HORZ_CRD_AD_AG0_MASK_TGR5 = 0x2000, // Stall on No AD Agent0 Transgress Credits -- For Transgress 5
		UNC_M2_STALL_NO_TXR_HORZ_CRD_AD_AG1 = 0xd2, // Number of cycles the AD Agent 1 Egress Buffer is stalled waiting for a TGR credit to become available
		UNC_M2_STALL_NO_TXR_HORZ_CRD_AD_AG1_MASK_TGR0 = 0x100, // Stall on No AD Agent1 Transgress Credits -- For Transgress 0
		UNC_M2_STALL_NO_TXR_HORZ_CRD_AD_AG1_MASK_TGR1 = 0x200, // Stall on No AD Agent1 Transgress Credits -- For Transgress 1
		UNC_M2_STALL_NO_TXR_HORZ_CRD_AD_AG1_MASK_TGR2 = 0x400, // Stall on No AD Agent1 Transgress Credits -- For Transgress 2
		UNC_M2_STALL_NO_TXR_HORZ_CRD_AD_AG1_MASK_TGR3 = 0x800, // Stall on No AD Agent1 Transgress Credits -- For Transgress 3
		UNC_M2_STALL_NO_TXR_HORZ_CRD_AD_AG1_MASK_TGR4 = 0x1000, // Stall on No AD Agent1 Transgress Credits -- For Transgress 4
		UNC_M2_STALL_NO_TXR_HORZ_CRD_AD_AG1_MASK_TGR5 = 0x2000, // Stall on No AD Agent1 Transgress Credits -- For Transgress 5
		UNC_M2_STALL_NO_TXR_HORZ_CRD_BL_AG0 = 0xd4, // Number of cycles the BL Agent 0 Egress Buffer is stalled waiting for a TGR credit to become available
		UNC_M2_STALL_NO_TXR_HORZ_CRD_BL_AG0_MASK_TGR0 = 0x100, // Stall on No BL Agent0 Transgress Credits -- For Transgress 0
		UNC_M2_STALL_NO_TXR_HORZ_CRD_BL_AG0_MASK_TGR1 = 0x200, // Stall on No BL Agent0 Transgress Credits -- For Transgress 1
		UNC_M2_STALL_NO_TXR_HORZ_CRD_BL_AG0_MASK_TGR2 = 0x400, // Stall on No BL Agent0 Transgress Credits -- For Transgress 2
		UNC_M2_STALL_NO_TXR_HORZ_CRD_BL_AG0_MASK_TGR3 = 0x800, // Stall on No BL Agent0 Transgress Credits -- For Transgress 3
		UNC_M2_STALL_NO_TXR_HORZ_CRD_BL_AG0_MASK_TGR4 = 0x1000, // Stall on No BL Agent0 Transgress Credits -- For Transgress 4
		UNC_M2_STALL_NO_TXR_HORZ_CRD_BL_AG0_MASK_TGR5 = 0x2000, // Stall on No BL Agent0 Transgress Credits -- For Transgress 5
		UNC_M2_STALL_NO_TXR_HORZ_CRD_BL_AG1 = 0xd6, // Number of cycles the BL Agent 1 Egress Buffer is stalled waiting for a TGR credit to become available
		UNC_M2_STALL_NO_TXR_HORZ_CRD_BL_AG1_MASK_TGR0 = 0x100, // Stall on No BL Agent1 Transgress Credits -- For Transgress 0
		UNC_M2_STALL_NO_TXR_HORZ_CRD_BL_AG1_MASK_TGR1 = 0x200, // Stall on No BL Agent1 Transgress Credits -- For Transgress 1
		UNC_M2_STALL_NO_TXR_HORZ_CRD_BL_AG1_MASK_TGR2 = 0x400, // Stall on No BL Agent1 Transgress Credits -- For Transgress 2
		UNC_M2_STALL_NO_TXR_HORZ_CRD_BL_AG1_MASK_TGR3 = 0x800, // Stall on No BL Agent1 Transgress Credits -- For Transgress 3
		UNC_M2_STALL_NO_TXR_HORZ_CRD_BL_AG1_MASK_TGR4 = 0x1000, // Stall on No BL Agent1 Transgress Credits -- For Transgress 4
		UNC_M2_STALL_NO_TXR_HORZ_CRD_BL_AG1_MASK_TGR5 = 0x2000, // Stall on No BL Agent1 Transgress Credits -- For Transgress 5
		UNC_M2_TGR_AD_CREDITS = 0x41, // TBD
		UNC_M2_TGR_BL_CREDITS = 0x42, // TBD
		UNC_M2_TRACKER_CYCLES_FULL = 0x45, // TBD
		UNC_M2_TRACKER_CYCLES_FULL_MASK_CH0 = 0x100, // Tracker Cycles Full -- Channel 0
		UNC_M2_TRACKER_CYCLES_FULL_MASK_CH1 = 0x200, // Tracker Cycles Full -- Channel 1
		UNC_M2_TRACKER_CYCLES_FULL_MASK_CH2 = 0x400, // Tracker Cycles Full -- Channel 2
		UNC_M2_TRACKER_CYCLES_NE = 0x46, // TBD
		UNC_M2_TRACKER_CYCLES_NE_MASK_CH0 = 0x100, // Tracker Cycles Not Empty -- Channel 0
		UNC_M2_TRACKER_CYCLES_NE_MASK_CH1 = 0x200, // Tracker Cycles Not Empty -- Channel 1
		UNC_M2_TRACKER_CYCLES_NE_MASK_CH2 = 0x400, // Tracker Cycles Not Empty -- Channel 2
		UNC_M2_TRACKER_INSERTS = 0x49, // TBD
		UNC_M2_TRACKER_INSERTS_MASK_CH0 = 0x100, // Tracker Inserts -- Channel 0
		UNC_M2_TRACKER_INSERTS_MASK_CH1 = 0x200, // Tracker Inserts -- Channel 1
		UNC_M2_TRACKER_INSERTS_MASK_CH2 = 0x400, // Tracker Inserts -- Channel 2
		UNC_M2_TRACKER_OCCUPANCY = 0x47, // TBD
		UNC_M2_TRACKER_OCCUPANCY_MASK_CH0 = 0x100, // Tracker Occupancy -- Channel 0
		UNC_M2_TRACKER_OCCUPANCY_MASK_CH1 = 0x200, // Tracker Occupancy -- Channel 1
		UNC_M2_TRACKER_OCCUPANCY_MASK_CH2 = 0x400, // Tracker Occupancy -- Channel 2
		UNC_M2_TRACKER_PENDING_OCCUPANCY = 0x48, // TBD
		UNC_M2_TXC_AD_CREDITS_ACQUIRED = 0xd, // TBD
		UNC_M2_TXC_AD_CREDIT_OCCUPANCY = 0xe, // TBD
		UNC_M2_TXC_AD_CYCLES_FULL = 0xc, // TBD
		UNC_M2_TXC_AD_CYCLES_NE = 0xb, // TBD
		UNC_M2_TXC_AD_INSERTS = 0x9, // TBD
		UNC_M2_TXC_AD_NO_CREDIT_CYCLES = 0xf, // TBD
		UNC_M2_TXC_AD_NO_CREDIT_STALLED = 0x10, // TBD
		UNC_M2_TXC_AD_OCCUPANCY = 0xa, // TBD
		UNC_M2_TXC_AK = 0x39, // TBD
		UNC_M2_TXC_AK_MASK_CRD_CBO = 0x200, // Outbound Ring Transactions on AK -- CRD Transactions to Cbo
		UNC_M2_TXC_AK_MASK_NDR = 0x100, // Outbound Ring Transactions on AK -- NDR Transactions
		UNC_M2_TXC_AK_CREDITS_ACQUIRED = 0x1d, // TBD
		UNC_M2_TXC_AK_CREDITS_ACQUIRED_MASK_CMS0 = 0x100, // AK Egress (to CMS) Credit Acquired -- Common Mesh Stop - Near Side
		UNC_M2_TXC_AK_CREDITS_ACQUIRED_MASK_CMS1 = 0x200, // AK Egress (to CMS) Credit Acquired -- Common Mesh Stop - Far Side
		UNC_M2_TXC_AK_CREDIT_OCCUPANCY = 0x1e, // TBD
		UNC_M2_TXC_AK_CREDIT_OCCUPANCY_MASK_CMS0 = 0x100, // AK Egress (to CMS) Credits Occupancy -- Common Mesh Stop - Near Side
		UNC_M2_TXC_AK_CREDIT_OCCUPANCY_MASK_CMS1 = 0x200, // AK Egress (to CMS) Credits Occupancy -- Common Mesh Stop - Far Side
		UNC_M2_TXC_AK_CYCLES_FULL = 0x14, // TBD
		UNC_M2_TXC_AK_CYCLES_FULL_MASK_ALL = 0x300, // AK Egress (to CMS) Full -- All
		UNC_M2_TXC_AK_CYCLES_FULL_MASK_CMS0 = 0x100, // AK Egress (to CMS) Full -- Common Mesh Stop - Near Side
		UNC_M2_TXC_AK_CYCLES_FULL_MASK_CMS1 = 0x200, // AK Egress (to CMS) Full -- Common Mesh Stop - Far Side
		UNC_M2_TXC_AK_CYCLES_FULL_MASK_RDCRD0 = 0x800, // AK Egress (to CMS) Full -- Read Credit Request
		UNC_M2_TXC_AK_CYCLES_FULL_MASK_RDCRD1 = 0x8800, // AK Egress (to CMS) Full -- Read Credit Request
		UNC_M2_TXC_AK_CYCLES_FULL_MASK_WRCMP0 = 0x2000, // AK Egress (to CMS) Full -- Write Compare Request
		UNC_M2_TXC_AK_CYCLES_FULL_MASK_WRCMP1 = 0xa000, // AK Egress (to CMS) Full -- Write Compare Request
		UNC_M2_TXC_AK_CYCLES_FULL_MASK_WRCRD0 = 0x1000, // AK Egress (to CMS) Full -- Write Credit Request
		UNC_M2_TXC_AK_CYCLES_FULL_MASK_WRCRD1 = 0x9000, // AK Egress (to CMS) Full -- Write Credit Request
		UNC_M2_TXC_AK_CYCLES_NE = 0x13, // TBD
		UNC_M2_TXC_AK_CYCLES_NE_MASK_ALL = 0x300, // AK Egress (to CMS) Not Empty -- All
		UNC_M2_TXC_AK_CYCLES_NE_MASK_CMS0 = 0x100, // AK Egress (to CMS) Not Empty -- Common Mesh Stop - Near Side
		UNC_M2_TXC_AK_CYCLES_NE_MASK_CMS1 = 0x200, // AK Egress (to CMS) Not Empty -- Common Mesh Stop - Far Side
		UNC_M2_TXC_AK_CYCLES_NE_MASK_RDCRD = 0x800, // AK Egress (to CMS) Not Empty -- Read Credit Request
		UNC_M2_TXC_AK_CYCLES_NE_MASK_WRCMP = 0x2000, // AK Egress (to CMS) Not Empty -- Write Compare Request
		UNC_M2_TXC_AK_CYCLES_NE_MASK_WRCRD = 0x1000, // AK Egress (to CMS) Not Empty -- Write Credit Request
		UNC_M2_TXC_AK_INSERTS = 0x11, // TBD
		UNC_M2_TXC_AK_INSERTS_MASK_ALL = 0x300, // AK Egress (to CMS) Allocations -- All
		UNC_M2_TXC_AK_INSERTS_MASK_CMS0 = 0x100, // AK Egress (to CMS) Allocations -- Common Mesh Stop - Near Side
		UNC_M2_TXC_AK_INSERTS_MASK_CMS1 = 0x200, // AK Egress (to CMS) Allocations -- Common Mesh Stop - Far Side
		UNC_M2_TXC_AK_INSERTS_MASK_PREF_RD_CAM_HIT = 0x4000, // AK Egress (to CMS) Allocations -- Prefetch Read Cam Hit
		UNC_M2_TXC_AK_INSERTS_MASK_RDCRD = 0x800, // AK Egress (to CMS) Allocations -- Read Credit Request
		UNC_M2_TXC_AK_INSERTS_MASK_WRCMP = 0x2000, // AK Egress (to CMS) Allocations -- Write Compare Request
		UNC_M2_TXC_AK_INSERTS_MASK_WRCRD = 0x1000, // AK Egress (to CMS) Allocations -- Write Credit Request
		UNC_M2_TXC_AK_NO_CREDIT_CYCLES = 0x1f, // TBD
		UNC_M2_TXC_AK_NO_CREDIT_CYCLES_MASK_CMS0 = 0x100, // Cycles with No AK Egress (to CMS) Credits -- Common Mesh Stop - Near Side
		UNC_M2_TXC_AK_NO_CREDIT_CYCLES_MASK_CMS1 = 0x200, // Cycles with No AK Egress (to CMS) Credits -- Common Mesh Stop - Far Side
		UNC_M2_TXC_AK_NO_CREDIT_STALLED = 0x20, // TBD
		UNC_M2_TXC_AK_NO_CREDIT_STALLED_MASK_CMS0 = 0x100, // Cycles Stalled with No AK Egress (to CMS) Credits -- Common Mesh Stop - Near Side
		UNC_M2_TXC_AK_NO_CREDIT_STALLED_MASK_CMS1 = 0x200, // Cycles Stalled with No AK Egress (to CMS) Credits -- Common Mesh Stop - Far Side
		UNC_M2_TXC_AK_OCCUPANCY = 0x12, // TBD
		UNC_M2_TXC_AK_OCCUPANCY_MASK_ALL = 0x300, // AK Egress (to CMS) Occupancy -- All
		UNC_M2_TXC_AK_OCCUPANCY_MASK_CMS0 = 0x100, // AK Egress (to CMS) Occupancy -- Common Mesh Stop - Near Side
		UNC_M2_TXC_AK_OCCUPANCY_MASK_CMS1 = 0x200, // AK Egress (to CMS) Occupancy -- Common Mesh Stop - Far Side
		UNC_M2_TXC_AK_OCCUPANCY_MASK_RDCRD = 0x800, // AK Egress (to CMS) Occupancy -- Read Credit Request
		UNC_M2_TXC_AK_OCCUPANCY_MASK_WRCMP = 0x2000, // AK Egress (to CMS) Occupancy -- Write Compare Request
		UNC_M2_TXC_AK_OCCUPANCY_MASK_WRCRD = 0x1000, // AK Egress (to CMS) Occupancy -- Write Credit Request
		UNC_M2_TXC_AK_SIDEBAND = 0x6b, // TBD
		UNC_M2_TXC_AK_SIDEBAND_MASK_RD = 0x100, // AK Egress (to CMS) Sideband --
		UNC_M2_TXC_AK_SIDEBAND_MASK_WR = 0x200, // AK Egress (to CMS) Sideband --
		UNC_M2_TXC_BL = 0x40, // TBD
		UNC_M2_TXC_BL_MASK_DRS_CACHE = 0x100, // Outbound DRS Ring Transactions to Cache -- Data to Cache
		UNC_M2_TXC_BL_MASK_DRS_CORE = 0x200, // Outbound DRS Ring Transactions to Cache -- Data to Core
		UNC_M2_TXC_BL_MASK_DRS_UPI = 0x400, // Outbound DRS Ring Transactions to Cache -- Data to QPI
		UNC_M2_TXC_BL_CREDITS_ACQUIRED = 0x19, // TBD
		UNC_M2_TXC_BL_CREDITS_ACQUIRED_MASK_CMS0 = 0x100, // BL Egress (to CMS) Credit Acquired -- Common Mesh Stop - Near Side
		UNC_M2_TXC_BL_CREDITS_ACQUIRED_MASK_CMS1 = 0x200, // BL Egress (to CMS) Credit Acquired -- Common Mesh Stop - Far Side
		UNC_M2_TXC_BL_CREDIT_OCCUPANCY = 0x1a, // TBD
		UNC_M2_TXC_BL_CREDIT_OCCUPANCY_MASK_CMS0 = 0x100, // BL Egress (to CMS) Credits Occupancy -- Common Mesh Stop - Near Side
		UNC_M2_TXC_BL_CREDIT_OCCUPANCY_MASK_CMS1 = 0x200, // BL Egress (to CMS) Credits Occupancy -- Common Mesh Stop - Far Side
		UNC_M2_TXC_BL_CYCLES_FULL = 0x18, // TBD
		UNC_M2_TXC_BL_CYCLES_FULL_MASK_ALL = 0x300, // BL Egress (to CMS) Full -- All
		UNC_M2_TXC_BL_CYCLES_FULL_MASK_CMS0 = 0x100, // BL Egress (to CMS) Full -- Common Mesh Stop - Near Side
		UNC_M2_TXC_BL_CYCLES_FULL_MASK_CMS1 = 0x200, // BL Egress (to CMS) Full -- Common Mesh Stop - Far Side
		UNC_M2_TXC_BL_CYCLES_NE = 0x17, // TBD
		UNC_M2_TXC_BL_CYCLES_NE_MASK_ALL = 0x300, // BL Egress (to CMS) Not Empty -- All
		UNC_M2_TXC_BL_CYCLES_NE_MASK_CMS0 = 0x100, // BL Egress (to CMS) Not Empty -- Common Mesh Stop - Near Side
		UNC_M2_TXC_BL_CYCLES_NE_MASK_CMS1 = 0x200, // BL Egress (to CMS) Not Empty -- Common Mesh Stop - Far Side
		UNC_M2_TXC_BL_INSERTS = 0x15, // TBD
		UNC_M2_TXC_BL_INSERTS_MASK_ALL = 0x300, // BL Egress (to CMS) Allocations -- All
		UNC_M2_TXC_BL_INSERTS_MASK_CMS0 = 0x100, // BL Egress (to CMS) Allocations -- Common Mesh Stop - Near Side
		UNC_M2_TXC_BL_INSERTS_MASK_CMS1 = 0x200, // BL Egress (to CMS) Allocations -- Common Mesh Stop - Far Side
		UNC_M2_TXC_BL_NO_CREDIT_CYCLES = 0x1b, // TBD
		UNC_M2_TXC_BL_NO_CREDIT_CYCLES_MASK_CMS0 = 0x100, // Cycles with No BL Egress (to CMS) Credits -- Common Mesh Stop - Near Side
		UNC_M2_TXC_BL_NO_CREDIT_CYCLES_MASK_CMS1 = 0x200, // Cycles with No BL Egress (to CMS) Credits -- Common Mesh Stop - Far Side
		UNC_M2_TXC_BL_NO_CREDIT_STALLED = 0x1c, // TBD
		UNC_M2_TXC_BL_NO_CREDIT_STALLED_MASK_CMS0 = 0x100, // Cycles Stalled with No BL Egress (to CMS) Credits -- Common Mesh Stop - Near Side
		UNC_M2_TXC_BL_NO_CREDIT_STALLED_MASK_CMS1 = 0x200, // Cycles Stalled with No BL Egress (to CMS) Credits -- Common Mesh Stop - Far Side
		UNC_M2_TXC_BL_OCCUPANCY = 0x16, // TBD
		UNC_M2_TXC_BL_OCCUPANCY_MASK_ALL = 0x300, // BL Egress (to CMS) Occupancy -- All
		UNC_M2_TXC_BL_OCCUPANCY_MASK_CMS0 = 0x100, // BL Egress (to CMS) Occupancy -- Common Mesh Stop - Near Side
		UNC_M2_TXC_BL_OCCUPANCY_MASK_CMS1 = 0x200, // BL Egress (to CMS) Occupancy -- Common Mesh Stop - Far Side
		UNC_M2_TXR_HORZ_ADS_USED = 0x9d, // Number of packets using the Horizontal Anti-Deadlock Slot
		UNC_M2_TXR_HORZ_ADS_USED_MASK_AD_BNC = 0x100, // CMS Horizontal ADS Used -- AD - Bounce
		UNC_M2_TXR_HORZ_ADS_USED_MASK_AD_CRD = 0x1000, // CMS Horizontal ADS Used -- AD - Credit
		UNC_M2_TXR_HORZ_ADS_USED_MASK_AK_BNC = 0x200, // CMS Horizontal ADS Used -- AK - Bounce
		UNC_M2_TXR_HORZ_ADS_USED_MASK_BL_BNC = 0x400, // CMS Horizontal ADS Used -- BL - Bounce
		UNC_M2_TXR_HORZ_ADS_USED_MASK_BL_CRD = 0x4000, // CMS Horizontal ADS Used -- BL - Credit
		UNC_M2_TXR_HORZ_BYPASS = 0x9f, // Number of packets bypassing the Horizontal Egress
		UNC_M2_TXR_HORZ_BYPASS_MASK_AD_BNC = 0x100, // CMS Horizontal Bypass Used -- AD - Bounce
		UNC_M2_TXR_HORZ_BYPASS_MASK_AD_CRD = 0x1000, // CMS Horizontal Bypass Used -- AD - Credit
		UNC_M2_TXR_HORZ_BYPASS_MASK_AK_BNC = 0x200, // CMS Horizontal Bypass Used -- AK - Bounce
		UNC_M2_TXR_HORZ_BYPASS_MASK_BL_BNC = 0x400, // CMS Horizontal Bypass Used -- BL - Bounce
		UNC_M2_TXR_HORZ_BYPASS_MASK_BL_CRD = 0x4000, // CMS Horizontal Bypass Used -- BL - Credit
		UNC_M2_TXR_HORZ_BYPASS_MASK_IV_BNC = 0x800, // CMS Horizontal Bypass Used -- IV - Bounce
		UNC_M2_TXR_HORZ_CYCLES_FULL = 0x96, // Cycles the Transgress buffers in the Common Mesh Stop are Full.  The egress is used to queue up requests destined for the Horizontal Ring on the Mesh.
		UNC_M2_TXR_HORZ_CYCLES_FULL_MASK_AD_BNC = 0x100, // Cycles CMS Horizontal Egress Queue is Full -- AD - Bounce
		UNC_M2_TXR_HORZ_CYCLES_FULL_MASK_AD_CRD = 0x1000, // Cycles CMS Horizontal Egress Queue is Full -- AD - Credit
		UNC_M2_TXR_HORZ_CYCLES_FULL_MASK_AK_BNC = 0x200, // Cycles CMS Horizontal Egress Queue is Full -- AK - Bounce
		UNC_M2_TXR_HORZ_CYCLES_FULL_MASK_BL_BNC = 0x400, // Cycles CMS Horizontal Egress Queue is Full -- BL - Bounce
		UNC_M2_TXR_HORZ_CYCLES_FULL_MASK_BL_CRD = 0x4000, // Cycles CMS Horizontal Egress Queue is Full -- BL - Credit
		UNC_M2_TXR_HORZ_CYCLES_FULL_MASK_IV_BNC = 0x800, // Cycles CMS Horizontal Egress Queue is Full -- IV - Bounce
		UNC_M2_TXR_HORZ_CYCLES_NE = 0x97, // Cycles the Transgress buffers in the Common Mesh Stop are Not-Empty.  The egress is used to queue up requests destined for the Horizontal Ring on the Mesh.
		UNC_M2_TXR_HORZ_CYCLES_NE_MASK_AD_BNC = 0x100, // Cycles CMS Horizontal Egress Queue is Not Empty -- AD - Bounce
		UNC_M2_TXR_HORZ_CYCLES_NE_MASK_AD_CRD = 0x1000, // Cycles CMS Horizontal Egress Queue is Not Empty -- AD - Credit
		UNC_M2_TXR_HORZ_CYCLES_NE_MASK_AK_BNC = 0x200, // Cycles CMS Horizontal Egress Queue is Not Empty -- AK - Bounce
		UNC_M2_TXR_HORZ_CYCLES_NE_MASK_BL_BNC = 0x400, // Cycles CMS Horizontal Egress Queue is Not Empty -- BL - Bounce
		UNC_M2_TXR_HORZ_CYCLES_NE_MASK_BL_CRD = 0x4000, // Cycles CMS Horizontal Egress Queue is Not Empty -- BL - Credit
		UNC_M2_TXR_HORZ_CYCLES_NE_MASK_IV_BNC = 0x800, // Cycles CMS Horizontal Egress Queue is Not Empty -- IV - Bounce
		UNC_M2_TXR_HORZ_INSERTS = 0x95, // Number of allocations into the Transgress buffers in the Common Mesh Stop  The egress is used to queue up requests destined for the Horizontal Ring on the Mesh.
		UNC_M2_TXR_HORZ_INSERTS_MASK_AD_BNC = 0x100, // CMS Horizontal Egress Inserts -- AD - Bounce
		UNC_M2_TXR_HORZ_INSERTS_MASK_AD_CRD = 0x1000, // CMS Horizontal Egress Inserts -- AD - Credit
		UNC_M2_TXR_HORZ_INSERTS_MASK_AK_BNC = 0x200, // CMS Horizontal Egress Inserts -- AK - Bounce
		UNC_M2_TXR_HORZ_INSERTS_MASK_BL_BNC = 0x400, // CMS Horizontal Egress Inserts -- BL - Bounce
		UNC_M2_TXR_HORZ_INSERTS_MASK_BL_CRD = 0x4000, // CMS Horizontal Egress Inserts -- BL - Credit
		UNC_M2_TXR_HORZ_INSERTS_MASK_IV_BNC = 0x800, // CMS Horizontal Egress Inserts -- IV - Bounce
		UNC_M2_TXR_HORZ_NACK = 0x99, // Counts number of Egress packets NACKed on to the Horizontal Rinng
		UNC_M2_TXR_HORZ_NACK_MASK_AD_BNC = 0x100, // CMS Horizontal Egress NACKs -- AD - Bounce
		UNC_M2_TXR_HORZ_NACK_MASK_AD_CRD = 0x2000, // CMS Horizontal Egress NACKs -- AD - Credit
		UNC_M2_TXR_HORZ_NACK_MASK_AK_BNC = 0x200, // CMS Horizontal Egress NACKs -- AK - Bounce
		UNC_M2_TXR_HORZ_NACK_MASK_BL_BNC = 0x400, // CMS Horizontal Egress NACKs -- BL - Bounce
		UNC_M2_TXR_HORZ_NACK_MASK_BL_CRD = 0x4000, // CMS Horizontal Egress NACKs -- BL - Credit
		UNC_M2_TXR_HORZ_NACK_MASK_IV_BNC = 0x800, // CMS Horizontal Egress NACKs -- IV - Bounce
		UNC_M2_TXR_HORZ_OCCUPANCY = 0x94, // Occupancy event for the Transgress buffers in the Common Mesh Stop  The egress is used to queue up requests destined for the Horizontal Ring on the Mesh.
		UNC_M2_TXR_HORZ_OCCUPANCY_MASK_AD_BNC = 0x100, // CMS Horizontal Egress Occupancy -- AD - Bounce
		UNC_M2_TXR_HORZ_OCCUPANCY_MASK_AD_CRD = 0x1000, // CMS Horizontal Egress Occupancy -- AD - Credit
		UNC_M2_TXR_HORZ_OCCUPANCY_MASK_AK_BNC = 0x200, // CMS Horizontal Egress Occupancy -- AK - Bounce
		UNC_M2_TXR_HORZ_OCCUPANCY_MASK_BL_BNC = 0x400, // CMS Horizontal Egress Occupancy -- BL - Bounce
		UNC_M2_TXR_HORZ_OCCUPANCY_MASK_BL_CRD = 0x4000, // CMS Horizontal Egress Occupancy -- BL - Credit
		UNC_M2_TXR_HORZ_OCCUPANCY_MASK_IV_BNC = 0x800, // CMS Horizontal Egress Occupancy -- IV - Bounce
		UNC_M2_TXR_HORZ_STARVED = 0x9b, // Counts injection starvation.  This starvation is triggered when the CMS Transgress buffer cannot send a transaction onto the Horizontal ring for a long period of time.
		UNC_M2_TXR_HORZ_STARVED_MASK_AD_BNC = 0x100, // CMS Horizontal Egress Injection Starvation -- AD - Bounce
		UNC_M2_TXR_HORZ_STARVED_MASK_AK_BNC = 0x200, // CMS Horizontal Egress Injection Starvation -- AK - Bounce
		UNC_M2_TXR_HORZ_STARVED_MASK_BL_BNC = 0x400, // CMS Horizontal Egress Injection Starvation -- BL - Bounce
		UNC_M2_TXR_HORZ_STARVED_MASK_IV_BNC = 0x800, // CMS Horizontal Egress Injection Starvation -- IV - Bounce
		UNC_M2_TXR_VERT_ADS_USED = 0x9c, // Number of packets using the Vertical Anti-Deadlock Slot
		UNC_M2_TXR_VERT_ADS_USED_MASK_AD_AG0 = 0x100, // CMS Vertical ADS Used -- AD - Agent 0
		UNC_M2_TXR_VERT_ADS_USED_MASK_AD_AG1 = 0x1000, // CMS Vertical ADS Used -- AD - Agent 1
		UNC_M2_TXR_VERT_ADS_USED_MASK_AK_AG0 = 0x200, // CMS Vertical ADS Used -- AK - Agent 0
		UNC_M2_TXR_VERT_ADS_USED_MASK_AK_AG1 = 0x2000, // CMS Vertical ADS Used -- AK - Agent 1
		UNC_M2_TXR_VERT_ADS_USED_MASK_BL_AG0 = 0x400, // CMS Vertical ADS Used -- BL - Agent 0
		UNC_M2_TXR_VERT_ADS_USED_MASK_BL_AG1 = 0x4000, // CMS Vertical ADS Used -- BL - Agent 1
		UNC_M2_TXR_VERT_BYPASS = 0x9e, // Number of packets bypassing the Vertical Egress
		UNC_M2_TXR_VERT_BYPASS_MASK_AD_AG0 = 0x100, // CMS Vertical ADS Used -- AD - Agent 0
		UNC_M2_TXR_VERT_BYPASS_MASK_AD_AG1 = 0x1000, // CMS Vertical ADS Used -- AD - Agent 1
		UNC_M2_TXR_VERT_BYPASS_MASK_AK_AG0 = 0x200, // CMS Vertical ADS Used -- AK - Agent 0
		UNC_M2_TXR_VERT_BYPASS_MASK_AK_AG1 = 0x2000, // CMS Vertical ADS Used -- AK - Agent 1
		UNC_M2_TXR_VERT_BYPASS_MASK_BL_AG0 = 0x400, // CMS Vertical ADS Used -- BL - Agent 0
		UNC_M2_TXR_VERT_BYPASS_MASK_BL_AG1 = 0x4000, // CMS Vertical ADS Used -- BL - Agent 1
		UNC_M2_TXR_VERT_BYPASS_MASK_IV = 0x800, // CMS Vertical ADS Used -- IV
		UNC_M2_TXR_VERT_CYCLES_FULL = 0x92, // Number of cycles the Common Mesh Stop Egress was Not Full.  The Egress is used to queue up requests destined for the Vertical Ring on the Mesh.
		UNC_M2_TXR_VERT_CYCLES_FULL_MASK_AD_AG0 = 0x100, // Cycles CMS Vertical Egress Queue Is Full -- AD - Agent 0
		UNC_M2_TXR_VERT_CYCLES_FULL_MASK_AD_AG1 = 0x1000, // Cycles CMS Vertical Egress Queue Is Full -- AD - Agent 1
		UNC_M2_TXR_VERT_CYCLES_FULL_MASK_AK_AG0 = 0x200, // Cycles CMS Vertical Egress Queue Is Full -- AK - Agent 0
		UNC_M2_TXR_VERT_CYCLES_FULL_MASK_AK_AG1 = 0x2000, // Cycles CMS Vertical Egress Queue Is Full -- AK - Agent 1
		UNC_M2_TXR_VERT_CYCLES_FULL_MASK_BL_AG0 = 0x400, // Cycles CMS Vertical Egress Queue Is Full -- BL - Agent 0
		UNC_M2_TXR_VERT_CYCLES_FULL_MASK_BL_AG1 = 0x4000, // Cycles CMS Vertical Egress Queue Is Full -- BL - Agent 1
		UNC_M2_TXR_VERT_CYCLES_FULL_MASK_IV = 0x800, // Cycles CMS Vertical Egress Queue Is Full -- IV
		UNC_M2_TXR_VERT_CYCLES_NE = 0x93, // Number of cycles the Common Mesh Stop Egress was Not Empty.  The Egress is used to queue up requests destined for the Vertical Ring on the Mesh.
		UNC_M2_TXR_VERT_CYCLES_NE_MASK_AD_AG0 = 0x100, // Cycles CMS Vertical Egress Queue Is Not Empty -- AD - Agent 0
		UNC_M2_TXR_VERT_CYCLES_NE_MASK_AD_AG1 = 0x1000, // Cycles CMS Vertical Egress Queue Is Not Empty -- AD - Agent 1
		UNC_M2_TXR_VERT_CYCLES_NE_MASK_AK_AG0 = 0x200, // Cycles CMS Vertical Egress Queue Is Not Empty -- AK - Agent 0
		UNC_M2_TXR_VERT_CYCLES_NE_MASK_AK_AG1 = 0x2000, // Cycles CMS Vertical Egress Queue Is Not Empty -- AK - Agent 1
		UNC_M2_TXR_VERT_CYCLES_NE_MASK_BL_AG0 = 0x400, // Cycles CMS Vertical Egress Queue Is Not Empty -- BL - Agent 0
		UNC_M2_TXR_VERT_CYCLES_NE_MASK_BL_AG1 = 0x4000, // Cycles CMS Vertical Egress Queue Is Not Empty -- BL - Agent 1
		UNC_M2_TXR_VERT_CYCLES_NE_MASK_IV = 0x800, // Cycles CMS Vertical Egress Queue Is Not Empty -- IV
		UNC_M2_TXR_VERT_INSERTS = 0x91, // Number of allocations into the Common Mesh Stop Egress.  The Egress is used to queue up requests destined for the Vertical Ring on the Mesh.
		UNC_M2_TXR_VERT_INSERTS_MASK_AD_AG0 = 0x100, // CMS Vert Egress Allocations -- AD - Agent 0
		UNC_M2_TXR_VERT_INSERTS_MASK_AD_AG1 = 0x1000, // CMS Vert Egress Allocations -- AD - Agent 1
		UNC_M2_TXR_VERT_INSERTS_MASK_AK_AG0 = 0x200, // CMS Vert Egress Allocations -- AK - Agent 0
		UNC_M2_TXR_VERT_INSERTS_MASK_AK_AG1 = 0x2000, // CMS Vert Egress Allocations -- AK - Agent 1
		UNC_M2_TXR_VERT_INSERTS_MASK_BL_AG0 = 0x400, // CMS Vert Egress Allocations -- BL - Agent 0
		UNC_M2_TXR_VERT_INSERTS_MASK_BL_AG1 = 0x4000, // CMS Vert Egress Allocations -- BL - Agent 1
		UNC_M2_TXR_VERT_INSERTS_MASK_IV = 0x800, // CMS Vert Egress Allocations -- IV
		UNC_M2_TXR_VERT_NACK = 0x98, // Counts number of Egress packets NACKed on to the Vertical Rinng
		UNC_M2_TXR_VERT_NACK_MASK_AD_AG0 = 0x100, // CMS Vertical Egress NACKs -- AD - Agent 0
		UNC_M2_TXR_VERT_NACK_MASK_AD_AG1 = 0x1000, // CMS Vertical Egress NACKs -- AD - Agent 1
		UNC_M2_TXR_VERT_NACK_MASK_AK_AG0 = 0x200, // CMS Vertical Egress NACKs -- AK - Agent 0
		UNC_M2_TXR_VERT_NACK_MASK_AK_AG1 = 0x2000, // CMS Vertical Egress NACKs -- AK - Agent 1
		UNC_M2_TXR_VERT_NACK_MASK_BL_AG0 = 0x400, // CMS Vertical Egress NACKs -- BL - Agent 0
		UNC_M2_TXR_VERT_NACK_MASK_BL_AG1 = 0x4000, // CMS Vertical Egress NACKs -- BL - Agent 1
		UNC_M2_TXR_VERT_NACK_MASK_IV = 0x800, // CMS Vertical Egress NACKs -- IV
		UNC_M2_TXR_VERT_OCCUPANCY = 0x90, // Occupancy event for the Egress buffers in the Common Mesh Stop  The egress is used to queue up requests destined for the Vertical Ring on the Mesh.
		UNC_M2_TXR_VERT_OCCUPANCY_MASK_AD_AG0 = 0x100, // CMS Vert Egress Occupancy -- AD - Agent 0
		UNC_M2_TXR_VERT_OCCUPANCY_MASK_AD_AG1 = 0x1000, // CMS Vert Egress Occupancy -- AD - Agent 1
		UNC_M2_TXR_VERT_OCCUPANCY_MASK_AK_AG0 = 0x200, // CMS Vert Egress Occupancy -- AK - Agent 0
		UNC_M2_TXR_VERT_OCCUPANCY_MASK_AK_AG1 = 0x2000, // CMS Vert Egress Occupancy -- AK - Agent 1
		UNC_M2_TXR_VERT_OCCUPANCY_MASK_BL_AG0 = 0x400, // CMS Vert Egress Occupancy -- BL - Agent 0
		UNC_M2_TXR_VERT_OCCUPANCY_MASK_BL_AG1 = 0x4000, // CMS Vert Egress Occupancy -- BL - Agent 1
		UNC_M2_TXR_VERT_OCCUPANCY_MASK_IV = 0x800, // CMS Vert Egress Occupancy -- IV
		UNC_M2_TXR_VERT_STARVED = 0x9a, // Counts injection starvation.  This starvation is triggered when the CMS Egress cannot send a transaction onto the Vertical ring for a long period of time.
		UNC_M2_TXR_VERT_STARVED_MASK_AD_AG0 = 0x100, // CMS Vertical Egress Injection Starvation -- AD - Agent 0
		UNC_M2_TXR_VERT_STARVED_MASK_AD_AG1 = 0x1000, // CMS Vertical Egress Injection Starvation -- AD - Agent 1
		UNC_M2_TXR_VERT_STARVED_MASK_AK_AG0 = 0x200, // CMS Vertical Egress Injection Starvation -- AK - Agent 0
		UNC_M2_TXR_VERT_STARVED_MASK_AK_AG1 = 0x2000, // CMS Vertical Egress Injection Starvation -- AK - Agent 1
		UNC_M2_TXR_VERT_STARVED_MASK_BL_AG0 = 0x400, // CMS Vertical Egress Injection Starvation -- BL - Agent 0
		UNC_M2_TXR_VERT_STARVED_MASK_BL_AG1 = 0x4000, // CMS Vertical Egress Injection Starvation -- BL - Agent 1
		UNC_M2_TXR_VERT_STARVED_MASK_IV = 0x800, // CMS Vertical Egress Injection Starvation -- IV
		UNC_M2_VERT_RING_AD_IN_USE = 0xa6, // Counts the number of cycles that the Vertical AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk
		UNC_M2_VERT_RING_AD_IN_USE_MASK_DN_EVEN = 0x400, // Vertical AD Ring In Use -- Down and Even
		UNC_M2_VERT_RING_AD_IN_USE_MASK_DN_ODD = 0x800, // Vertical AD Ring In Use -- Down and Odd
		UNC_M2_VERT_RING_AD_IN_USE_MASK_UP_EVEN = 0x100, // Vertical AD Ring In Use -- Up and Even
		UNC_M2_VERT_RING_AD_IN_USE_MASK_UP_ODD = 0x200, // Vertical AD Ring In Use -- Up and Odd
		UNC_M2_VERT_RING_AK_IN_USE = 0xa8, // Counts the number of cycles that the Vertical AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk
		UNC_M2_VERT_RING_AK_IN_USE_MASK_DN_EVEN = 0x400, // Vertical AK Ring In Use -- Down and Even
		UNC_M2_VERT_RING_AK_IN_USE_MASK_DN_ODD = 0x800, // Vertical AK Ring In Use -- Down and Odd
		UNC_M2_VERT_RING_AK_IN_USE_MASK_UP_EVEN = 0x100, // Vertical AK Ring In Use -- Up and Even
		UNC_M2_VERT_RING_AK_IN_USE_MASK_UP_ODD = 0x200, // Vertical AK Ring In Use -- Up and Odd
		UNC_M2_VERT_RING_BL_IN_USE = 0xaa, // Counts the number of cycles that the Vertical BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk
		UNC_M2_VERT_RING_BL_IN_USE_MASK_DN_EVEN = 0x400, // Vertical BL Ring in Use -- Down and Even
		UNC_M2_VERT_RING_BL_IN_USE_MASK_DN_ODD = 0x800, // Vertical BL Ring in Use -- Down and Odd
		UNC_M2_VERT_RING_BL_IN_USE_MASK_UP_EVEN = 0x100, // Vertical BL Ring in Use -- Up and Even
		UNC_M2_VERT_RING_BL_IN_USE_MASK_UP_ODD = 0x200, // Vertical BL Ring in Use -- Up and Odd
		UNC_M2_VERT_RING_IV_IN_USE = 0xac, // Counts the number of cycles that the Vertical IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk
		UNC_M2_VERT_RING_IV_IN_USE_MASK_DN = 0x400, // Vertical IV Ring in Use -- Down
		UNC_M2_VERT_RING_IV_IN_USE_MASK_UP = 0x100, // Vertical IV Ring in Use -- Up
		UNC_M2_WPQ_CYCLES_REG_CREDITS = 0x4d, // TBD
		UNC_M2_WPQ_CYCLES_REG_CREDITS_MASK_CHN0 = 0x100, // M2M->iMC WPQ Cycles w/Credits - Regular -- Channel 0
		UNC_M2_WPQ_CYCLES_REG_CREDITS_MASK_CHN1 = 0x200, // M2M->iMC WPQ Cycles w/Credits - Regular -- Channel 1
		UNC_M2_WPQ_CYCLES_REG_CREDITS_MASK_CHN2 = 0x400, // M2M->iMC WPQ Cycles w/Credits - Regular -- Channel 2
		UNC_M2_WPQ_CYCLES_SPEC_CREDITS = 0x4e, // TBD
		UNC_M2_WPQ_CYCLES_SPEC_CREDITS_MASK_CHN0 = 0x100, // M2M->iMC WPQ Cycles w/Credits - Special -- Channel 0
		UNC_M2_WPQ_CYCLES_SPEC_CREDITS_MASK_CHN1 = 0x200, // M2M->iMC WPQ Cycles w/Credits - Special -- Channel 1
		UNC_M2_WPQ_CYCLES_SPEC_CREDITS_MASK_CHN2 = 0x400, // M2M->iMC WPQ Cycles w/Credits - Special -- Channel 2
		UNC_M2_WRITE_TRACKER_CYCLES_FULL = 0x4a, // TBD
		UNC_M2_WRITE_TRACKER_CYCLES_FULL_MASK_CH0 = 0x100, // Write Tracker Cycles Full -- Channel 0
		UNC_M2_WRITE_TRACKER_CYCLES_FULL_MASK_CH1 = 0x200, // Write Tracker Cycles Full -- Channel 1
		UNC_M2_WRITE_TRACKER_CYCLES_FULL_MASK_CH2 = 0x400, // Write Tracker Cycles Full -- Channel 2
		UNC_M2_WRITE_TRACKER_CYCLES_NE = 0x4b, // TBD
		UNC_M2_WRITE_TRACKER_CYCLES_NE_MASK_CH0 = 0x100, // Write Tracker Cycles Not Empty -- Channel 0
		UNC_M2_WRITE_TRACKER_CYCLES_NE_MASK_CH1 = 0x200, // Write Tracker Cycles Not Empty -- Channel 1
		UNC_M2_WRITE_TRACKER_CYCLES_NE_MASK_CH2 = 0x400, // Write Tracker Cycles Not Empty -- Channel 2
		UNC_M2_WRITE_TRACKER_INSERTS = 0x61, // TBD
		UNC_M2_WRITE_TRACKER_INSERTS_MASK_CH0 = 0x100, // Write Tracker Inserts -- Channel 0
		UNC_M2_WRITE_TRACKER_INSERTS_MASK_CH1 = 0x200, // Write Tracker Inserts -- Channel 1
		UNC_M2_WRITE_TRACKER_INSERTS_MASK_CH2 = 0x400, // Write Tracker Inserts -- Channel 2
		UNC_M2_WRITE_TRACKER_OCCUPANCY = 0x60, // TBD
		UNC_M2_WRITE_TRACKER_OCCUPANCY_MASK_CH0 = 0x100, // Write Tracker Occupancy -- Channel 0
		UNC_M2_WRITE_TRACKER_OCCUPANCY_MASK_CH1 = 0x200, // Write Tracker Occupancy -- Channel 1
		UNC_M2_WRITE_TRACKER_OCCUPANCY_MASK_CH2 = 0x400, // Write Tracker Occupancy -- Channel 2
		};};